encoding=UTF-8

; this should stop TS from looking for the CAN ID in the 2nd byte location and allow the page reads to work correctly.
enable2ndByteCanID = false

[SettingGroups]
   	; the referenceName will over-ride previous, so if you are creating a 
   	; settingGroup with a reference name of lambdaSensor, it will replace the 
   	; setting group defined in the settingGroups.xml of the TunerStudio config
   	; folder. If is is an undefined referenceName, it will be added.
   	; keyword    =  referenceName,  DisplayName

[MegaTune]
 ; https://rusefi.com/forum/viewtopic.php?p=36201#p36201
 	signature    = "MS Ext" 

[TunerStudio]
   queryCommand   = "S"
   versionInfo    = "V"  ; firmwave version for title bar.
   signature    = "MS Ext" ; signature is expected to be 7 or more characters.

  

[KeyActions]          

showPanel = fp1,  allPins1 
showPanel = fp2,  allPins2 
showPanel = dbg,  debug
showPanel = con,  connection
showPanel = sim,  ecuStimulator
	    
 
		
[Constants]
; new packet serial format with CRC
   messageEnvelopeFormat = msEnvelope_1.0

   endianness          = little
   nPages              = 1
   pageSize = 11000
 pageIdentifier      = "\x00\x00"
   ;pageReadCommand     = "R%2o%2c"
   ;burnCommand         = "B"
   ;pageActivate        = "P"
   ;pageValueWrite      = "W%2o%v"
   ;pageChunkWrite      = "C%2o%2c%v"
   ;crc32CheckCommand   = "k%2o%2c"
 ; crc32CheckCommand   = "k%2o\x00\x00\x00\x04"
  ; retrieveConfigError = "e"

 

 
   pageReadCommand     = "R\x00\x00%2o%2c"
   burnCommand         = "B\x00\x00"
   pageActivate        = "P\x00\x00"
   pageValueWrite      = "W\x00\x00%2o%v"
   pageChunkWrite      = "C\x00\x00%2o%2c%v"
  ; crc32CheckCommand   = "k\x00\x00\%2o%2c"
   crc32CheckCommand   = "k\x00\x00\x00\x00\x00\x00"
   retrieveConfigError = "e"

;communication settings
  
;e.g. put writeblocks off and add an interwrite delay
  ; writeBlocks = on
   interWriteDelay = 5 ;Ignored when tsWriteBlocks is on
    pageActivationDelay = 10
   blockReadTimeout    = 3000; Milliseconds general timeout
   
  delayAfterPortOpen = 1000 
   
   blockingFactor = 256 ; max chunk size
;end communication settings

   
; CONFIG_DEFINITION_START
; this section was generated automatically by rusEfi tool ConfigDefinition.jar based on gen_config.bat integration\rusefi_config.txt Mon Aug 31 12:07:27 CEST 2020

pageSize            = 11000
page = 1
;no TS info - skipping unused81 offset 0
	injector_size					= scalar, F32,	4,	"cm3/min", 1, 0, 0, 99999, 2
	injector_battLagCorrBins		= array, F32,	8,	[8],	"volts", 1, 0, 0.0, 20.0, 2
	injector_battLagCorr			= array, F32,	40,	[8],	"ms", 1, 0, 0.0, 50.0, 2
	trigger_type				 = bits, U32, 72, [0:5], "custom toothed wheel", "Ford Aspire", "INVALID", "Miata NA", "Miata NB", "GM_7X", "Cooper R50", "Mazda SOHC 4", "60-2", "36-1", "Honda 4+24+1", "Mitsubishi", "Honda 4+24", "Honda 1+4+24", "Dodge Neon", "Mazda DOHC 1+4", "1+1", "1+60-2", "Single Tooth", "Dodge Ram 1+16", "60-2 VW", "Honda 1+24", "INVALID", "36_2_2_2", "Nissan Primera", "dev 2JZ 3/34 simulator", "Rover K", "GM LS 24", "Honda CBR 600", "2JZ_1_12", "INVALID", "3-1 skipped" , "INVALID", "Miata VVT", "trg34", "trg35", "Subaru 7+6", "Jeep 18-2-2-2", "INVALID", "INVALID", "Jeep XJ 4 cyl", "FiatIAQ_P8", "Mazda Z5", "trg43", "Renix 44-2-2", "Renix 66-2-2-2", "Honda K 12+1", "Bosch Quick-Start", "36-2", "Subaru SVX", "Vw 60-2 VVT", "Trg 51"
;no TS info - skipping trigger_unused95 offset 76
	trigger_numTeeth				= scalar, S32,	80,	"number", 1, 0.0, 0, 500.0, 0
	trigger_missingTeeth			= scalar, S32,	84,	"number", 1, 0.0, 0, 500.0, 0
	displacement					= scalar, F32,	88,	"L", 1, 0, 0, 1000.0, 2
	cylindersCount				 = bits, U32, 92, [0:3], "INVALID", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, "INVALID", "INVALID", "INVALID"
	firingOrder					 = bits, U32, 96, [0:7], "One Cylinder", "1-3-4-2", "1-2-4-3", "1-3-2-4", "1-5-3-6-2-4", "1-8-4-3-6-5-7-2", "1-2-4-5-3", "1-4-2-5-3-6", "1-2", "1_2_3_4_5_6", "1-2-3", "1-8-7-2-6-5-4-3", "1-5-4-2-6-3-7-8", "1-6-3-2-5-4", "1-10-9-4-3-6-5-8-7_2", "1-7-5-11-3-9-6-12-2-8-4-10", "1-7-4-10-2-8-6-12-3-9-5-11", "1-4-3-2", "1-12-5-8-3-10-6-7-2-11-4-9", "1-2-7-8-4-5-6-3", "1-3-7-2-6-5-4-8", "1-2-3-4-5-6-7-8-9", "fo22", "fo23", "fo24", "fo25", "INVALID"
	rpmLimit						= scalar, S32,	100,	"rpm", 1, 0, 0, 20000.0, 2
	fuelAlgorithm				 = bits, U32, 104, [0:2], "INVALID", "INVALID", "INVALID", "Speed Density", "MAF Air Charge", "Alpha-N", "INVALID"
	crankingInjectionMode		 = bits, U32, 108, [0:1], "Simultaneous", "Sequential", "Batch", "Single Point"
	injectionMode				 = bits, U32, 112, [0:1], "Simultaneous", "Sequential", "Batch", "Single Point"
	extraInjectionOffset			= scalar, F32,	116,	"deg", 1, 0.0, -720, 720, 2
	fixedCrankingTiming				= scalar, F32,	120,	 "deg", 1, 0.0, -360, 360, 2
	ignitionMode				 = bits, U32, 124, [0:1], "One coil", "Individual Coils", "Wasted", "Two distributors"
	ignitionOffset					= scalar, F32,	128,	"RPM", 1, 0, 0, 3000.0, 0
	timingMode					 = bits, U32, 132 [0:2], "dynamic", "fixed", "INVALID", "INVALID"
	fixedModeTiming					= scalar, F32,	136,	"RPM", 1, 0, 0, 3000.0, 0
	globalTriggerAngleOffset		= scalar, F32,	140,	"deg", 1, 0, -720, 720, 0
	ambiguousOperationMode		 = bits, U32, 144, [0:1], "INVALID", "Crank", "Cam", "INVALID"
	enableThrottlePumps		= bits,    U32,   	148, [0:0], "false", "true"
	cj125isLsu49			= bits,    U32,   	148, [1:1], "LSU 4.2", "LSU 4.9"
	etb_use_two_wires		= bits,    U32,   	148, [2:2], "No", "Yes"
	isDoubleSolenoidIdle	= bits,    U32,   	148, [3:3], "No", "Yes"
	enableTpsTpsAe			= bits,    U32,   	148, [4:4], "false", "true"
	useTLE8888_cranking_hack= bits,    U32,   	148, [5:5], "No", "Yes"
	useInstantRpmForIdle	= bits,    U32,   	148, [6:6], "No", "Yes"
	absoluteFuelPressure	= bits,    U32,   	148, [7:7], "No", "Yes"
	launchControlEnabled	= bits,    U32,   	148, [8:8], "No", "Yes"
	antiLagEnabled			= bits,    U32,   	148, [9:9], "No", "Yes"
	useRunningMathForCranking= bits,    U32,   	148, [10:10], "Fixed", "Fuel Map"
	displayLogicLevelsInEngineSniffer= bits,    U32,   	148, [11:11], "false", "true"
	triggerTestMinGap		= bits,    U32,   	148, [12:12], "false", "true"
	triggerTestMaxEvents	= bits,    U32,   	148, [13:13], "false", "true"
	triggerDisableError		= bits,    U32,   	148, [14:14], "false", "true"
	useCicPidForIdle		= bits,    U32,   	148, [15:15], "No", "Yes"
	isCJ125Enabled			= bits,    U32,   	148, [16:16], "No", "Yes"
	vvtCamSensorUseRise		= bits,    U32,   	148, [17:17], "Falling", "Rising"
	measureMapOnlyInOneCylinder= bits,    U32,   	148, [18:18], "No", "Yes"
	stepperForceParkingEveryRestart= bits,    U32,   	148, [19:19], "No", "Yes"
	isFasterEngineSpinUpEnabled= bits,    U32,   	148, [20:20], "No", "Yes"
	enableDfco				= bits,    U32,   	148, [21:21], "No", "Yes"
	useIacTableForCoasting	= bits,    U32,   	148, [22:22], "No", "Yes"
	enableTriggerFilter		= bits,    U32,   	148, [23:23], "No", "Yes"
	useSerialPort			= bits,    U32,   	148, [24:24], "No", "Yes"
	useStepperIdle			= bits,    U32,   	148, [25:25], "No", "Yes"
	enableVerboseCanTx		= bits,    U32,   	148, [26:26], "No", "Yes"
	onOffAlternatorLogic	= bits,    U32,   	148, [27:27], "No", "Yes"
	alignEngineSnifferAtTDC	= bits,    U32,   	148, [28:28], "No", "Yes"
	useETBforIdleControl	= bits,    U32,   	148, [29:29], "No", "Yes"
	idleIncrementalPidCic	= bits,    U32,   	148, [30:30], "No", "Yes"
	enableAemXSeries		= bits,    U32,   	148, [31:31], "No", "Yes"
;no TS info - skipping unused99 offset 152
	fuelClosedLoopCorrectionEnabled= bits,    U32,   	156, [0:0], "No", "Yes"
	enableFixedDwellCranking= bits,    U32,   	156, [1:1], "No", "Yes"
	useLinearCltSensor		= bits,    U32,   	156, [2:2], "No", "Yes"
	canReadEnabled			= bits,    U32,   	156, [3:3], "No", "Yes"
	canWriteEnabled			= bits,    U32,   	156, [4:4], "No", "Yes"
	useLinearIatSensor		= bits,    U32,   	156, [5:5], "No", "Yes"
	tachPulseDurationAsDutyCycle= bits,    U32,   	156, [6:6], "No", "Yes"
	enableAlternatorControl	= bits,    U32,   	156, [7:7], "No", "Yes"
	trigger1Edge			= bits,    U32,   	156, [8:8], "Inverted", "Normal"
	trigger2Edge			= bits,    U32,   	156, [9:9], "Falling", "Rising"
	cutFuelOnHardLimit		= bits,    U32,   	156, [10:10], "No", "Yes"
	cutSparkOnHardLimit		= bits,    U32,   	156, [11:11], "No", "Yes"
	enableLaunchFuelCut		= bits,    U32,   	156, [12:12], "No", "Yes"
	enableLaunchIgnCut		= bits,    U32,   	156, [13:13], "No", "Yes"
	useIdleTimingPidControl	= bits,    U32,   	156, [14:14], "No", "Yes"
	useTPSBasedVeTable		= bits,    U32,   	156, [15:15], "No", "Yes"
	invertCamVVTSignal		= bits,    U32,   	156, [16:16], "No", "Yes"
	todoClutchDownPinInverted= bits,    U32,   	156, [17:17], "No", "Yes"
	useHbridges				= bits,    U32,   	156, [18:18], "No", "Yes"
	multisparkEnable		= bits,    U32,   	156, [19:19], "No", "Yes"
	enableCanVss			= bits,    U32,   	156, [20:20], "false", "true"
	enableInnovateLC2		= bits,    U32,   	156, [21:21], "false", "true"
	enableLaunchBoost		= bits,    U32,   	156, [22:22], "No", "Yes"
	stftIgnoreErrorMagnitude= bits,    U32,   	156, [23:23], "false", "true"
	silentTriggerError		= bits,    U32,   	156, [24:24], "No", "Yes"
	useSolenoidIdle			= bits,    U32,   	156, [25:25], "No", "Yes"
	useSecondEtb			= bits,    U32,   	156, [26:26], "No", "Yes"
	enableAntiLagAir		= bits,    U32,   	156, [27:27], "No", "Yes"
	enableAntiLagFuel		= bits,    U32,   	156, [28:28], "No", "Yes"
	syncMode				= bits,    U32,   	156, [29:29], "No", "Yes"
	useLaunchActivateDelay	= bits,    U32,   	156, [30:30], "No", "Yes"
	isVvtControlEnabled		= bits,    U32,   	156, [31:31], "No", "Yes"
;no TS info - skipping unused75 offset 160
	enableInjectors			= bits,    U32,   	164, [0:0], "No", "Yes"
	enableIgnition			= bits,    U32,   	164, [1:1], "No", "Yes"
	isCylinderCleanupEnabled= bits,    U32,   	164, [2:2], "No", "Yes"
	secondTriggerChannelEnabled= bits,    U32,   	164, [3:3], "No", "Yes"
	overrideCrankingIacSetting= bits,    U32,   	164, [4:4], "No", "Yes"
	useSeparateAdvanceForIdle= bits,    U32,   	164, [5:5], "No", "Yes"
	useSeparateVeForIdle	= bits,    U32,   	164, [6:6], "No", "Yes"
	isManualSpinningMode	= bits,    U32,   	164, [7:7], "No", "Yes"
	twoWireBatchInjection	= bits,    U32,   	164, [8:8], "No", "Yes"
	useOnlyRisingEdgeForTrigger= bits,    U32,   	164, [9:9], "Hall", "VR"
	twoWireBatchIgnition	= bits,    U32,   	164, [10:10], "No", "Yes"
	useFixedBaroCorrFromMap	= bits,    U32,   	164, [11:11], "No", "Yes"
	enableCrankingTimingTable= bits,    U32,   	164, [12:12], "No", "Yes"
	useAdvanceCorrectionsForCranking= bits,    U32,   	164, [13:13], "No", "Yes"
	useTPSAdvanceTable		= bits,    U32,   	164, [14:14], "No", "Yes"
	useIacPidMultTable		= bits,    U32,   	164, [15:15], "No", "Yes"
	isBoostControlEnabled	= bits,    U32,   	164, [16:16], "No", "Yes"
	launchSmoothRetard		= bits,    U32,   	164, [17:17], "No", "Yes"
	verboseTriggerSynchDetails= bits,    U32,   	164, [18:18], "No", "Yes"
	sensorType				= bits,    U32,   	164, [19:19], "VR", "Hall"
	dcMotorIdleValve		= bits,    U32,   	164, [20:20], "false", "true"
	enableAntiLagBoost		= bits,    U32,   	164, [21:21], "No", "Yes"
	enableAntiLagRetard		= bits,    U32,   	164, [22:22], "No", "Yes"
	launchDisableBySpeed	= bits,    U32,   	164, [23:23], "No", "Yes"
	enableLaunchRetard		= bits,    U32,   	164, [24:24], "No", "Yes"
	tuneCj125Pid			= bits,    U32,   	164, [25:25], "No", "Yes"
	cj125AutoChangeMode		= bits,    U32,   	164, [26:26], "No", "Yes"
	diagnoseTLE8888			= bits,    U32,   	164, [27:27], "No", "Yes"
	enableLaunchFuel		= bits,    U32,   	164, [28:28], "No", "Yes"
	invertLaunchSwitch		= bits,    U32,   	164, [29:29], "No", "Yes"
	isVerboseTriggerSynchDetails= bits,    U32,   	164, [30:30], "false", "true"
	verboseVVTDecoding		= bits,    U32,   	164, [31:31], "false", "true"
	auxFastSensor1_adcChannel	 = bits, U08, 168, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	tps1_2AdcChannel			 = bits, U08, 169, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	tps2_2AdcChannel			 = bits, U08, 170, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	throttlePedalPositionSecondAdcChannel	 = bits, U08, 171, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	tps1_1AdcChannel			 = bits, U08, 172, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	vbattAdcChannel				 = bits, U08, 173, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	fuelLevelSensor				 = bits, U08, 174, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	tps2_1AdcChannel			 = bits, U08, 175, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	high_fuel_pressure_sensor_1	 = bits, U08, 176, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	high_fuel_pressure_sensor_2	 = bits, U08, 177, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	mafAdcChannel				 = bits, U08, 178, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	throttlePedalPositionAdcChannel	 = bits, U08, 179, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping unused120 offset 180
	auxVoltage1					 = bits, U08, 182, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	auxVoltage2					 = bits, U08, 183, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	externalKnockSenseAdc		 = bits, U08, 184, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	hipOutputChannel			 = bits, U08, 185, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	acSwitchAdc					 = bits, U08, 186, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	vRefAdcChannel				 = bits, U08, 187, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
	pinInjector1				 = bits, U08, 188, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	pinInjector2				 = bits, U08, 189, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector3				 = bits, U08, 190, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector4				 = bits, U08, 191, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector5				 = bits, U08, 192, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	pinInjector6				 = bits, U08, 193, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector7				 = bits, U08, 194, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector8				 = bits, U08, 195, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector9				 = bits, U08, 196, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector10				 = bits, U08, 197, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector11				 = bits, U08, 198, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinInjector12				 = bits, U08, 199, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil1					 = bits, U08, 200, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil2					 = bits, U08, 201, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil3					 = bits, U08, 202, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil4					 = bits, U08, 203, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil5					 = bits, U08, 204, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil6					 = bits, U08, 205, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil7					 = bits, U08, 206, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil8					 = bits, U08, 207, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil9					 = bits, U08, 208, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil10					 = bits, U08, 209, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	pinCoil11					 = bits, U08, 210, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinCoil12					 = bits, U08, 211, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinAlternator				 = bits, U08, 212, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinFuelPump					 = bits, U08, 213, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	pinFan						 = bits, U08, 214, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinMainRelay				 = bits, U08, 215, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinAcRelay					 = bits, U08, 216, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	pinTacho					 = bits, U08, 217, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	pinStartRelay				 = bits, U08, 218, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	boostControlPin				 = bits, U08, 219, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	starterControlPin			 = bits, U08, 220, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
;no TS info - skipping unused104 offset 221
	pinTachoMode				 = bits, U08, 224, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinFuelPumpMode				 = bits, U08, 225, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinInjectorMode				 = bits, U08, 226, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	sparkEdge					 = bits, U08, 227, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinFanMode					 = bits, U08, 228, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinAlternatorMode			 = bits, U08, 229, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinMainRelayMode			 = bits, U08, 230, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinAcRelayMode				 = bits, U08, 231, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	starterRelayDisableMode		 = bits, U08, 232, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinStepperDirectionMode		 = bits, U08, 233, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	boostControlPinMode			 = bits, U08, 234, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	pinStepperEnableMode		 = bits, U08, 235, [0:1], "default", "default inverted", "open collector", "open collector inverted"
;no TS info - skipping unused17 offset 236
	pinStepperEnable			 = bits, U08, 239, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	enableSoftwareKnock		= bits,    U32,   	240, [0:0], "false", "true"
	unusedBit_160_1			= bits,    U32,   	240, [1:1], "false", "true"
	unusedBit_160_2			= bits,    U32,   	240, [2:2], "false", "true"
	unusedBit_160_3			= bits,    U32,   	240, [3:3], "false", "true"
	unusedBit_160_4			= bits,    U32,   	240, [4:4], "false", "true"
	unusedBit_160_5			= bits,    U32,   	240, [5:5], "false", "true"
	unusedBit_160_6			= bits,    U32,   	240, [6:6], "false", "true"
	unusedBit_160_7			= bits,    U32,   	240, [7:7], "false", "true"
	unusedBit_160_8			= bits,    U32,   	240, [8:8], "false", "true"
	unusedBit_160_9			= bits,    U32,   	240, [9:9], "false", "true"
	unusedBit_160_10		= bits,    U32,   	240, [10:10], "false", "true"
	unusedBit_160_11		= bits,    U32,   	240, [11:11], "false", "true"
	unusedBit_160_12		= bits,    U32,   	240, [12:12], "false", "true"
	unusedBit_160_13		= bits,    U32,   	240, [13:13], "false", "true"
	unusedBit_160_14		= bits,    U32,   	240, [14:14], "false", "true"
	unusedBit_160_15		= bits,    U32,   	240, [15:15], "false", "true"
	unusedBit_160_16		= bits,    U32,   	240, [16:16], "false", "true"
	unusedBit_160_17		= bits,    U32,   	240, [17:17], "false", "true"
	unusedBit_160_18		= bits,    U32,   	240, [18:18], "false", "true"
	unusedBit_160_19		= bits,    U32,   	240, [19:19], "false", "true"
	unusedBit_160_20		= bits,    U32,   	240, [20:20], "false", "true"
	unusedBit_160_21		= bits,    U32,   	240, [21:21], "false", "true"
	unusedBit_160_22		= bits,    U32,   	240, [22:22], "false", "true"
	unusedBit_160_23		= bits,    U32,   	240, [23:23], "false", "true"
	unusedBit_160_24		= bits,    U32,   	240, [24:24], "false", "true"
	unusedBit_160_25		= bits,    U32,   	240, [25:25], "false", "true"
	unusedBit_160_26		= bits,    U32,   	240, [26:26], "false", "true"
	unusedBit_160_27		= bits,    U32,   	240, [27:27], "false", "true"
	unusedBit_160_28		= bits,    U32,   	240, [28:28], "false", "true"
	unusedBit_160_29		= bits,    U32,   	240, [29:29], "false", "true"
	unusedBit_160_30		= bits,    U32,   	240, [30:30], "false", "true"
	unusedBit_160_31		= bits,    U32,   	240, [31:31], "false", "true"
;no TS info - skipping unused117 offset 244
	canTxPin					 = bits, U08, 248, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	canRxPin					 = bits, U08, 249, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	secondSolenoidPin			 = bits, U08, 250, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialRxPin			 = bits, U08, 251, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialTxPin			 = bits, U08, 252, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping unused111 offset 253
	triggerErrorPin				 = bits, U08, 258, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	debugTriggerSync			 = bits, U08, 259, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	triggerErrorPinMode			 = bits, U08, 260, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	debugTriggerSyncMode		 = bits, U08, 261, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	auxSerialTxPin				 = bits, U08, 262, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	auxSerialRxPin				 = bits, U08, 263, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	tcuUpshiftButtonPin			 = bits, U08, 264, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	tcuDownshiftButtonPin		 = bits, U08, 265, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	clutchUpPin					 = bits, U08, 266, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	antiLagActivatePin			 = bits, U08, 267, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	launchActivatePin			 = bits, U08, 268, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	brakePedalPin				 = bits, U08, 269, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	throttlePedalUpPin			 = bits, U08, 270, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	clutchDownPin				 = bits, U08, 271, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch
	startStopButtonPin			 = bits, U08, 272, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Brake Switch","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
;no TS info - skipping unused105 offset 273
	startStopButtonMode			 = bits, U08, 276, [0:1], "Default", "Pull-Up", "Pull-Down", "INVALID"
	clutchDownPinMode			 = bits, U08, 277, [0:1], "Default", "Pull-Up", "Pull-Down", "INVALID"
	clutchUpPinMode				 = bits, U08, 278, [0:1], "Default", "Pull-Up", "Pull-Down", "INVALID"
	brakePedalPinMode			 = bits, U08, 279, [0:1], "Default", "Pull-Up", "Pull-Down", "INVALID"
	throttlePedalUpPinMode		 = bits, U08, 280, [0:1], "Default", "Pull-Up", "Pull-Down", "INVALID"
;no TS info - skipping unused108 offset 281
	pinCam1						 = bits, U08, 284, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinCam2						 = bits, U08, 285, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinCam3						 = bits, U08, 286, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinCam4						 = bits, U08, 287, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinTrigger1					 = bits, U08, 288, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinTrigger2					 = bits, U08, 289, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	pinTrigger3					 = bits, U08, 290, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
;no TS info - skipping unused109 offset 291
	vehicleSpeedSensorInputPin	 = bits, U08, 292, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
;no TS info - skipping unused54 offset 293
	etbIo1_directionPin1		 = bits, U08, 296, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_directionPin2		 = bits, U08, 297, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_controlPin1			 = bits, U08, 298, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_disablePin			 = bits, U08, 299, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_directionPin1		 = bits, U08, 300, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_directionPin2		 = bits, U08, 301, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_controlPin1			 = bits, U08, 302, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_disablePin			 = bits, U08, 303, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo21_directionPin1		 = bits, U08, 304, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo21_directionPin2		 = bits, U08, 305, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo21_controlPin1			 = bits, U08, 306, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo21_disablePin			 = bits, U08, 307, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo22_directionPin1		 = bits, U08, 308, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo22_directionPin2		 = bits, U08, 309, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo22_controlPin1			 = bits, U08, 310, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo22_disablePin			 = bits, U08, 311, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping unused107 offset 312
	debugMode					 = bits, U32, 316, [0:7], "Alternator PID", "TPS acceleration enrichment", "INVALID", "Idle Control", "Engine Load accl enrich", "Trigger Counters", "FSIO_ADC", "AUX_PID_1", "VVT input", "Cranking", "Timing", "Closed-loop fuel corr PID", "VSS", "SD card", "sr5", "Knock", "mode16", "Electronic Throttle", "Executor", "Bench Test / TS commands", "Aux Valves", "Analog inputs #1", "INSTANT_RPM", "FSIO_EXPRESSION", "Status", "CJ125", "CAN", "MAP", "Metrics", "ETB#2", "Ion Sense", "TLE8888", "Analog inputs #2", "Dwell Metric", "INVALID", "ETB Logic", "Boost Control", "Start/Stop", "Launch", "ETB Autotune", "Trigger Timing"
	cranking_baseFuel				= scalar, F32,	320,	"ms", 1, 0, 0, 200, 1
;no TS info - skipping cranking_pad offset 324
	cranking_rpm					= scalar, S16,	326,	"RPM", 1, 0, 0, 3000, 0
	primingSquirtDurationMs			= scalar, F32,	328,	"*C", 1, 0, -40, 200, 1
	ignitionDwellForCrankingMs		= scalar, F32,	332,	"ms", 1, 0, 0, 200, 1
	crankingChargeAngle				= scalar, F32,	336,	"deg", 1, 0, 0, 3000.0, 0
	map_sensor_lowValue				= scalar, F32,	340,	"kpa", 1, 0, -400, 800, 2
	map_sensor_highValue			= scalar, F32,	344,	"kpa", 1, 0, -400, 800, 2
	map_sensor_hwChannel		 = bits, U08, 348, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping map_sensor_align offset 349
	clt_tempC_1						= scalar, F32,	352,	"*C", 1, 0, -40, 200, 1
	clt_tempC_2						= scalar, F32,	356,	"*C", 1, 0, -40, 200, 1
	clt_tempC_3						= scalar, F32,	360,	"*C", 1, 0, -40, 200, 1
	clt_resistance_1				= scalar, F32,	364,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_2				= scalar, F32,	368,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_3				= scalar, F32,	372,	"Ohm", 1, 0, 0, 200000, 1
	clt_bias_resistor				= scalar, F32,	376,	"Ohm", 1, 0, 0, 200000, 1
	clt_adcChannel				 = bits, U08, 380, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping clt_pad offset 381
	iat_tempC_1						= scalar, F32,	384,	"*C", 1, 0, -40, 200, 1
	iat_tempC_2						= scalar, F32,	388,	"*C", 1, 0, -40, 200, 1
	iat_tempC_3						= scalar, F32,	392,	"*C", 1, 0, -40, 200, 1
	iat_resistance_1				= scalar, F32,	396,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_2				= scalar, F32,	400,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_3				= scalar, F32,	404,	"Ohm", 1, 0, 0, 200000, 1
	iat_bias_resistor				= scalar, F32,	408,	"Ohm", 1, 0, 0, 200000, 1
	iat_adcChannel				 = bits, U08, 412, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping iat_pad offset 413
	auxTempSensor1_tempC_1			= scalar, F32,	416,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_2			= scalar, F32,	420,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_3			= scalar, F32,	424,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_resistance_1		= scalar, F32,	428,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_2		= scalar, F32,	432,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_3		= scalar, F32,	436,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_bias_resistor		= scalar, F32,	440,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_adcChannel	 = bits, U08, 444, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping auxTempSensor1_pad offset 445
	auxTempSensor2_tempC_1			= scalar, F32,	448,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_2			= scalar, F32,	452,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_3			= scalar, F32,	456,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_resistance_1		= scalar, F32,	460,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_2		= scalar, F32,	464,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_3		= scalar, F32,	468,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_bias_resistor		= scalar, F32,	472,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_adcChannel	 = bits, U08, 476, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping auxTempSensor2_pad offset 477
	afr_hwChannel				 = bits, U08, 480, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping afr_alignAf offset 481
	afr_v1							= scalar, F32,	484,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value1						= scalar, F32,	488,	 "AFR", 1, 0.0, 0, 1000.0, 2
	afr_v2							= scalar, F32,	492,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value2						= scalar, F32,	496,	 "AFR", 1, 0.0, 0, 1000.0, 2
	baroSensor_lowValue				= scalar, F32,	500,	"kpa", 1, 0, -400, 800, 2
	baroSensor_highValue			= scalar, F32,	504,	"kpa", 1, 0, -400, 800, 2
	baroSensor_hwChannel		 = bits, U08, 508, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping baroSensor_align offset 509
	afr_type					 = bits, S32, 512, [0:3], "BPSX", "Innovate", "14Point7", "Narrow", "PLX", "Custom", "AEM", "Internal WideBand", "INVALID", "INVALID", "INVALID"
	analogInputDividerCoefficient		= scalar, F32,	516,	"coef", 1, 0, 0.01, 10.0, 2
	vbattDividerCoeff				= scalar, F32,	520,	"coef", 1, 0, 0.01, 99.0, 2
	fanOnTemperature				= scalar, F32,	524,	"*C", 1, 0, 0, 1000.0, 0
	fanOffTemperature				= scalar, F32,	528,	"*C", 1, 0, 0, 1000.0, 0
	vehicleSpeedCoef				= scalar, F32,	532,	"coef", 1, 0, 0.01, 2000.0, 2
	canNbcType					 = bits, U32, 536, [0:7], "None", "FIAT", "VAG" , "MAZDA RX8", "BMW", "W202"
;no TS info - skipping unused122 offset 540
	canSleepPeriodMs				= scalar, S32,	544,	"ms", 1, 0, 0, 1000.0, 2
;no TS info - skipping unused123 offset 548
	triggerSimulatorFrequency		= scalar, S32,	552,	"Rpm", 1, 0, 0,30000, 0
	boostPwmFrequency				= scalar, S32,	556,	"Hz", 1, 0, 0, 3000.0, 0
	alternatorPwmFrequency			= scalar, S32,	560,	"Hz", 1, 0, 0, 3000.0, 0
	ignMathCalculateAtIndex			= scalar, S32,	564,	"index", 1, 0, 0, 7000, 0
	globalFuelCorrection			= scalar, F32,	568,	"coef", 1, 0.0, 0, 1000.0, 2
	adcVcc							= scalar, F32,	572,	 "volts", 1, 0.0, 0, 6.0, 3
	maxKnockSubDeg					= scalar, F32,	576,	"Deg", 1, 0, 0, 100, 0
	manIdlePosition					= scalar, F32,	580,	"%", 1, 0, 0, 100, 0
	fuelLevelEmptyTankVoltage		= scalar, F32,	584,	"V", 1, 0, 0,10, 2
	fuelLevelFullTankVoltage		= scalar, F32,	588,	"V", 1, 0, 0,10, 2
	idle_solenoidFrequency			= scalar, S32,	592,	"Hz", 1, 0, 0, 3000, 0
	idle_solenoidPin			 = bits, U08, 596, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	idle_pinStepperDirection	 = bits, U08, 597, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_stepperStepPin			 = bits, U08, 598, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_solenoidPinMode		 = bits, U08, 599, [0:1], "default", "default inverted", "open collector", "open collector inverted"
	tunerStudioSerialSpeed			= scalar, U32,	600,	"BPs", 1, 0, 0,1000000, 0
	verboseCanBaseAddress			= scalar, U32,	604,	"", 1, 0, 0, 536870911, 0
	mc33_hvolt						= scalar, U08,	608,	"v", 1, 0, 0, 100, 0
	multisparkMaxSparkingAngle		= scalar, U08,	609,	"deg", 1, 0, 0, 180, 0
	multisparkMaxExtraSparkCount		= scalar, U08,	610,	"count", 1, 0, 0, 10, 0
	tachPulsePerRev					= scalar, U08,	611,	"Pulse", 1, 0, 1.0, 255.0, 0
	idlePidDeactivationTpsThreshold		= scalar, S16,	612,	"%", 1, 0, 0, 100.0, 0
	stepperParkingExtraSteps		= scalar, S16,	614,	"%", 1, 0, 0, 3000.0, 0
	tpsMin							= scalar, S16,	616,	"ADC", 1, 0, 0, 1023, 0
	tpsMax							= scalar, S16,	618,	"ADC", 1, 0, 0, 1023, 0
	tps2SecondaryMin				= scalar, U16,	620,	"ADC", 1, 0, 0, 1000, 0
	tps2SecondaryMax				= scalar, U16,	622,	"ADC", 1, 0, 0, 1000, 0
	tpsErrorDetectionTooLow			= scalar, S16,	624,	"%", 1, 0, -40, 200, 0
	tpsErrorDetectionTooHigh		= scalar, S16,	626,	"%", 1, 0, -40, 200, 0
	tps1SecondaryMin				= scalar, U16,	628,	"ADC", 1, 0, 0, 1000, 0
	tps1SecondaryMax				= scalar, U16,	630,	"ADC", 1, 0, 0, 1000, 0
;no TS info - skipping unusedantiLagRpmTreshold offset 632
	startCrankingDuration			= scalar, S16,	634,	"Seconds", 1, 0, 0, 30, 0
	multisparkMaxRpm				= scalar, U16,	636,	"rpm", 1, 0, 0, 3000, 0
;no TS info - skipping acCutoffLowRpm offset 638
;no TS info - skipping acCutoffHighRpm offset 640
;no TS info - skipping acIdleRpmBump offset 642
	warningPeriod					= scalar, S16,	644,	"seconds", 1, 0, 0, 60, 0
	etbFreq							= scalar, S16,	646,	"Hz", 1, 0, 0, 30000, 0
	idleRpmPid2_pFactor				= scalar, F32,	648,	"", 1, 0, -10000, 10000, 3
	idleRpmPid2_iFactor				= scalar, F32,	652,	"", 1, 0, -10000, 10000, 3
	idleRpmPid2_dFactor				= scalar, F32,	656,	"", 1, 0, -10000, 10000, 3
	idleRpmPid2_offset				= scalar, S16,	660,	"", 1, 0, -1000, 1000, 0
	idleRpmPid2_periodMs			= scalar, S16,	662,	"ms", 1, 0, 0, 3000, 0
	idleRpmPid2_minValue			= scalar, S16,	664,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid2_maxValue			= scalar, S16,	666,	"", 1, 0, -30000, 30000.0, 0
	idleTimingPid_pFactor			= scalar, F32,	668,	"", 1, 0, -10000, 10000, 3
	idleTimingPid_iFactor			= scalar, F32,	672,	"", 1, 0, -10000, 10000, 3
	idleTimingPid_dFactor			= scalar, F32,	676,	"", 1, 0, -10000, 10000, 3
	idleTimingPid_offset			= scalar, S16,	680,	"", 1, 0, -1000, 1000, 0
	idleTimingPid_periodMs			= scalar, S16,	682,	"ms", 1, 0, 0, 3000, 0
	idleTimingPid_minValue			= scalar, S16,	684,	"", 1, 0, -30000, 30000.0, 0
	idleTimingPid_maxValue			= scalar, S16,	686,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid_pFactor				= scalar, F32,	688,	"", 1, 0, -10000, 10000, 3
	idleRpmPid_iFactor				= scalar, F32,	692,	"", 1, 0, -10000, 10000, 3
	idleRpmPid_dFactor				= scalar, F32,	696,	"", 1, 0, -10000, 10000, 3
	idleRpmPid_offset				= scalar, S16,	700,	"", 1, 0, -1000, 1000, 0
	idleRpmPid_periodMs				= scalar, S16,	702,	"ms", 1, 0, 0, 3000, 0
	idleRpmPid_minValue				= scalar, S16,	704,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid_maxValue				= scalar, S16,	706,	"", 1, 0, -30000, 30000.0, 0
	alternatorControl_pFactor		= scalar, F32,	708,	"", 1, 0, -10000, 10000, 3
	alternatorControl_iFactor		= scalar, F32,	712,	"", 1, 0, -10000, 10000, 3
	alternatorControl_dFactor		= scalar, F32,	716,	"", 1, 0, -10000, 10000, 3
	alternatorControl_offset		= scalar, S16,	720,	"", 1, 0, -1000, 1000, 0
	alternatorControl_periodMs		= scalar, S16,	722,	"ms", 1, 0, 0, 3000, 0
	alternatorControl_minValue		= scalar, S16,	724,	"", 1, 0, -30000, 30000.0, 0
	alternatorControl_maxValue		= scalar, S16,	726,	"", 1, 0, -30000, 30000.0, 0
	etb_pFactor						= scalar, F32,	728,	"", 1, 0, -10000, 10000, 3
	etb_iFactor						= scalar, F32,	732,	"", 1, 0, -10000, 10000, 3
	etb_dFactor						= scalar, F32,	736,	"", 1, 0, -10000, 10000, 3
	etb_offset						= scalar, S16,	740,	"", 1, 0, -1000, 1000, 0
	etb_periodMs					= scalar, S16,	742,	"ms", 1, 0, 0, 3000, 0
	etb_minValue					= scalar, S16,	744,	"", 1, 0, -30000, 30000.0, 0
	etb_maxValue					= scalar, S16,	746,	"", 1, 0, -30000, 30000.0, 0
	boostPid_pFactor				= scalar, F32,	748,	"", 1, 0, -10000, 10000, 3
	boostPid_iFactor				= scalar, F32,	752,	"", 1, 0, -10000, 10000, 3
	boostPid_dFactor				= scalar, F32,	756,	"", 1, 0, -10000, 10000, 3
	boostPid_offset					= scalar, S16,	760,	"", 1, 0, -1000, 1000, 0
	boostPid_periodMs				= scalar, S16,	762,	"ms", 1, 0, 0, 3000, 0
	boostPid_minValue				= scalar, S16,	764,	"", 1, 0, -30000, 30000.0, 0
	boostPid_maxValue				= scalar, S16,	766,	"", 1, 0, -30000, 30000.0, 0
	idleMode					 = bits, U32, 768, [0:0], "Closed Loop", "Open Loop"
	boostType					 = bits, U32, 772, [0:0], "Open Loop", "Closed Loop"
	stft_maxIdleRegionRpm			= scalar, U08,	776,	"RPM", 50, 0, 0.0, 12000.0, 0
	stft_maxOverrunLoad				= scalar, U08,	777,	 "load", 1, 0, 0.0, 250, 0
	stft_minPowerLoad				= scalar, U08,	778,	 "load", 1, 0, 0.0, 250, 0
	stft_deadband					= scalar, U08,	779,	 "%", 0.1, 0, 0, 3, 1
	stft_minClt						= scalar, S08,	780,	"C", 1, 0, -20, 100, 0
	stft_minAfr						= scalar, U08,	781,	"afr", 0.1, 0, 10, 20, 1
	stft_maxAfr						= scalar, U08,	782,	"afr", 0.1, 0, 10, 20, 1
	stft_startupDelay				= scalar, U08,	783,	"seconds", 1, 0, 0, 250, 0
	stft_cellCfgs1_maxAdd			= scalar, S08,	784,	 "%", 1, 0, 0, 25, 0
	stft_cellCfgs1_maxRemove		= scalar, S08,	785,	 "%", 1, 0, -25, 0, 0
	stft_cellCfgs1_timeConstant		= scalar, U16,	786,	 "sec", 0.1, 0, 0.1, 100, 2
	stft_cellCfgs2_maxAdd			= scalar, S08,	788,	 "%", 1, 0, 0, 25, 0
	stft_cellCfgs2_maxRemove		= scalar, S08,	789,	 "%", 1, 0, -25, 0, 0
	stft_cellCfgs2_timeConstant		= scalar, U16,	790,	 "sec", 0.1, 0, 0.1, 100, 2
	stft_cellCfgs3_maxAdd			= scalar, S08,	792,	 "%", 1, 0, 0, 25, 0
	stft_cellCfgs3_maxRemove		= scalar, S08,	793,	 "%", 1, 0, -25, 0, 0
	stft_cellCfgs3_timeConstant		= scalar, U16,	794,	 "sec", 0.1, 0, 0.1, 100, 2
	stft_cellCfgs4_maxAdd			= scalar, S08,	796,	 "%", 1, 0, 0, 25, 0
	stft_cellCfgs4_maxRemove		= scalar, S08,	797,	 "%", 1, 0, -25, 0, 0
	stft_cellCfgs4_timeConstant		= scalar, U16,	798,	 "sec", 0.1, 0, 0.1, 100, 2
	antiLag_antiLagTpsTreshold		= scalar, S32,	800,	"RPM", 1, 0, 0, 8000.0, 0
	antiLag_antiLagCoolantTreshold		= scalar, S32,	804,	"*C", 1, 0, 0, 1000.0, 0
	antiLag_antiLagExtraFuel		= scalar, S32,	808,	"%", 1, 0, 0, 1000.0, 0
	antiLag_antilagExtraAir			= scalar, S32,	812,	"%", 1, 0, 0, 100.0, 0
	antiLag_antilagTimeout			= scalar, S32,	816,	"Sec", 1, 0, 0, 50, 1
	antiLag_antiLagRetard			= scalar, S32,	820,	"ATDC", 1, 0, 0, 1000.0, 0
	antiLag_antiLagBoost			= scalar, S32,	824,	"%", 1, 0, 0, 1000.0, 0
	antiLag_antiLagRpmTreshold		= scalar, S32,	828,	"RPM", 1, 0, 0, 8000.0, 0
	antiLag_antiLagAirSupply	 = bits, S32, 832, [0:1], "Solenoid","Idle Solenoid", "E-Throttle"
	antiLag_antiLagActivationMode	 = bits, S32, 836, [0:0], "Always Active", "Switch Input"
	vvt_vvtLoadAxis				 = bits, U32, 840, [0:1], "TPS", "MAP", "CLT", "INVALID"
	vvt_minVvtTemperature			= scalar, F32,	844,	"*C", 1, 0, 0, 1000.0, 0
	vvt_vvtPwmFrequency				= scalar, S32,	848,	"Hz", 1, 0, 0, 3000.0, 0
	vvt_vvtType					 = bits, U32, 852, [0:1], "On/Off", "Closed Loop", "INVALID", "INVALID"
	vvt_vvtPid_pFactor				= scalar, F32,	856,	"", 1, 0, -10000, 10000, 3
	vvt_vvtPid_iFactor				= scalar, F32,	860,	"", 1, 0, -10000, 10000, 3
	vvt_vvtPid_dFactor				= scalar, F32,	864,	"", 1, 0, -10000, 10000, 3
	vvt_vvtPid_offset				= scalar, S16,	868,	"", 1, 0, -1000, 1000, 0
	vvt_vvtPid_periodMs				= scalar, S16,	870,	"ms", 1, 0, 0, 3000, 0
	vvt_vvtPid_minValue				= scalar, S16,	872,	"", 1, 0, -30000, 30000.0, 0
	vvt_vvtPid_maxValue				= scalar, S16,	874,	"", 1, 0, -30000, 30000.0, 0
	vvt_maxVvtDeviation				= scalar, S32,	876,	"Angle", 1, 0, -50, 50, 1
	vvt_vvtControlPin			 = bits, U08, 880, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	vvt_vvtControlPinMode		 = bits, U08, 881, [0:1], "default", "default inverted", "open collector", "open collector inverted"
;no TS info - skipping vvt_pad offset 882
	launch_launchActivationMode	 = bits, S32, 884, [0:1], "Switch Input", "Clutch Input", "Always Active(Disabled By Speed)","INVALID"
	launch_launchRpm				= scalar, S32,	888,	"rpm", 1, 0, 0, 20000.0, 2
	launch_launchTimingRetard		= scalar, S32,	892,	"deg", 1, 0, -180, 180, 2
	launch_launchSpeedTreshold		= scalar, S32,	896,	"Kph", 1, 0, 0, 300.0, 0
	launch_launchRpmTreshold		= scalar, S32,	900,	"RPM", 1, 0, 0, 8000.0, 0
	launch_launchAdvanceRpmRange		= scalar, S32,	904,	"RPM", 1, 0, 0, 8000.0, 0
	launch_launchFuelAdded			= scalar, S32,	908,	"%", 1, 0, 0, 100.0, 0
	launch_launchBoostDuty			= scalar, S32,	912,	"%", 1, 0, 0, 100.0, 0
	launch_hardCutRpmRange			= scalar, S32,	916,	"rpm", 1, 0, 0, 3000.0, 2
;no TS info - skipping launch_unused97 offset 920
	launch_launchTpsTreshold		= scalar, S32,	924,	"%", 1, 0, 0, 8000.0,
	launch_launchActivateDelay		= scalar, F32,	928,	"Sec", 1, 0, 0, 50,
	idlePidRpmUpperLimit			= scalar, S16,	932,	"", 1, 0, 0, 9000, 0
	primeInjFalloffTemperature		= scalar, S16,	934,	"*C", 1, 0, 0, 1000.0, 0
	knockDetectionWindowStart		= scalar, F32,	936,	"angle", 1, 0, -1000, 1000, 2
	knockDetectionWindowEnd			= scalar, F32,	940,	"angle", 1, 0, -1000, 1000, 2
	idleStepperReactionTime			= scalar, F32,	944,	"ms", 1, 0, 1, 300, 0
	knockVThreshold					= scalar, F32,	948,	"V", 1, 0, 1, 5, 2
	idleStepperTotalSteps			= scalar, S32,	952,	"count", 1, 0, 5, 3000, 0
	noAccelAfterHardLimitPeriodSecs		= scalar, F32,	956,	"Seconds", 1, 0, 0, 60, 0
	tachPulseDuractionMs			= scalar, F32,	960,	"ms", 1, 0, 0.0, 100.0, 2
	tachPulseTriggerIndex			= scalar, S32,	964,	"index", 1, 0, 0.0, 360.0, 0
	wwaeTau							= scalar, F32,	968,	"Seconds", 1, 0, 0.0, 3.0, 2
	fuelRailPressure				= scalar, F32,	972,	 "kPa", 1, 0.0, 0, 1000.0, 2
	alternator_derivativeFilterLoss		= scalar, F32,	976,	 "x", 1, 0.0, -1000000, 1000000, 4
	alternator_antiwindupFreq		= scalar, F32,	980,	 "x", 1, 0.0, -1000000, 1000000, 4
	tps2Min							= scalar, S16,	984,	"ADC", 1, 0, 0, 1023, 0
	tps2Max							= scalar, S16,	986,	"ADC", 1, 0, 0, 1023, 0
	mapErrorDetectionTooLow			= scalar, F32,	988,	"kPa", 1, 0, -100.0, 100.0, 2
	mapErrorDetectionTooHigh		= scalar, F32,	992,	"kPa", 1, 0, -100.0, 800.0, 2
	multisparkSparkDuration			= scalar, U16,	996,	 "ms", 0.001, 0, 0, 3, 2
	multisparkDwell					= scalar, U16,	998,	 "ms", 0.001, 0, 0, 3, 2
	wwaeBeta						= scalar, F32,	1000,	"Fraction", 1, 0, 0.0, 1.0, 2
	throttlePedalUpVoltage			= scalar, F32,	1004,	"voltage", 1, 0, -6, 6, 2
	throttlePedalWOTVoltage			= scalar, F32,	1008,	"voltage", 1, 0, -6, 6, 2
	startUpFuelPumpDuration			= scalar, S16,	1012,	"seconds", 1, 0, 0, 6000, 0
	idlePidRpmDeadZone				= scalar, S16,	1014,	"", 1, 0, 0, 1000, 0
	targetVBatt						= scalar, F32,	1016,	"Volts", 1, 0, 0,30, 1
	alternatorOffAboveTps			= scalar, F32,	1020,	"%", 1, 0, 0, 200, 2
	startOfCrankingPrimingPulse		= scalar, F32,	1024,	"ms", 1, 0, 0, 200, 1
	afterCrankingIACtaperDuration		= scalar, S16,	1028,	"cycles", 1, 0, 0, 5000, 0
	iacByTpsTaper					= scalar, S16,	1030,	"percent", 1, 0, 0, 500, 0
	tpsAccelLength					= scalar, S32,	1032,	"Engine Cycles", 1, 0, 1, 200, 0
	maxDeltaTps						= scalar, F32,	1036,	"dTPS", 1, 0, 0, 200, 3
	engineLoadAccelLength			= scalar, S32,	1040,	"Engine Cycles", 1, 0, 1, 200, 0
	loadBasedAeMaxEnleanment		= scalar, F32,	1044,	"Engine Cycles", 1, 0, 0, 200, 1
	engineLoadDecelEnleanmentMultiplier		= scalar, F32,	1048,	"%", 100, 0, 0, 600, 1
	loadBasedAeMaxEnrich			= scalar, F32,	1052,	"Engine Cycles", 1, 0, 0, 200, 1
	loadBasedAeMult					= scalar, F32,	1056,	"%", 100, 0, 0, 600, 1
	uartConsoleSerialSpeed			= scalar, U32,	1060,	"BPs", 1, 0, 0,1000000, 0
	maxDeltaTpsEnlean				= scalar, F32,	1064,	"dTps", 1, 0, 0, 200, 1
	tpsTpsEnleanFactor				= scalar, F32,	1068,	"%", 100, 0, 0, 200, 1
	slowAdcAlpha					= scalar, F32,	1072,	"%", 100, -1, 0, 600, 1
	auxSerialSpeed					= scalar, U32,	1076,	"BPs", 1, 0, 0,1000000, 0
	throttlePedalSecondaryUpVoltage		= scalar, F32,	1080,	"voltage", 1, 0, -6, 6, 2
	throttlePedalSecondaryWOTVoltage		= scalar, F32,	1084,	"voltage", 1, 0, -6, 6, 2
	canBaudRate					 = bits, U08, 1088, [0:1], "100kbps", "250kbps" , "500kbps", "1Mbps"
;no TS info - skipping unused101 offset 1089
	boostCutPressure				= scalar, F32,	1092,	"kPa", 1, 0, 0, 500, 0
	fixTiming						= scalar, F32,	1096,	"deg", 1, 0, -720, 720, 2
	mapLowValueVoltage				= scalar, F32,	1100,	"v", 1, 0, 0.0, 10, 2
	mapHighValueVoltage				= scalar, F32,	1104,	"v", 1, 0, 0.0, 10, 2
	egoValueShift					= scalar, F32,	1108,	"value", 1, 0, -10.0, 10, 2
	crankingIACposition				= scalar, S32,	1112,	"", 1, 0, -100.0, 100, 0
	tChargeMinRpmMinTps				= scalar, F32,	1116,	"mult", 1, 0, 0, 3, 4
	tChargeMinRpmMaxTps				= scalar, F32,	1120,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMinTps				= scalar, F32,	1124,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMaxTps				= scalar, F32,	1128,	"mult", 1, 0, 0, 3, 4
	narrowToWideOxygenBins			= array, F32,	1132,	[8],	"V", 1, 0, -10.0, 10.0, 3
	narrowToWideOxygen				= array, F32,	1164,	[8],	"ratio", 1, 0, -40.0, 40.0, 2
	vvtMode						 = bits, U32, 1196, [0:4], "Inactive", "Second half", "2JZ/Universal", "Miata NB2", "First Half", "Bosch Quick-Start", "mode6", "mode7"
;no TS info - skipping autoTuneCltThreshold offset 1200
;no TS info - skipping autoTuneTpsRocThreshold offset 1204
;no TS info - skipping autoTuneTpsQuietPeriod offset 1208
	postCrankingFactor				= scalar, F32,	1212,	"mult", 1, 0, 0, 100, 4
	postCrankingDurationSec			= scalar, F32,	1216,	"seconds", 1, 0, 0, 100, 2
	timing_offset_cylinder1		 = scalar, F32, 1220, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder2		 = scalar, F32, 1224, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder3		 = scalar, F32, 1228, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder4		 = scalar, F32, 1232, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder5		 = scalar, F32, 1236, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder6		 = scalar, F32, 1240, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder7		 = scalar, F32, 1244, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder8		 = scalar, F32, 1248, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder9		 = scalar, F32, 1252, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder10	 = scalar, F32, 1256, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder11	 = scalar, F32, 1260, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder12	 = scalar, F32, 1264, "Val", 1, 0, -20000000, 20000000, 1
	idlePidActivationTime			= scalar, F32,	1268,	"seconds", 1, 0, 0, 60, 1
	oilPressure_hwChannel		 = bits, U08, 1272, [0:7] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE"
;no TS info - skipping oilPressure_align offset 1273
	oilPressure_v1					= scalar, F32,	1276,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value1				= scalar, F32,	1280,	 "kPa", 1, 0.0, 0, 1000.0, 2
	oilPressure_v2					= scalar, F32,	1284,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value2				= scalar, F32,	1288,	 "kPa", 1, 0.0, 0, 1000.0, 2
	rpmMaxDfco						= scalar, S16,	1292,	"rpm", 1, 0, 0, 5000, 0
	rpmMinDfco						= scalar, S16,	1294,	"rpm", 1, 0, 0, 5000, 0
	tpsTresholdDfco					= scalar, S16,	1296,	"%", 1, 0, 0, 100, 1
	cltTresholdDfco					= scalar, S16,	1298,	"C", 1, 0, -100, 100, 0
	pidExtraForLowRpm				= scalar, S16,	1300,	"%", 1, 0, 0, 100, 0
	mapTresholdDfco					= scalar, S16,	1302,	"kPa", 1, 0, 0, 250, 0
	tChargeAirCoefMin				= scalar, F32,	1304,	"Min tCharge Coeff.", 1, 0, 0.0, 1.0, 4
	tChargeAirCoefMax				= scalar, F32,	1308,	"Max tCharge Coeff.", 1, 0, 0.0, 1.0, 4
	tChargeAirFlowMax				= scalar, F32,	1312,	"Max Air Flow, kg/h", 1, 0, 0.0, 1000.0, 1
	tChargeAirIncrLimit				= scalar, F32,	1316,	"tChange Increment Limit, deg/sec", 1, 0, 0.0, 100.0, 1
	tChargeAirDecrLimit				= scalar, F32,	1320,	"tChange Decrement Limit, deg/sec", 1, 0, 0.0, 100.0, 1
	tChargeMode					 = bits, U32, 1324, [0:0], "RPM+TPS (Default)", "Air Mass Interpolation"
	etb_iTermMin					= scalar, S16,	1328,	"", 1, 0, -30000, 30000.0, 0
	etb_iTermMax					= scalar, S16,	1330,	"", 1, 0, -30000, 30000.0, 0
	etbDeadband						= scalar, F32,	1332,	"", 1, 0, 0, 100.0, 2
	idleTimingPidWorkZone			= scalar, S16,	1336,	"RPM", 1, 0, 0, 1000, 0
	idleTimingPidDeadZone			= scalar, S16,	1338,	"RPM", 1, 0, 0, 1000, 0
	idlePidFalloffDeltaRpm			= scalar, S16,	1340,	"RPM", 1, 0, 0, 1000, 0
	tpsAccelFractionCycles			= scalar, S16,	1342,	"Engine Cycles", 1, 0, 0, 500, 0
	tpsAccelFractionDivisor			= scalar, F32,	1344,	"%", 100, 0, 0, 500, 0
	idlerpmpid_iTermMin				= scalar, S16,	1348,	"", 1, 0, -30000, 30000.0, 0
	idlerpmpid_iTermMax				= scalar, S16,	1350,	"", 1, 0, -30000, 30000.0, 0
	etbIdleThrottleRange			= scalar, F32,	1352,	 "%", 1, 0, 0, 15, 0
	triggerCompCenterVolt			= scalar, U08,	1356,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompHystMin				= scalar, U08,	1357,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompHystMax				= scalar, U08,	1358,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompSensorSatRpm			= scalar, U08,	1359,	"RPM", 50, 0, 0.0, 12000.0, 0
	canVssNbcType				 = bits, U32, 1360, [0:1], "BMW_e46", "W202", "VAG", "INVALID"
	gppwm1_pin					 = bits, U08, 1364, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	gppwm1_dutyIfError				= scalar, U08,	1365,	"%", 1, 0, 0, 100, 0
	gppwm1_pwmFrequency				= scalar, U16,	1366,	"hz", 1, 0, 0, 500, 0
	gppwm1_onAboveDuty				= scalar, U08,	1368,	"%", 1, 0, 0, 100, 0
	gppwm1_offBelowDuty				= scalar, U08,	1369,	"%", 1, 0, 0, 100, 0
	gppwm1_loadAxis				 = bits, U08, 1370, [0:1], "TPS", "MAP", "CLT", "IAT"
;no TS info - skipping gppwm1_pad offset 1371
	gppwm1_loadBins					= array, U08,	1372,	[8],	"load", 1, 0, 0.0, 250, 0
	gppwm1_rpmBins					= array, U08,	1380,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gppwm1_table				 = array, U08, 1388, [8x8], "duty", 1, 0, 0, 100, 0
	gppwm2_pin					 = bits, U08, 1452, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	gppwm2_dutyIfError				= scalar, U08,	1453,	"%", 1, 0, 0, 100, 0
	gppwm2_pwmFrequency				= scalar, U16,	1454,	"hz", 1, 0, 0, 500, 0
	gppwm2_onAboveDuty				= scalar, U08,	1456,	"%", 1, 0, 0, 100, 0
	gppwm2_offBelowDuty				= scalar, U08,	1457,	"%", 1, 0, 0, 100, 0
	gppwm2_loadAxis				 = bits, U08, 1458, [0:1], "TPS", "MAP", "CLT", "IAT"
;no TS info - skipping gppwm2_pad offset 1459
	gppwm2_loadBins					= array, U08,	1460,	[8],	"load", 1, 0, 0.0, 250, 0
	gppwm2_rpmBins					= array, U08,	1468,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gppwm2_table				 = array, U08, 1476, [8x8], "duty", 1, 0, 0, 100, 0
	gppwm3_pin					 = bits, U08, 1540, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	gppwm3_dutyIfError				= scalar, U08,	1541,	"%", 1, 0, 0, 100, 0
	gppwm3_pwmFrequency				= scalar, U16,	1542,	"hz", 1, 0, 0, 500, 0
	gppwm3_onAboveDuty				= scalar, U08,	1544,	"%", 1, 0, 0, 100, 0
	gppwm3_offBelowDuty				= scalar, U08,	1545,	"%", 1, 0, 0, 100, 0
	gppwm3_loadAxis				 = bits, U08, 1546, [0:1], "TPS", "MAP", "CLT", "IAT"
;no TS info - skipping gppwm3_pad offset 1547
	gppwm3_loadBins					= array, U08,	1548,	[8],	"load", 1, 0, 0.0, 250, 0
	gppwm3_rpmBins					= array, U08,	1556,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gppwm3_table				 = array, U08, 1564, [8x8], "duty", 1, 0, 0, 100, 0
	gppwm4_pin					 = bits, U08, 1628, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","INVALID","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Trigger Error","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","AC Compressor","Brake Relay","Coolant Fan","INVALID","INVALID","INVALID","INVALID","INVALID","VVT Intake","VVt Exhaust
	gppwm4_dutyIfError				= scalar, U08,	1629,	"%", 1, 0, 0, 100, 0
	gppwm4_pwmFrequency				= scalar, U16,	1630,	"hz", 1, 0, 0, 500, 0
	gppwm4_onAboveDuty				= scalar, U08,	1632,	"%", 1, 0, 0, 100, 0
	gppwm4_offBelowDuty				= scalar, U08,	1633,	"%", 1, 0, 0, 100, 0
	gppwm4_loadAxis				 = bits, U08, 1634, [0:1], "TPS", "MAP", "CLT", "IAT"
;no TS info - skipping gppwm4_pad offset 1635
	gppwm4_loadBins					= array, U08,	1636,	[8],	"load", 1, 0, 0.0, 250, 0
	gppwm4_rpmBins					= array, U08,	1644,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gppwm4_table				 = array, U08, 1652, [8x8], "duty", 1, 0, 0, 100, 0
	mc33_i_boost					= scalar, U16,	1716,	"X", 1, 0.0, 0, 64000, 0
	mc33_i_peak						= scalar, U16,	1718,	"X", 1, 0.0, 0, 64000, 0
	mc33_i_hold						= scalar, U16,	1720,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_max_boost				= scalar, U16,	1722,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_peak_off					= scalar, U16,	1724,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_peak_tot					= scalar, U16,	1726,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_bypass					= scalar, U16,	1728,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_hold_off					= scalar, U16,	1730,	"X", 1, 0.0, 0, 64000, 0
	mc33_t_hold_tot					= scalar, U16,	1732,	"X", 1, 0.0, 0, 64000, 0
;no TS info - skipping unused102 offset 1734
	vvtToothMinAngle				= scalar, F32,	1736,	"", 1, 0, -30000, 30000.0, 0
	vvtToothMaxAngle				= scalar, F32,	1740,	"", 1, 0, -30000, 30000.0, 0
	vvtOffset						= scalar, F32,	1744,	"value", 1, 0, -720, 1000, 1
	sparkDwellRpmBins				= array, F32,	1748,	[8],	"RPM", 1, 0.0, 0.0, 18000, 2
	sparkDwellValues				= array, F32,	1780,	[8],	"ms", 1, 0.0, 0.0, 30.0, 2
	tle8888mode					 = bits, U08, 1812, [0:7], "Auto", "SemiAuto", "Manual", "Hall"
;no TS info - skipping unusedSomethingWasHere offset 1813
	tle8888VrFilter				 = bits, U32, 1816, [0:1], "1 us", "5 us", "10 us", "20 us"
	tle8888VrDetectionVoltage	 = bits, U32, 1820, [0:1], "50 Mv", "150 Mv", "350 Mv", "550 Mv"
	tle8888VrPeakTime			 = bits, U32, 1824, [0:0], "10 Us", "250 Us"
	triggerFilter				 = bits, U32, 1828, [0:1], "No Filter", "Level 1", "Level 2", "Level 3"
	syncRatioFrom					= scalar, F32,	1832,	"", 1, 0, 0, 10, 2
	syncRatioTo						= scalar, F32,	1836,	"", 1, 0, 0, 10, 2
	idle_antiwindupFreq				= scalar, F32,	1840,	 "x", 1, 0.0, -1000000, 1000000, 1
	idle_derivativeFilterLoss		= scalar, F32,	1844,	 "x", 1, 0.0, -1000000, 1000000, 1
	stoichRatioPrimary				= scalar, F32,	1848,	"", 1, 0, 0, 20, 1
	knockBandCustom					= scalar, F32,	1852,	"", 1, 0, 0, 30, 1
;no TS info - skipping storedLambda offset 1856
;no TS info - skipping storedHeater offset 1860
;no TS info - skipping mainUnusedEnd offset 1864
	cj125Pfactor					= scalar, F32,	3600,	"", 1, 0, 0, 30, 3
	cj125Ifactor					= scalar, F32,	3604,	"", 1, 0, 0, 30, 3
	vvtTable					 = array, F32, 3608, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	vvtLoadBins						= array, F32,	3864,	[8],	{ bitStringValue(vvtLoadUnits , vvt_vvtLoadAxis) }, 1, 0, 0, 600.0, 1
	vvtRpmBins						= array, F32,	3896,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	iacCoastingBins					= array, F32,	3928,	[16],	"C", 1, 0, -100.0, 250.0, 2
	iacCoasting						= array, F32,	3992,	[16],	"%", 1, 0, 0.0, 100.0, 2
;no TS info - skipping unused125 offset 4056
	iacPidMultTable				 = array, U08, 4152, [8x8],"%", 1, 0, 0, 999, 2
	iacPidMultLoadBins				= array, U08,	4216,	[8],	"Load", 1, 0.0, 0, 500.0, 2
	iacPidMultRpmBins				= array, U08,	4224,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	crankingAdvanceBins				= array, F32,	4232,	[4],	"RPM", 1, 0, 0.0, 18000, 2
	crankingAdvance					= array, F32,	4248,	[4],	"deg", 1, 0, -20, 90, 2
	etbBiasBins						= array, F32,	4264,	[6],	"target TPS position", 1, 0.0, 0, 100.0, 1
	etbBiasValues					= array, F32,	4288,	[6],	"ETB duty cycle bias", 1, 0.0, -100, 100.0, 2
	loadBasedAeDecayBins			= array, F32,	4312,	[8],	"Engine Cycles", 1, 0, 0.0, 300, 0
	loadBasedAeDecayMult			= array, F32,	4344,	[8],	"%", 100, -1, 0.0, 300, 2
	cltIdleRpmBins					= array, F32,	4376,	[16],	"C", 1, 0, -100.0, 250.0, 2
	cltIdleRpm						= array, F32,	4440,	[16],	"", 1, 0, 0.0, 8000.0, 0
	crankingTpsCoef					= array, F32,	4504,	[8],	"Ratio", 100, 0, 0.0, 700.0, 0
	crankingTpsBins					= array, F32,	4536,	[8],	"%", 1, 0, 0.0, 100.0, 2
;no TS info - skipping unused124 offset 4568
	afterstartCoolantBins			= array, F32,	4632,	[8],	"C", 1, 0, -100.0, 250.0, 0
	afterstartHoldTime				= array, F32,	4664,	[8],	"Seconds", 1, 0, 0, 100, 1
	afterstartEnrich				= array, F32,	4696,	[8],	"%", 100, -1, 0, 600, 1
	afterstartDecayTime				= array, F32,	4728,	[8],	"Seconds", 1, 0, 0, 100, 1
	boostTableOpenLoop			 = array, U08, 4760, [8x8],"", 2, 0 , 0, 3000, 0
	boostRpmBins					= array, U08,	4824,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	boostTableClosedLoop		 = array, U08, 4832, [8x8],"", 2, 0 , 0, 3000, 0
	boostTpsBins					= array, U08,	4896,	[8],	"%", 2, 0.0, 0, 100.0, 2
	pedalToTpsTable				 = array, U08, 4904, [8x8],"deg", 1, 0, -720, 720, 2
	pedalToTpsPedalBins				= array, U08,	4968,	[8],	"%", 1, 0, 0.0, 120.0, 0
	pedalToTpsRpmBins				= array, U08,	4976,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	cltCrankingCorrBins				= array, F32,	4984,	[8],	"C", 1, 0, -100.0, 250.0, 2
	cltCrankingCorr					= array, F32,	5016,	[8],	"%", 100, 0, 0.0, 500.0, 0
	idleAdvanceBins					= array, F32,	5048,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleAdvance						= array, F32,	5080,	[8],	"deg", 1, 0, -20, 90, 2
	idleVeBins						= array, F32,	5112,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleVe							= array, F32,	5144,	[8],	,"%", 1, 0, 0, 999.0, 2
	cltFuelCorrBins					= array, F32,	5176,	[16],	"C", 1, 0, -100.0, 250.0, 0
	cltFuelCorr						= array, F32,	5240,	[16],	"% Trim", 100, -1, -100, 500, 1
	iatFuelCorrBins					= array, F32,	5304,	[16],	"C", 1, 0, -100.0, 250.0, 0
	iatFuelCorr						= array, F32,	5368,	[16],	"% Trim", 100, -1, -100, 400, 1
	crankingFuelCoef				= array, F32,	5432,	[8],	"%", 100, -1, -100, 400, 1
	crankingFuelBins				= array, F32,	5464,	[8],	"C", 1, 0, -80.0, 170.0, 0
	crankingCycleCoef				= array, F32,	5496,	[8],	"%", 100, -1, -100, 400, 1
	crankingCycleBins				= array, F32,	5528,	[8],	"counter", 1, 0, -80.0, 170.0, 0
	cltIdleCorrBins					= array, F32,	5560,	[16],	"C", 1, 0, -100.0, 250.0, 1
	cltIdleCorr						= array, F32,	5624,	[16],	"percent", 100, 0, 0.0, 400, 0
	ignitionIatCorrTable		 = array, F32, 5688, [16x16],"deg", 1, 0, -720, 720, 1
	ignitionIatCorrLoadBins			= array, F32,	6712,	[16],	"Temperature", 1, 0.0, 0, 500.0, 1
	ignitionIatCorrRpmBins			= array, F32,	6776,	[16],	"RPM", 1, 0.0, 0, 18000.0, 1
	injectionPhase				 = array, F32, 6840, [16x16],"deg", 1, 0, -720, 720, 1
	injPhaseLoadBins				= array, F32,	7864,	[16],	"Load", 1, 0.0, 0, 500.0, 2
	injPhaseRpmBins					= array, F32,	7928,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	advanceTable				 = array, F32, 7992, [16x16],"deg", 1, 0, -20, 90, 1
	smap_table						= array, F32,	9016,	[16],	{ bitStringValue(algorithmUnits , fuelAlgorithm) }, 1, 0.0, 0, 500.0, 1
	srpm_table						= array, F32,	9080,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	veTable						 = array, F32, 9144, [16x16],"%", 1, 0, 0, 999.0, 1
	fmap_table						= array, F32,	10168,	[16],	{ bitStringValue(algorithmUnits , fuelAlgorithm) }, 1, 0.0, 0, 400.0, 1
	frpm_table						= array, F32,	10232,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	afrTable					 = array, U08, 10296, [16x16],"deg", 0.1, 0, 0, 25.0, 1
	afrLoadBins						= array, F32,	10552,	[16],	"", 1, 0.0, 0, 500.0, 2
	afrRpmBins						= array, F32,	10616,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	tpsTpsAccelTable			 = array, F32, 10680, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelFromRpmBins			= array, F32,	10936,	[8],	"From TPS", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelToRpmBins			= array, F32,	10968,	[8],	"To TPS", 1, 0, 0.0, 25500.0, 2
; total TS size = 11000
[SettingContextHelp]
	injector_size = "This is your injector flow at the fuel pressure used in the vehicle. cc/min, cubic centimetre per minute\nBy the way, g/s = 0.125997881 * (lb/hr)\ng/s = 0.125997881 * (cc/min)/10.5\ng/s = 0.0119997981 * cc/min"
	fuelAlgorithm = "This setting controls which fuel quantity control algorithm is used.\nSee also useTPSAdvanceTable\nset algorithm X"
	crankingInjectionMode = "This is the injection strategy during engine start. See Fuel/Injection settings for more detail. It is suggested to use "Simultaneous"."
	injectionMode = "This is where the fuel injection type is defined: "Simultaneous" means all injectors will fire together at once. "Sequential" fires the injectors on a per cylinder basis, which requires individually wired injectors. "Batched" will fire the injectors in groups. If your injectors are individually wired you will also need to enable "Two wire batch emulation". \nset injection_mode X\nSee also twoWireBatchInjection"
	extraInjectionOffset = "this is about deciding when the injector starts it's squirt\nSee also injectionPhase map\ntodo: do we need even need this since we have the map anyway?"
	fixedCrankingTiming = "Ignition advance angle used during engine cranking, 5-10 degrees will work as a base setting for most engines.\nset cranking_timing_angle X"
	ignitionMode = ""One Coil" is for use on distributed ignition system. "Individual Coils" is to be used when you have one coil per cylinder (COP or similar). "Wasted" means one coil is driving two spark plugs in two cylinders, with one of the sparks not doing anything since it's happening on the exhaust cycle\nset ignition_mode X"
	ignitionOffset = "this value could be used to offset the whole ignition timing table by a constant"
	timingMode = "Dynamic uses the timing map to decide the ignition timing, Static timing fixes the timing to the value set below (only use for checking static timing)."
	fixedModeTiming = "This value is the ignition timing used when in 'fixed timing' mode, i.e. constant timing\nThis mode is useful when adjusting distributor location."
	globalTriggerAngleOffset = "Angle between Top Dead Center (TDC) and the first trigger event.\nKnowing this angle allows us to control timing and other angles in reference to TDC.\nset global_trigger_offset_angle X"
	absoluteFuelPressure = "If your fuel regulator does not have vacuum line"
	measureMapOnlyInOneCylinder = "Useful for individual intakes"
	isFasterEngineSpinUpEnabled = "Smarter cranking logic.\nSee also startOfCrankingPrimingPulse"
	enableDfco = "This setting disables fuel injection while the engine is in overrun, this is useful as a fuel saving measure and to prevent back firing."
	useIacTableForCoasting = "This setting allows the ECU to open the IAC during overrun conditions to help reduce engine breaking, this can be helpful for large engines in light weight cars."
	useStepperIdle = "This setting should only be used if you have a stepper motor idle valve and a stepper motor driver installed."
	useETBforIdleControl = "This setting allows the ETB to act as the idle air control valve and move to regulate the airflow at idle."
	fuelClosedLoopCorrectionEnabled = "Enables lambda sensor closed loop feedback for fuelling."
	enableFixedDwellCranking = "If set to true, will use the specified duration for cranking dwell. If set to false, will use the specified dwell angle. Unless you have a really good reason to, leave this set to true to use duration mode."
	enableAlternatorControl = "This enables smart alternator control and activates the extra alternator settings."
	trigger2Edge = "This setting flips the signal from the secondary engine speed sensor."
	enableLaunchIgnCut = "This is the Cut Mode normally used"
	stftIgnoreErrorMagnitude = "If enabled, adjust at a constant rate instead of a rate proportional to the current lambda error. This mode may be easier to tune, and more tolerant of sensor noise. Use of this mode is required if you have a narrowband O2 sensor."
	isCylinderCleanupEnabled = "When enabled if TPS is held above 95% no fuel is injected while cranking to clear excess fuel from the cylinders."
	overrideCrankingIacSetting = "This setting overrides the normal multiplication values that have been set for the idle air control valve during cranking. If this setting is enabled the "IAC multiplier" table in the Cranking settings tab needs to be adjusted appropriately or potentially no IAC opening will occur."
	useSeparateAdvanceForIdle = "This activates a separate ignition timing table for idle conditions, this can help idle stability by using ignition retard and advance either side of the desired idle speed. Extra retard at low idle speeds will prevent stalling and extra advance at high idle speeds can help reduce engine power and slow the idle speed."
	useSeparateVeForIdle = "This activates a separate fuel table for Idle, this allows fine tuning of the idle fuelling."
	twoWireBatchInjection = "This is needed if your coils are individually wired and you wish to use batch injection.\nenable two_wire_batch_injection"
	twoWireBatchIgnition = "This is needed if your coils are individually wired (COP) and you wish to use batch ignition (wasted spark)."
	enableCrankingTimingTable = "This activates a separate advance table for cranking conditions, this allows cranking advance to be RPM dependant."
	useAdvanceCorrectionsForCranking = "This enables the various ignition corrections during cranking (IAT, CLT, FSIO and PID idle)."
	useTPSAdvanceTable = "This flag allows to use TPS for ignition lookup while in Speed Density Fuel Mode"
	useIacPidMultTable = "This flag allows to use a special 'PID Multiplier' table (0.0-1.0) to compensate for nonlinear nature of IAC-RPM controller"
	launchSmoothRetard = "Interpolates the Ignition Retard from 0 to 100% within the RPM Range"
	dcMotorIdleValve = "Used on some German vehicles around late 90s: cable-operated throttle and DC motor idle air valve.\nSet the primary TPS to the cable-operated throttle's sensor\nSet the secondary TPS to the mini ETB's position sensor(s)."
	vbattAdcChannel = "This is the processor input pin that the battery voltage circuit is connected to, if you are unsure of what pin to use, check the schematic that corresponds to your PCB."
	fuelLevelSensor = "This is the processor pin that your fuel level sensor in connected to. This is a non standard input so will need to be user defined."
	pinTacho = "This implementation produces one pulse per engine cycle. See also dizzySparkOutputPin."
	throttlePedalUpPin = "Throttle Pedal not pressed switch - used on some older vehicles like early Mazda Miata"
	pinCam1 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	pinCam2 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	pinCam3 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	pinCam4 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	cranking_baseFuel = "Base duration of the fuel injection during cranking, this is modified by the multipliers for CLT, IAT, TPS ect, to give the final cranking pulse width."
	cranking_rpm = "This sets the RPM limit below which the ECU will use cranking fuel and ignition logic, typically this is around 350-450rpm. \nset cranking_rpm X"
	crankingChargeAngle = "While cranking (which causes battery voltage to drop) we can calculate dwell time in shaft\ndegrees, not in absolute time as in running mode.\nset cranking_charge_angle X"
	clt_bias_resistor = "Pull-up resistor value on your board"
	iat_bias_resistor = "Pull-up resistor value on your board"
	auxTempSensor1_bias_resistor = "Pull-up resistor value on your board"
	auxTempSensor2_bias_resistor = "Pull-up resistor value on your board"
	analogInputDividerCoefficient = "Ratio/coefficient of input voltage dividers on your PCB. For example, use '2' if your board divides 5v into 2.5v. Use '1.66' if your board divides 5v into 3v."
	vbattDividerCoeff = "This is the ratio of the resistors for the battery voltage, measure the voltage at the battery and then adjust this number until the gauge matches the reading."
	fanOnTemperature = "Cooling fan turn-on temperature threshold, in Celsius"
	fanOffTemperature = "Cooling fan turn-off temperature threshold, in Celsius"
	vehicleSpeedCoef = "This coefficient translates vehicle speed input frequency (in Hz) into vehicle speed, km/h"
	triggerSimulatorFrequency = "Same RPM is used for two ways of producing simulated RPM. See also triggerSimulatorPins (with wires)\nSee also directSelfStimulation (no wires, bypassing input hardware)\nrpm X"
	ignMathCalculateAtIndex = "At what trigger index should some ignition-related math be executed? This is a performance trick to reduce load on synchronization trigger callback."
	tpsErrorDetectionTooLow = "TPS error detection, what TPS % value is unrealistically low"
	tpsErrorDetectionTooHigh = "TPS error detection, what TPS % value is unrealistically high"
	stft_maxIdleRegionRpm = "Below this RPM, the idle region is active"
	stft_maxOverrunLoad = "Below this engine load, the overrun region is active"
	stft_minPowerLoad = "Above this engine load, the power region is active"
	stft_deadband = "When close to correct AFR, pause correction. This can improve stability by not chan the adjustment if the error is extremely small, but is not required."
	stft_minClt = "Below this temperature, correction is disabled."
	stft_minAfr = "Below this AFR, correction is paused"
	stft_maxAfr = "Above this AFR, correction is paused"
	stft_startupDelay = "Delay after starting the engine before beginning closed loop correction."
	antiLag_antiLagTpsTreshold = "This level of throttle position (TP(Main)) needs to be exceeded before Anti-Lag becomes active. Anti-Lag will stay active as long as TP(Main) is above this value. Once the throttle position falls below this value, Anti-Lag will remain active until the AL Deactivation Timeout has elapsed."
	antiLag_antiLagCoolantTreshold = "Minimum Coolant temperature before AntiLag arms"
	antiLag_antiLagExtraFuel = "Additional fuel when AntiLag are armed. Should only be used together with retard"
	antiLag_antilagExtraAir = "This function overrides the current position of the idle speed solenoid, E-Throttle or stepper motor. This override is used to bleed extra air into the engine when Anti-Lag is active. A standard Idle valve does generally not flow enough air for proper Anti-Lag operation, an after market upgrade is often necessary."
	antiLag_antilagTimeout = "This function specifies the time after the engine speed (RPM) falls below the AL Enable RPM AND the throttle position (TP(Main)) falls below the AL Enable TP that Anti-Lag remains active for. This is the time that the turbo will remain spooled for once stepping off the throttle."
	antiLag_antiLagRetard = "Sets the current Ignition Retard value as the current Ignition Timing."
	antiLag_antiLagBoost = "Sets the Boost Valve Duty when AntiLag are active"
	antiLag_antiLagRpmTreshold = "This engine speed (RPM) needs to be exceeded before Anti-Lag becomes active. Anti-Lag will stay active as long as the engine speed (RPM) is above this value. Once the engine speed (RPM) falls below this value, Anti-Lag will remain active until the AL Deactivation Timeout has elapsed."
	antiLag_antiLagActivationMode = "The Anti-lag system will remain OFF until the system is armed. This means Anti-Lag will not work until the arming condition(s) is met. Various methods can be used including a Digital Input, an Always ON option allowing the system to be armed permanently."
	launch_launchSpeedTreshold = "Disabled above this speed"
	launch_launchRpmTreshold = "Disabled below this rpm"
	launch_launchAdvanceRpmRange = "Range from Launch Rpm for Timing Retard to activate"
	launch_launchFuelAdded = "Extra Fuel Added"
	launch_launchBoostDuty = "Duty Cycle for the Boost Solenoid"
	launch_hardCutRpmRange = "RPM Range for Hard Cut"
	launch_launchActivateDelay = "Time in Seconds"
	idlePidRpmUpperLimit = "Relative to the target idle RPM"
	primeInjFalloffTemperature = "This sets the temperature above which no priming pulse is used, The value at -40 is reduced until there is no more priming injection at this temperature."
	tachPulseTriggerIndex = "Trigger cycle index at which we start tach pulse (performance consideration)"
	wwaeTau = "Length of time the deposited wall fuel takes to dissipate after the start of acceleration. "
	wwaeBeta = "0 = No fuel settling on port walls 1 = All the fuel settling on port walls setting this to 0 disables the wall wetting enrichment. "
	throttlePedalWOTVoltage = "Pedal in the floor"
	startUpFuelPumpDuration = "on ECU start turn fuel pump on to build fuel pressure"
	targetVBatt = "This is the target battery voltage the alternator PID control will attempt to maintain"
	alternatorOffAboveTps = "Turns off alternator output above specified TPS, enabling this reduced parasitic drag on the engine at full load."
	startOfCrankingPrimingPulse = "Prime pulse for cold engine, duration in ms\nLinear interpolation between -40F/-40C and fallout temperature\n\nSee also isFasterEngineSpinUpEnabled\nset cranking_priming_pulse X"
	afterCrankingIACtaperDuration = "This is the duration in cycles that the IAC will take to reach its normal idle position, it can be used to hold the idle higher for a few seconds after cranking to improve startup."
	iacByTpsTaper = "Extra IAC, in percent between 0 and 100, tapered between zero and idle deactivation TPS value"
	tpsAccelLength = "This is the number of engine cycles that the TPS position change can occur over, a longer duration will make the enrichment more active but too long may affect steady state driving, a good default is 30-60 cycles. "
	maxDeltaTps = "TPS change in % per engine cycle."
	slowAdcAlpha = "ExpAverage alpha coefficient"
	throttlePedalSecondaryWOTVoltage = "Pedal in the floor"
	crankingIACposition = "This is the IAC position during cranking, some engines start better if given more air during cranking to improve cylinder filling."
	rpmMaxDfco = "This sets the RPM limit above which the fuel cut is deactivated, activating this maintains fuel flow at high RPM to help cool pistons"
	rpmMinDfco = "This sets the RPM limit below which the fuel cut is deactivated, this prevents jerking or issues transitioning to idle"
	tpsTresholdDfco = "percent between 0 and 100 below which the fuel cut is deactivated, this helps low speed drivability."
	cltTresholdDfco = "Fuel cutoff is deactivated below this coolant threshold."
	pidExtraForLowRpm = "Increases PID reaction for RPM<target by adding extra percent to PID-error"
	mapTresholdDfco = "MAP value above which fuel injection is re-enabled."
	idleTimingPidWorkZone = "When the current RPM is closer than this value to the target, closed-loop idle timing control is enabled."
	idleTimingPidDeadZone = "If the RPM closer to target than this value, disable timing correction to prevent oscillation"
	idlePidFalloffDeltaRpm = "Taper out idle timing control over this range as the engine leaves idle conditions"
	tpsAccelFractionCycles = "A delay in cycles between fuel-enrich. portions"
	tpsAccelFractionDivisor = "A fraction divisor: 100 or less = entire portion at once, or split into diminishing fractions"
	triggerCompCenterVolt = "Trigger comparator center point voltage"
	triggerCompHystMin = "Trigger comparator hysteresis voltage (Min)"
	triggerCompHystMax = "Trigger comparator hysteresis voltage (Max)"
	triggerCompSensorSatRpm = "VR-sensor saturation RPM"
	gppwm1_pin = "Select a pin to use for PWM or on-off output."
	gppwm1_dutyIfError = "If an error (with a sensor, etc) is detected, this value is used instead of reading from the table.\nThis should be a safe value for whatever hardware is connected to prevent damage."
	gppwm1_pwmFrequency = "Select a frequency to run PWM at.\nSet this to 0hz to enable on-off mode."
	gppwm1_onAboveDuty = "In on-off mode, turn the output on when the table value is above this duty."
	gppwm1_offBelowDuty = "In on-off mode, turn the output off when the table value is below this duty."
	gppwm1_loadAxis = "Selects the load axis to use for the table."
	gppwm2_pin = "Select a pin to use for PWM or on-off output."
	gppwm2_dutyIfError = "If an error (with a sensor, etc) is detected, this value is used instead of reading from the table.\nThis should be a safe value for whatever hardware is connected to prevent damage."
	gppwm2_pwmFrequency = "Select a frequency to run PWM at.\nSet this to 0hz to enable on-off mode."
	gppwm2_onAboveDuty = "In on-off mode, turn the output on when the table value is above this duty."
	gppwm2_offBelowDuty = "In on-off mode, turn the output off when the table value is below this duty."
	gppwm2_loadAxis = "Selects the load axis to use for the table."
	gppwm3_pin = "Select a pin to use for PWM or on-off output."
	gppwm3_dutyIfError = "If an error (with a sensor, etc) is detected, this value is used instead of reading from the table.\nThis should be a safe value for whatever hardware is connected to prevent damage."
	gppwm3_pwmFrequency = "Select a frequency to run PWM at.\nSet this to 0hz to enable on-off mode."
	gppwm3_onAboveDuty = "In on-off mode, turn the output on when the table value is above this duty."
	gppwm3_offBelowDuty = "In on-off mode, turn the output off when the table value is below this duty."
	gppwm3_loadAxis = "Selects the load axis to use for the table."
	gppwm4_pin = "Select a pin to use for PWM or on-off output."
	gppwm4_dutyIfError = "If an error (with a sensor, etc) is detected, this value is used instead of reading from the table.\nThis should be a safe value for whatever hardware is connected to prevent damage."
	gppwm4_pwmFrequency = "Select a frequency to run PWM at.\nSet this to 0hz to enable on-off mode."
	gppwm4_onAboveDuty = "In on-off mode, turn the output on when the table value is above this duty."
	gppwm4_offBelowDuty = "In on-off mode, turn the output off when the table value is below this duty."
	gppwm4_loadAxis = "Selects the load axis to use for the table."
	vvtOffset = "Angle between cam sensor and VVT zero position\nset vvt_offset X"
	idle_antiwindupFreq = "0.1 is a good default value"
	idle_derivativeFilterLoss = "0.1 is a good default value"
	crankingAdvanceBins = "Optional timing advance table for Cranking (see enableCrankingTimingTable)"
	crankingAdvance = "Optional timing advance table for Cranking (see enableCrankingTimingTable)"


; SettingContextHelpEnd
; CONFIG_DEFINITION_END
	idleRpmPid_offset = "Constant base value"
	idleRpmPid_periodMs = "PID recalculation period"
	

[Tuning]
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   gaugeColumns = 1 ; Only 1 or 2 are valid.

   pageButtons  = "&EGO"
   gauge1       = RPMGauge	
   gauge2       = afr1Gauge
   gauge3		= MAPGauge
   gauge4		= veValueGauge


[LoggerDefinition]
  ; valid logger types: composite, tooth, trigger, csv
;  loggerDef = compositeLogger, "Primary Trigger Logger", tooth
  loggerDef = compositeLogger, "Trigger Logger", composite
        startCommand = "l\x01"
        stopCommand  = "l\x02"
        dataReadCommand = "L"
        dataReadTimeout = 50000 ; time in ms
        dataReadyCondition = { toothLogReady == 1}
        continuousRead = true
        ; each packet is 5 and we have 500 of those
        dataLength = 2500

;tooth
       ; recordDef = headerLen, footerLen, recordLen
;       recordDef =   0,   0,   5

       ; uint16 that stores 1/100 second
;       recordField = toothTime, "tooth", 0, 16, 0.01, "ms"


		; recordDef = headerLen, footerLen, recordLen
		recordDef =   0,   0,   5

		; these names are hard-coded inside TS
		recordField = priLevel,          "PriLevel",     0,          1,          1.0,    "Flag"
        recordField = secLevel,          "SecLevel",     1,          1,          1.0,    "Flag"
        recordField = trigger,           "Trigger",      2,          1,          1.0,    "Flag"
        recordField = sync,              "Sync",         3,          1,          1.0,    "Flag"
	   recordField = refTime,           "RefTime",      8,          32,         0.01,  "ms"

        ; hidden calcField serves as intermediate variable
        calcField = maxTime,               "MaxTime",   "ms",  { maxValue(refTime) }

        calcField = toothTime,           "ToothTime",    "ms",       { refTime - pastValue(refTime, 1) }
        ;recordField = time,                "Time",       24,         16,         1.0,    "ms"
        calcField = time,                "Time",   "ms",  { refTime }

[VeAnalyze]

        ;    tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition
       veAnalyzeMap = veTableTbl, afrTableTbl, AFRValue, egoCorrection, { 1 }
       lambdaTargetTables = afrTableTbl, afrTSCustom

       ; filter =  Name,        "DisplayName", outputChannel, operator, defaultVal, userAdjustable
        filter = minRPMFilter, "Minimum RPM", RPMValue,           <       , 500,      , true

         filter = minCltFilter, "Minimum CLT", coolant,       <       , 60,       , true

         filter = deltaTps, "dTPS", deltaTps       >       , 50,      , true

		filter = VBatt, "VBatt", VBatt       <       , 12,      , true

         filter = minTps, "Minimum TPS", TPSValue,       <       , 1,       , true


[OutputChannels]

   ochGetCommand    = "O%2o%2c"

; see TS_OUTPUT_SIZE in console source code
   ochBlockSize     = 288

;
; see TunerStudioOutputChannels struct
;

; Bit flags
	  hasSdCard       = bits,    U32,      0,    [0:0], "true", "false";
	  isIgnitionEnabledIndicator=bits,U32, 0,    [1:1], "true", "false";
	  ind_injection_enabled=bits,U32,      0,    [2:2], "true", "false";
	  isCylinderCleanupEnabled=bits,U32,   0,    [3:3], "true", "false";
	  isCylinderCleanupActivated=bits,U32, 0,    [4:4], "true", "false";
	  ind_fuel_pump   = bits,    U32,      0,    [5:5], "true", "false";
	  ind_fan         = bits,    U32,      0,    [6:6], "true", "false";
	  ind_o2_heater   = bits,    U32,      0,    [7:7], "true", "false";
      ind_check_engine= bits,    U32,      0,    [8:8], "true", "false";
      needBurn        = bits,    U32,      0,    [9:9], "true", "false";
      ind_2nd_trigger_en=bits,   U32,      0,  [10:10], "true", "false";
      clutchUpState    =bits,    U32,      0,  [11:11], "true", "false";
      clutchDownState  =bits,    U32,      0,  [12:12], "true", "false";
      knockEverIndicator=bits,   U32,      0,  [13:13], "true", "false";
      knockNowIndicator=bits,    U32,      0,  [14:14], "true", "false";
      brakePedalIndicator=bits,  U32,      0,  [15:15], "true", "false";
      toothLogReady      =bits,  U32,      0,  [16:16], "true", "false";
      acSwitchIndicator =bits,   U32,      0,  [17:17], "true", "false";
      ind_tps_error   = bits,    U32,      0,  [18:18], "true", "false";
      ind_clt_error   = bits,    U32,      0,  [19:19], "true", "false";
; not implemented
;      ind_map_error   = bits,    U32,      0,  [20:20], "true", "false";

      ind_iat_error   = bits,    U32,      0,  [21:21], "true", "false";
      ind_isTriggerError = bits, U32,      0,  [23:23], "true", "false";
      ind_hasFatalError=bits,    U32,      0,  [24:24], "true", "false";
	  ind_isWarnNow    =bits,    U32,      0,  [25:25], "true", "false";
	  ind_pedal_error  =bits,    U32,      0,  [26:26], "true", "false";

; RPM, vss
      RPMValue        = scalar,  U16,      4,      "RPM",    1,   0.00000
      rpmAcceleration = scalar,  S16,      6,     "dRpm",{1/100},         0
      speedToRpmRatio = scalar,  S16,      8,    "value",{1/100},         0
      vehicleSpeedKph = scalar,  U08,     10,      "kph",    1,       0.0

; temperatures
     internalMcuTemperature = scalar,S08, 11,    "deg C",    1,         0
      coolant         = scalar,  S16,     12,    "deg C",{1/100},       0.0
      intake          = scalar,  S16,     14,    "deg C",{1/100},       0.0
      auxt1           = scalar,  S16,     16,    "deg C",{1/100},       0.0
      auxt2           = scalar,  S16,     18,    "deg C",{1/100},       0.0
      

; throttle, pedal
      TPSValue        = scalar,  S16,     20,        "%",{1/100},         0
      throttlePedalPosition = scalar,S16, 22,        "%",{1/100},         0
      tpsADC          = scalar,  U16,     24,      "ADC",    1,       0.0;

; air flow/mass measurments
      MAFValue        = scalar,  U16,     26,        "V",,{1/1000},,         0
      massAirFlowValue= scalar,  U16,     28,     "Kg/h", {1/10},         0
      MAPValue        = scalar,  U16,     30,     "kPa",{1/30},       0.0
      baroPressure    = scalar,  U16,     32,     "kPa",{1/30},       0.0
      AFRValue        = scalar,  U16,     34,      "AFR",,{1/1000},,       0.0
      engineLoad      = scalar,  U16,     36,        "%",{1/100},       0.0 ; Blend of MAP and TPS, depends on algorithm

; misc sensors
      VBatt           = scalar,	 U16,     38,        "V",,{1/1000},,       0.0
      oilPressure     = scalar,  U16,     40,     "kPa",{1/30},       0.0
      vvtPosition     = scalar,  U16,     42,      "deg",{1/50},         0

      ; 10 bit TPS ADC value (from 0 to 1023 in 5v scale)
      ;tpsADC2         = scalar,  U16,    44,             "ADC",            1,       0.0;

; fuel math
      chargeAirMass   = scalar,  U16,     44,        "g",0.001,         0
      crankingFuelMs  = scalar,  U16,     46,     "ms",{1/300},     0.0
      currentTargetAfr= scalar,  U16,     48,    "ratio",,{1/1000},,         0
      baseFuel        = scalar,  U16,     50,     "ms",{1/300},       0
      fuelRunning     = scalar,  U16,     52,     "ms",{1/300},       0
      actualLastInjection=scalar,U16,     54,     "ms",{1/300},     0.0
      injectorDutyCycle=scalar,  U08,     56,        "%",  0.5,         0
      veValue         = scalar,  U08,     57,    "ratio",  0.5,         0
      injectionOffset = scalar,  S16,     58,      "deg",{1/50},         0
      tCharge         = scalar,  U16,     60,    "deg C",{1/100},       0.0

; Corrections
      injectorLagMs   = scalar,  U16,     62,     "ms",{1/300},       0.0
      iatCorrection   = scalar,  S16,     64,        "%",{1/100},         0
      cltCorrection   = scalar,  S16,     66,        "%",{1/100},         0
      baroCorrection  = scalar,  S16,     68,        "%",{1/100},         0
      fuelPidCorrection=scalar,  S16,     70,       "%",{1/100},         0

; Wall model AE
      wallFuelAmount  = scalar,  U16,     72,     "ms",{1/300},         0
      wallFuelCorrection=scalar, S16,     74,       "ms",0.001,         0

; TPS/load AE
      engineLoadDelta = scalar,  S16,     76,    "value",{1/100},         0
      deltaTps        = scalar,  S16,     78,    "ratio",{1/100},         0
      engineLoadAccelExtra=scalar,S16,    80,    "value",{1/100},         0
      tpsAccelFuel    = scalar,  U16,     82,     "ms",{1/300},         0

; Ignition
      ignitionAdvance = scalar,  S16,     84,    "deg",{1/50},       0.0
      sparkDwellValue = scalar,  U16,     86,     "ms",{1/300},       0.0
      coilDutyCycle   = scalar,  S16,     88,      "%",{1/100},         0

; Idle & ETB
      idleAirValvePosition=scalar,S16,    90,      "%",{1/100},         0
      etbTarget       = scalar,  S16,     92,      "%",{1/100},         0
      etb1DutyCycle   = scalar,  S16,     94,      "%",{1/100},         0
      etb1Error       = scalar,  S16,     96,      "%",{1/100},         0

; Fuel system
      fuelTankLevel   = scalar,  S16,     98, "amount",{1/100},         0
      fuelConsumptionPerHour=scalar,F32, 100,    "kPa",      1,      0.0

; Knock
      knockCount      = scalar,  U32,    104,"counter",      1,         0
      knockLevel      = scalar,  F32,    108,  "Volts",      1,         0

; Mode, firmware, protocol, run time
; TS requires 'seconds' name since it has special internal meaning
      seconds         = scalar,  U32,    112,    "sec",      1,       0.0
      engineMode      = scalar,  U32,    116,     "em",      1,       0.0;
      firmwareVersion = scalar,  U32,    120,"version_f",    1,         0


; calibation helpers
      calibrationValue = scalar, F32, 128, "", 1, 0
      calibrationMode = scalar, U08, 132, "", 1, 0
      ; 1 bytes padding1
      
      fuelingLoad     = scalar, U16,     134,      "%",     0.01, 0
      ignitionLoad    = scalar, U16,     136,      "%",     0.01, 0

; Errors
      totalTriggerErrorCounter=scalar,U32,   140,"counter",           1,         0
      ; orderingErrorCounter 144
      warningCounter  = scalar,  U16,    148,  "count",           1,         0
      lastErrorCode   = scalar,  U16,    150,  "error",           1,         0
      recentErrorCode0= scalar,  U16,    152,  "error",           1,         0
      recentErrorCode1= scalar,  U16,    154,  "error",           1,         0
      recentErrorCode2= scalar,  U16,    156,  "error",           1,         0
      recentErrorCode3= scalar,  U16,    158,  "error",           1,         0
      recentErrorCode4= scalar,  U16,    160,  "error",           1,         0
      recentErrorCode5= scalar,  U16,    162,  "error",           1,         0
      recentErrorCode6= scalar,  U16,    164,  "error",           1,         0
      recentErrorCode7= scalar,  U16,    166,  "error",           1,         0

; Debug
      debugFloatField1= scalar,  F32,    168,    "val",           1,       0.0
      debugFloatField2= scalar,  F32,    172,    "val",           1,       0.0
      debugFloatField3= scalar,  F32,    176,    "val",           1,       0.0
      debugFloatField4= scalar,  F32,    180,    "val",           1,       0.0
      debugFloatField5= scalar,  F32,    184,    "val",           1,       0.0
      debugFloatField6= scalar,  F32,    188,    "val",           1,       0.0
      debugFloatField7= scalar,  F32,    192,    "val",           1,       0.0
      debugIntField1  = scalar,  S32,    196,    "val",           1,       0.0
      debugIntField2  = scalar,  S32,    200,    "val",           1,       0.0
      debugIntField3  = scalar,  S32,    204,    "val",           1,       0.0
      debugIntField4  = scalar,  S16,    208,    "val",           1,       0.0
      debugIntField5  = scalar,  S16,    210,    "val",           1,       0.0

; Accel
      accelerationX   = scalar,  S16,    212,      "G",        0.01,         0
      accelerationY   = scalar,  S16,    214,      "G",        0.01,         0

; egt
      egt1            = scalar,  S16,    216,  "deg C",      1,         0
      egt2            = scalar,  S16,    218,  "deg C",      1,         0
      egt3            = scalar,  S16,    220,  "deg C",      1,         0
      egt4            = scalar,  S16,    222,  "deg C",      1,         0
      egt5            = scalar,  S16,    224,  "deg C",      1,         0
      egt6            = scalar,  S16,    226,  "deg C",      1,         0
      egt7            = scalar,  S16,    228,  "deg C",      1,         0
      egt8            = scalar,  S16,    230,  "deg C",      1,         0

      TPS2Value       = scalar,  S16,    232,        "%",{1/100},         0

      rawTps1Primary  = scalar,	 U16,    234, "V",{1/1000}, 0.0
      rawPpsPrimary   = scalar,	 U16,    236, "V",{1/1000}, 0.0
      rawClt          = scalar,	 U16,    238, "V",{1/1000}, 0.0
      rawIat          = scalar,	 U16,    240, "V",{1/1000}, 0.0
      rawOilPressure  = scalar,	 U16,    242, "V",{1/1000}, 0.0
      rawPpsSecondary = scalar,	 U16,    248, "V",{1/1000}, 0.0

	; we use this to match logs to tunes
	tuneCrc16         = scalar,  U16,    244, "crc16",           1,         0
	widebandIdent	= scalar,  S16,    246,    "val",           1,       0.0
knock1 = scalar, S08, 250, "dbv", 1, 0
	knock2 = scalar, S08, 251, "dbv", 1, 0
	knock3 = scalar, S08, 252, "dbv", 1, 0
	knock4 = scalar, S08, 253, "dbv", 1, 0
	knock5 = scalar, S08, 254, "dbv", 1, 0
	knock6 = scalar, S08, 255, "dbv", 1, 0
	knock7 = scalar, S08, 256, "dbv", 1, 0
	knock8 = scalar, S08, 257, "dbv", 1, 0
 	map_bar      = { (MAPValue - 100) / 101.33 }
;
; see TunerStudioOutputChannels struct
;

; todo: generate this section programatically
	LM_SPEED_DENSITY = {3},
	LM_REAL_MAF = {4}

      egoCorrection   = { 100 }
      time            = { timeNow }

	; These "synthetic" channels provide the Y-axis (load) value for gen purp PWM table's Y axes
	gppwm1_load = {(gppwm1_loadAxis == 0) ? TPSValue : ((gppwm1_loadAxis == 1) ? MAPValue : ((gppwm1_loadAxis == 2) ? coolant : ((gppwm1_loadAxis == 3) ? intake : ((gppwm1_loadAxis == 4) ? fuelingLoad : ignitionLoad))))}
	gppwm2_load = {(gppwm2_loadAxis == 0) ? TPSValue : ((gppwm2_loadAxis == 1) ? MAPValue : ((gppwm2_loadAxis == 2) ? coolant : ((gppwm2_loadAxis == 3) ? intake : ((gppwm2_loadAxis == 4) ? fuelingLoad : ignitionLoad))))}
	gppwm3_load = {(gppwm3_loadAxis == 0) ? TPSValue : ((gppwm3_loadAxis == 1) ? MAPValue : ((gppwm3_loadAxis == 2) ? coolant : ((gppwm3_loadAxis == 3) ? intake : ((gppwm3_loadAxis == 4) ? fuelingLoad : ignitionLoad))))}
	gppwm4_load = {(gppwm4_loadAxis == 0) ? TPSValue : ((gppwm4_loadAxis == 1) ? MAPValue : ((gppwm4_loadAxis == 2) ? coolant : ((gppwm4_loadAxis == 3) ? intake : ((gppwm4_loadAxis == 4) ? fuelingLoad : ignitionLoad))))}
	vvtLoad = 		{ (vvt_vvtLoadAxis == 0) ? MAPValue : TPSValue }

[PcVariables]
	
 	
    wueAfrTargetOffset = array, S16, [ 16], ":1",   0.1, 0.0, -3.0, 3.0, 1
    wueAnalRecommend   = array, U08, [ 16], "%",  1.00, 0.0, 100, 255.00, 0

    algorithmUnits 			= bits,    	U08,   	[0:2], 	"INVALID",  "INVALID",   "INVALID", "KPA", "Kg/h", "TPS"
    troubleList  			= bits,   	U08,   	[0:7], 	"Ok", 	"Electronic Throttle out of range", "MAP Sensor out of range", "IAT Sensor out of range", "CLT Sensor out of range", "TPS Voltage too low", "TPS Voltage too high", "Crank Sensor error", "Cam Position sensor out of range", "Oil Pressure sensor out of range", "System Voltage out of range", "Processor error", "Invalid TPS Setting", "Pin already used", "Pin already used" ,"Analog Input Already Used", "Zero Cranking Fuel" , "Analog Input Not Configured" , "Duty Too High" 
    vvtLoadUnits 			= bits,    	U08,   	[0:1], 	"kPa", "%", "INVALID", "INVALID"
; These are inverted (false = "Yes") so that they default to enabled
	enableLogDebugChannels = bits, U08, [0:0], "Yes", "No"
	enableLogErrorList = bits, U08, [0:0], "Yes", "No"

; wall of debug mode :)
; https://rusefi.com/wiki/index.php?title=Manual:Debug_fields
;                                            0                     1                     2            3                           4                      5                            6             7              8                    9            10                   11       12           13          14             15            16              17                       18                 19            20              21               22                23         24           25                26           27         28        29      30       31                32                      33     34       35       36                       37              38            39                40               41           42           43
;											 Alternator            TPS Acceleration      Warmup-Pid   Idle                        Engine Load Acc        Trigger Counters                                          VVT                  Cranking     Ignition Timing                                                                                     ETB PID                                                                                                     FSIO_1_7                 CJ125             CAN                                                TLE8888           Analog inputs 2         Boost                    Start           Launcher      ETB Autotune                                                FSIO_8_14    FSIO_SPECIAL
;                                            DBG_ALTERNATOR_PID    DBG_TPS_ACCEL         DBG_2        DBG_IDLE_CONTROL
    debugFieldF1List = bits,   U08,   [0:7], "Controller Output",  "From TPS",           "",          "Controller Output",        "Idle output",         "Channel 1 Rise Counter",    "",           "",            "VVT Event Position","",          "Ign IAT Corr",      "",      "",         "",         "",            "",           "",             "ETB Controller Output", "",                "",           "df1",          "df1",           "22df1",          "fsio 1",  "24:df1",     "CJ125: output",  "",          "",         "",       "",     "",     "",               "TPS1 Pri/Sec Diff",    "",    "",      "",      "Boost Open Loop Duty",  "S unused"      "ActivatePinState",           	"Osc Amplitude",  "",              "fsio 8",    "idle offset",""
    debugFieldF2List = bits,   U08,   [0:7], "I-Term",             "To TPS",             "",          "I-Term",                   "Idle df2",            "Channel 2 Rise Counter",    "",           "",            "VVT Ratio",         "",          "Ign CLT Corr",      "",      "",         "",         "",            "",           "",             "ETB I-Term",            "",                "",           "df2",          "df2",           "22df2",          "fsio 2",  "24:df2",     "CJ125: i-term",  "",          "",         "",       "",     "",     "",               "TPS2 Pri/Sec Diff",    "",    "",      "",      "Boost Closed Loop Duty","S unused"      "isLaunchCondition",           	"Duty Amplitude", "",              "fsio 9",    "idle min",   ""
    debugFieldF3List = bits,   U08,   [0:7], "Previous Error",     "Current TPS<>TPS",   "",          "prev error",               "Idle df3",            "ICU sum",                   "",           "",            "",                  "",          "Ign FSIO Adj",      "",      "",         "",         "",            "",           "",             "ETB err",               "",                "",           "df3",          "df3",           "22df3",          "fsio 3",  "24:df3",     "CJ125: err",     "",          "",         "",       "",     "",     "",               "",                     "",    "",      "",      "",                      "S unused"      "clutchDownState",           	"Tu",             "",              "fsio 10",   "",           ""
    debugFieldF4List = bits,   U08,   [0:7], "I Gain",             "Extra Fuel",         "",          "I Gain",                   "Idle df4",            "VVT rise",                  "",           "",            "",                  "",          "Ign PID Adj",       "",      "",         "",         "",            "",           "",             "ETB I setting",         "",                "",           "df4",          "df4",           "22df4",          "fsio 4",  "24:df4",     "CJ125: UA",      "",          "",         "",       "",     "",     "",               "",                     "",    "",      "",      "",                      "S unused"      "launchControlEnabled",           "Ku",             "",              "fsio 11",   "",           ""
    debugFieldF5List = bits,   U08,   [0:7], "D Gain",             "df5",                "df5",       "D Gain",                   "Idle df5",            "VVT fall",                  "df5",        "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB D setting",         "df5",             "df5",        "df5",          "df5",           "22df5",          "fsio 5",  "24:df5",     "CJ125: UR",      "",          "",         "",       "",     "",     "",               "",                     "",    "",      "",      "",                      "S unused"      "",           					"Kp",             "",              "fsio 12",   "",           ""
    debugFieldF6List = bits,   U08,   [0:7], "D Term",             "",                   "",          "D Term",                   "Idle df6",            "Current Gap",               "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB df6",               "",                "",           "df6",          "df6",           "22df6",          "fsio 6",  "24:df6",     "cj: f7",         "",          "",         "",       "",     "",     "",               "",                     "",    "",      "",      "",                      "S unused"      "",           "Ki",             	"",              "fsio 13",   "",           ""
    debugFieldF7List = bits,   U08,   [0:7], "Max-Value",          "",                   "",          "Max-Value",                "Idle df7",            "",                          "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB df7",               "",                "",           "df7",          "df7",           "22df7",          "fsio 7",  "24:df7",     "cj: f7",         "",          "",         "",       "",     "",     "",               "",                     "",    "",      "",      "",                      "S unused"      "",           "Kd",             	"",              "fsio 14",   "",           ""

    debugFieldI1List = bits,   U08,   [0:7], "P-Gain",             "",                   "",          "P-Gain",                   "Idle di1",            "Channel 1 Fall Counter",    "",           "",            "VVT Sync Counter",  "",          "Multispark Count",  "",      "",         "",         "",            "",           "",             "ETB P-Gain",            "",                "",           "di1",          "di1",           "22di1",          "",        "24:di1",     "CJ125: state",   "read count","",         "",       "",     "",     "SPI Counter",    "",                     "",    "",      "",      "",                      "Start Count"   "rpmCondition",           		"",               "",              "",          "",           ""
    debugFieldI2List = bits,   U08,   [0:7], "Offset",             "",                   "",          "Offset",                   "Idle di2",            "Channel 2 Fall Counter",    "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB di2",               "",                "",           "di2",          "di2",           "22di2",          "",        "24:di2",     "",               "write count","",        "",       "",     "",     "Latest Transmit","",                     "",    "",      "",      "",                      "S unused"      "tpsCondition",           		"",               "",              "",          "",           ""
    debugFieldI3List = bits,   U08,   [0:7], "Reset Cnt",          "",                   "",          "Reset Cnt",                "Idle di3",            "Cycle Index",               "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB di3",               "",                "",           "di3",          "di3",           "22di3",          "",        "24:di3",     "",               "write err", "",         "",       "",     "",     "Latest Received","",                     "",    "",      "",      "",                      "S unused"      "speedCondition",           		"",               "",              "",          "",           ""
    debugFieldI4List = bits,   U08,   [0:7], "Period",             "",                   "",          "State",                    "Idle di4",            "Cycle Cnt 1",               "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "",           "",             "ETB di4",               "",                "",           "di4",          "di4",           "22di4",          "",        "24:di4",      "",              "",          "",         "",       "",     "",     "Init Count",     "",                     "",    "",      "",      "",                      "S unused"      "SwitchCondition",           	"",               "",              "",          "",           ""
    debugFieldI5List = bits,   U08,   [0:7], "",                   "",                   "",          "",                         "Idle di5",            "Cycle Cnt 2",               "",           "",            "",                  "",          "",                  "",      "",         "",         "",            "di5",        "di5",          "ETB di5",               "di5",             "di5",        "di5",          "di5",           "22di5",          "di5",     "di5",        "di5",            "di5",       "di5",      "di5",    "di5",  "di5",  "di5",            "",                     "di5", "di5",   "di5",   "di5",                   "S di5"         "combinedConditions",           "",               "",              "",          "",           ""

[ConstantsExtensions]
     ; defaultValue is used to provide TunerStudio with a value to use in the case of
     ; the constant not yet being initialized. This is primarily important if the
     ; constant is used as a variable in the ini.
     ; defaultValue = constantName, value;
    defaultValue = wueAfrTargetOffset, -1.5 -1.4 -1.15 -0.95 -0.775 -0.65 -0.5625 -0.5 -0.4375 -0.375 -0.3125 -0.25 -0.1875 -0.125 -0.0625 0

	; TPS 1 Primary
	maintainConstantValue = tpsMax, { (calibrationMode == 1 ) ? calibrationValue : tpsMax }
	maintainConstantValue = tpsMin, { (calibrationMode == 2 ) ? calibrationValue : tpsMin }

	; TPS 1 Secondary
	maintainConstantValue = tps1SecondaryMax, { (calibrationMode == 6 ) ? calibrationValue : tps1SecondaryMax }
	maintainConstantValue = tps1SecondaryMin, { (calibrationMode == 7 ) ? calibrationValue : tps1SecondaryMin }

	; TPS 2 Primary
	maintainConstantValue = tps2Max, { (calibrationMode == 8 ) ? calibrationValue : tps2Max }
	maintainConstantValue = tps2Min, { (calibrationMode == 9 ) ? calibrationValue : tps2Min }

	; TPS 2 Secondary
	maintainConstantValue = tps2SecondaryMax, { (calibrationMode == 10 ) ? calibrationValue : tps2SecondaryMax }
	maintainConstantValue = tps2SecondaryMin, { (calibrationMode == 11 ) ? calibrationValue : tps2SecondaryMin }

	; ETB Auto Gain Calibration
	maintainConstantValue = etb_pFactor, { (calibrationMode == 3 ) ? calibrationValue : etb_pFactor }
	maintainConstantValue = etb_iFactor, { (calibrationMode == 4 ) ? calibrationValue : etb_iFactor }
	maintainConstantValue = etb_dFactor, { (calibrationMode == 5 ) ? calibrationValue : etb_dFactor }




[CurveEditor]
;	xAxis       =  leftValue, rightValue, step
;	yAxis       =  bottomValue, topValue, step

curve = narrowToWideOxygenCurve, "Narrow to Wideband approximation"
    columnLabel 	= "Voltage", "AFR"
    xAxis       	=  0, 6, 10
    yAxis       	=  0,  28, 10
    xBins       	= narrowToWideOxygenBins
    yBins       	= narrowToWideOxygen
    suppressGraph 	= true
    showTextValues 	= true


curve = mapAccelTaper, "Engine Load Acceleration Enrichment Decay"
    columnLabel 	= "", ""
    xAxis       	=  0, 128, 10
    yAxis       	= -50,  100, 5
    xBins       	= loadBasedAeDecayBins
    yBins       	= loadBasedAeDecayMult
	 showTextValues 	= true

curve = dwellCorrection, "Dwell time RPM based"
    columnLabel 	= "RPM", "Dwell"
    xAxis       	=  0, 8000, 10
    yAxis       	=  0,  30, 10
    xBins       	= sparkDwellRpmBins, RPMValue
    yBins       	= sparkDwellValues
    suppressGraph 	= true
    showTextValues 	= true
    
curve = injectorsDeadTime, "Injector Dead Time"
    columnLabel 	= "Voltage", "Dead Time"
    xAxis       	=  8, 21, 10
    yAxis       	= -3,  3, 10
    xBins       	= injector_battLagCorrBins, VBatt
    yBins       	= injector_battLagCorr
    suppressGraph 	= true
    showTextValues 	= true
	  	  

curve = afterstartHoldTimeCurve, "AfterStart Hold Time"
    columnLabel 	= "Coolant Temp", "Seconds"
    xAxis       	=  -40, 120, 10
    yAxis       	=  0,  50, 11
    xBins       	= afterstartCoolantBins, coolant
     yBins       	= afterstartHoldTime
	suppressGraph 	= true
    showTextValues 	= true


curve = afterstartDecayCurve, "AfterStart Decay Time"
    columnLabel 	= "Coolant Temp", "Seconds"
    xAxis       	=  -40, 120, 10
    yAxis       	=  0,  50, 11
    xBins       	= afterstartCoolantBins, coolant
    yBins       	= afterstartDecayTime
	suppressGraph 	= true
    showTextValues 	= true

curve = afterstartEnrichCurve, "AfterStart Enrichment     Addition To Normal Fueling In %"
    columnLabel 	= "Coolant Temp", "%"
    xAxis       	=  -40, 120, 10
    yAxis       	=  0,  2, 11
    xBins       	= afterstartCoolantBins, coolant
    yBins       	= afterstartEnrich
	suppressGraph 	= true
    showTextValues 	= true

curve = iatFuelCorrCurve, "IAT Warmup Correction     Correction +/- In % To Normal Fueling"
    columnLabel 	= "Intake Air Temp", "% Trim"
    xAxis       	=  -40, 120, 10
    yAxis       	=  0,  2, 11
    xBins       	= iatFuelCorrBins, intake
    yBins       	= iatFuelCorr
	suppressGraph 	= true
    showTextValues 	= true
	
curve = cltFuelCorrCurve, "Warmup Enrichment    Correction +/- In % To Normal Fueling"
    columnLabel 	= "Coolant", "% Trim"
    xAxis       	=  -40, 100, 10
    yAxis       	=  0,  3, 10
    xBins       	= cltFuelCorrBins, coolant
    yBins       	= cltFuelCorr
	showTextValues 	= true
    suppressGraph 	= true

curve = crankingCltCurve, "Cranking Enrichment    Addition To Normal Fueling In %"
    columnLabel 	= "Coolant", "%"
    xAxis       	=  -40, 100, 10
    yAxis       	=  0,  3, 10
    xBins       	= crankingFuelBins, coolant
    yBins       	= crankingFuelCoef
	showTextValues 	= true
    suppressGraph 	= true

curve = etbTpsBiasCurve, "Feed Forward"
    columnLabel 	= "TPS Position", "Duty Cycle"
    xAxis       	=  0, 100, 10
    yAxis       	=  0,  100, 10
    xBins       	= etbBiasBins, TPSValue
    yBins       	= etbBiasValues
	showTextValues 	= true
    suppressGraph 	= true

curve = crankingTpsCurve, "Cranking TPS Correction"
    columnLabel 	= "TPS", "% Trim"
    xAxis       	=  0, 100, 10
    yAxis       	=  0,  3, 10
    xBins       	= crankingTpsBins, TPSValue
    yBins       	= crankingTpsCoef
	suppressGraph 	= true
    showTextValues 	= true

curve = crankingDurationCurve, "First Crank Enrichment     Addition To Cranking Enrichment in %"
    columnLabel 	= "Engine Cycle", "%"
    xAxis       	=  0, 1000, 10
    yAxis       	=  0,  3, 10
    xBins       	= crankingCycleBins
    yBins       	= crankingCycleCoef
	showTextValues 	= true
    suppressGraph 	= true

curve = cltIdleCurve, "Warmup Idle Correction"
    columnLabel 	= "Coolant", "% Trim"
	xAxis       	= -40, 120, 10
    yAxis       	=  0,  3, 10
    xBins       	= cltIdleCorrBins, coolant
    yBins       	= cltIdleCorr
	suppressGraph 	= true
    showTextValues 	= true

curve = iacCoastingCurve, "Coasting IAC Position for Auto-Idle"
    columnLabel 	= "Coolant", "%"
    xAxis       	= -40, 120, 10
    yAxis       	=  0,  100, 10
    xBins       	= iacCoastingBins, coolant
    yBins       	= iacCoasting
    gauge       	= idleAirValvePositionGauge

curve = cltCrankingCurve, "Cranking Idle Air Correction"
    columnLabel 	= "Coolant", "% Trim"
    xAxis       	= -40, 120, 10
    yAxis       	=  0,  3, 10
    xBins       	= cltCrankingCorrBins, coolant
    yBins       	= cltCrankingCorr
	suppressGraph 	= true
    showTextValues 	= true

curve = cltIdleRPMCurve, "Idle Target RPM"
    columnLabel 	= "Coolant", "RPM"
    xAxis       	= -40, 120, 10
    yAxis       	=  0, 8000, 10
    xBins       	= cltIdleRpmBins, coolant
    yBins       	= cltIdleRpm, RPMValue
	suppressGraph 	= true
    showTextValues 	= true

curve = idleAdvanceCurve, "Idle Advance Angle"
    columnLabel 	= "RPM", "degrees"
    xAxis       	= 0, 8000, 10
    yAxis       	= -100, 100, 10
    xBins       	= idleAdvanceBins, RPMValue
    yBins       	= idleAdvance
	suppressGraph 	= true
    showTextValues 	= true

curve = idleVeCurve, "Idle Fuel Table"
    columnLabel 	= "RPM", "%"
    xAxis       	= 0, 8000, 10
    yAxis       	= 0, 250, 10
    xBins       	= idleVeBins, RPMValue
    yBins       	= idleVe
    suppressGraph 	= true
    showTextValues 	= true
    
curve = crankingAdvanceCurve, "Cranking Advance Angle"
    columnLabel 	= "RPM", "Degrees"
    xAxis       	= 0, 8000, 10
    yAxis       	= -100, 100, 10
    xBins       	= crankingAdvanceBins, RPMValue
    yBins       	= crankingAdvance
    suppressGraph 	= true
    showTextValues 	= true

; Warmup enrichment VEAL AFR adjustment curves
       
			
        curve = warmup_analyzer_curve, "Warmup Enrichment"
            columnLabel = "Coolant", "Current WUE", "Coolant", "Recommended WUE"
            xAxis       = -40, 210, 9
            yAxis       = 100, 255, 6
            xBins       = cltFuelCorrBins, coolant
     		yBins       = cltFuelCorr
      
            lineLabel   = "Current WUE"
            lineLabel   = "Recommended WUE"


    curve = wueAfrTargetOffsetCurve, "AFR Target Temperature Adjustment"
      columnLabel = "Coolant", "AFR Offset"
      xAxis       = -40, 200, 9
      yAxis       =   -3,  1, 5
      xBins       = cltFuelCorrBins, coolant
      yBins       = wueAfrTargetOffset
     

    curve = wueAnalyzer_warmup_curve, "Warmup Enrichment"
      columnLabel = "Coolant", "Current WUE", "Coolant", "Corrected"
      xAxis       = -40, 200, 9
      yAxis       =   90,  500, 6
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
      yBins       = wueAnalRecommend
      ;gauge       = cltGauge
          
      lineLabel   = "Current WUE"
        lineLabel   = "Recommended WUE"

[TableEditor]
   ;       table_id,    map3d_id,    "title",      page

table = veTableTbl,  veTableMap,  "Fuel Table",   1
	xyLabels 	= "RPM", "LOAD"
    xBins       = frpm_table,  RPMValue
    yBins       = fmap_table,   fuelingLoad
    zBins       = veTable
    gridOrient  = 250,   0, 340 
    upDownLabel = "(RICHER)", "(LEANER)"



table = ignitionTableTbl,  ignitionTableMap,  "Ignition Table",   1
xyLabels 	= "RPM", "LOAD"
    xBins       = srpm_table,  RPMValue	
 	yBins       = smap_table,  ignitionLoad
    zBins       = advanceTable
    gridOrient  = 250,   0, 340 
    upDownLabel = "(RICHER)", "(LEANER)"
	

       table = boostTableTbl,  boostMapOpen,  "Boost Open",   1
      xBins       = boostRpmBins,  RPMValue
      yBins       = boostTpsBins,  TPSValue
      zBins       = boostTableOpenLoop

	table = boostTable2Tbl,  boostMapClosed,  "Boost Closed",   1
      xBins       = boostRpmBins,  RPMValue
      yBins       = boostTpsBins,  TPSValue
      zBins       = boostTableClosedLoop

table = tpsTpsAccelTbl,  tpsTpsAccelMap,  "TPS/TPS Acceleration Enrichment(ms)",   1
   	topicHelp 	= "tpstpsHelp"
	xyLabels 	= "From TPS", ""
    xBins       = tpsTpsAccelFromRpmBins,  TPSValue
    yBins       = tpsTpsAccelToRpmBins,  TPSValue
    zBins       = tpsTpsAccelTable


table = vvtTableTbl,  vvtMap,  "",   1
	xyLabels 	= "RPM", ""
    xBins       = vvtRpmBins,  RPMValue
    yBins       = vvtLoadBins,  vvtLoad
    zBins       = vvtTable
 



	
table = ignitionIatCorrTableTbl,  ignitionIatCorrTableMap,  "Ignition Intake Air Temp Correction",   1
	xyLabels = "RPM", "IAT"
    xBins       = ignitionIatCorrRpmBins,  RPMValue
    yBins       = ignitionIatCorrLoadBins,  intake
    zBins       = ignitionIatCorrTable
    gridOrient  = 250,   0, 340
    upDownLabel = "(RICHER)", "(LEANER)"




table = injPhaseTableTbl,  injPhaseTableMap,  "Injection Phase",   1
   	topicHelp 	= "fuelHelp"
  	xyLabels 	= "RPM", "LOAD"
    xBins       = injPhaseRpmBins,  RPMValue
    yBins       = injPhaseLoadBins,  fuelingLoad
    zBins       = injectionPhase
    gridOrient  = 250,   0, 340 
    upDownLabel = "(Later)", "(Sooner)"

table = pedalToTpsTbl,  pedalToTpsMap,  "Throttle Target Position",   1
	xyLabels 	= "RPM", "% TPS"
    xBins       = pedalToTpsRpmBins,  RPMValue
    yBins       = pedalToTpsPedalBins,  throttlePedalPosition
    zBins       = pedalToTpsTable
	gridOrient  = 250,   0, 340 
    upDownLabel = "(Later)", "(Sooner)"


   table = afrTableTbl,  afrTableMap,  "Target AFR Table",   1
      ;       constant, variable
      xBins       = afrRpmBins,  RPMValue
      yBins       = afrLoadBins,  fuelingLoad
      zBins       = afrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

table = iacPidMultTbl,  iacPidMultMap,  "IAC PID Multiplier Table",   1
	xyLabels 	= "RPM", "LOAD"
    xBins       = iacPidMultRpmBins,  RPMValue
    yBins       = iacPidMultLoadBins,  fuelingLoad
    zBins       = iacPidMultTable
    gridOrient  = 250,   0, 340
    upDownLabel = "(Later)", "(Sooner)"

	table = gppwm1Tbl, gppwm1Map, "GP#1", 1
		xyLabels = "RPM", ""
		xBins = gppwm1_rpmBins, RPMValue
		yBins = gppwm1_loadBins, gppwm1_load
		zBins = gppwm1_table

	table = gppwm2Tbl, gppwm2Map, "GP#2", 1
		xyLabels = "RPM", ""
		xBins = gppwm2_rpmBins, RPMValue
		yBins = gppwm2_loadBins, gppwm2_load
		zBins = gppwm2_table

	table = gppwm3Tbl, gppwm3Map, "GP#3", 1
		xyLabels = "RPM", ""
		xBins = gppwm3_rpmBins, RPMValue
		yBins = gppwm3_loadBins, gppwm3_load
		zBins = gppwm3_table

	table = gppwm4Tbl, gppwm4Map, "GP#4", 1
		xyLabels = "RPM", ""
		xBins = gppwm4_rpmBins, RPMValue
		yBins = gppwm4_loadBins, gppwm4_load
		zBins = gppwm4_table

[GaugeConfigurations]


gaugeCategory = Knock
	knockGauge = knockLevel, 	"Knock Level", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock1Gauge = knock1, 		"Knock Cyl 1", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock2Gauge = knock2, 		"Knock Cyl 2", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock3Gauge = knock3, 		"Knock Cyl 3", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock4Gauge = knock4, 		"Knock Cyl 4", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock5Gauge = knock5, 		"Knock Cyl 5", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock6Gauge = knock6, 		"Knock Cyl 6", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock7Gauge = knock7, 		"Knock Cyl 7", "dBv", -60, 10, -60, -60, 10, 10, 0, 0
   	knock8Gauge = knock8, 		"Knock Cyl 8", "dBv", -60, 10, -60, -60, 10, 10, 0, 0

gaugeCategory = Sensors - Extra 2

   	rpmAccelerationGa = rpmAcceleration,     "rpm delta",        "dRpm",        0,      3,       0,      1,       3,     4,   1,   1
   	fuelTankLevelGauge   = fuelTankLevel,"Fuel level",           "x",        0,      7,      10,     10,     100,   100,   1,   2
   	speedToRpmRatioGauge = speedToRpmRatio, "speed2rpm", "",     0,   100,     0,    0,    100,  100,   4,   4
 	

gaugeCategory = ECU Status
  
   
	warningCounterGauge = warningCounter, "Warning count", "",     0,   100,     0,    0,    100,  100,   0,   0
   	lastErrorCodeGauge = lastErrorCode, "Last error", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	triggerErrorsCounterGauge = totalTriggerErrorCounter, "Trigger error count", "count",     0,   15000,     0,    0,    6000,  6000,   0,   0
   	recentErrorCode0Gauge = recentErrorCode0, "Error#1", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode1Gauge = recentErrorCode1, "Error#2", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode2Gauge = recentErrorCode2, "Error#3", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode3Gauge = recentErrorCode3, "Error#4", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode4Gauge = recentErrorCode4, "Error#5", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode5Gauge = recentErrorCode5, "Error#6", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode6Gauge = recentErrorCode6, "Error#7", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   	recentErrorCode7Gauge = recentErrorCode7, "Error#8", "",     0,  18000,     0,    0,   18000, 18000,   0,   0


gaugeCategory = Debug  
  debugF1Gauge = debugFloatField1, {bitStringValue( debugFieldF1List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF2Gauge = debugFloatField2, {bitStringValue( debugFieldF2List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF3Gauge = debugFloatField3, {bitStringValue( debugFieldF3List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF4Gauge = debugFloatField4, {bitStringValue( debugFieldF4List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF5Gauge = debugFloatField5, {bitStringValue( debugFieldF5List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF6Gauge = debugFloatField6, {bitStringValue( debugFieldF6List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF7Gauge = debugFloatField7, {bitStringValue( debugFieldF7List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugI1Gauge = debugIntField1,   {bitStringValue( debugFieldI1List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI2Gauge = debugIntField2,   {bitStringValue( debugFieldI2List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI3Gauge = debugIntField3,   {bitStringValue( debugFieldI3List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI4Gauge = debugIntField4,   {bitStringValue( debugFieldI4List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI5Gauge = debugIntField5,   {bitStringValue( debugFieldI5List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0


gaugeCategory = Sensors - Basic
   	RPMGauge        = RPMValue,	"RPM - Engine Speed",	"RPM",		0,   15000,     200,    500,    6000,  6000,   0,   0
   	CLTGauge    	= coolant, 	"Coolant Temp",        	"deg C",  -40,     140,     -15,      1,      95,   110,   1,   1
   	IATGauge       	= intake,  	"Intake Air Temp",     	"deg C",  -40,     140,     -15,      1,      95,   110,   1,   1
   	afr1Gauge      	= AFRValue, "Air Fuel Ratio",      	"AFR",     10,    19.4,      12,     13,      15,    16,   2,   1
   	MAFGauge		= MAFValue, "Mass Air Flow",      	"V",       	0,       5,       0,      1,       3,     4,   1,   1
   	VBattGauge    	= VBatt,    "Battery Voltage",    	"V",        8,       21,      9,     10,      17,    19,   1,   1
   	MAPGauge     	= MAPValue,	"MAP",       			"KPa",      0,      300,     10,     10,     200,   200,   0,   0	
   	mapGauge_bar	= map_bar,	"Engine MAP (BAR)",    	"Bar",     	-1,       3,     -1,     -1,    5,  5,  2, 1

  
;Name                 Var                    Title           Units       Lo     Hi      LoD     LoW      HiW   HiD   vd   ld

gaugeCategory = Other Sensors
   	VSSGauge          = vehicleSpeedKph,     "Vehicle speed",         "kmh",        0,    200,       0,      1,       3,     4,   1,   1
   	atmPresCGauge     = baroPressure,          "Barometric pressure",       "kPa",        0,   1024,       0,      0,       0,     0,   0,   0
   	vvtPositionGauge = vvtPosition, "VVT position", "deg",     0,   100,     0,    0,    720,  720,   0,   0
   	OilPressGauge   	 = oilPressure,   "Oil Pressure",       "kPa",        0,    750,      35,     75,     550,   700,   0,   0	
   	idleAirValvePositionGauge = idleAirValvePosition, "Idle position", "%",     0,   100,     0,    0,    100,  100,   1,   1
   	fuelTankLevelGauge   = fuelTankLevel,"Fuel level",           "x",        0,      7,      10,     10,     100,   100,   1,   1
	

gaugeCategory = Sensors - Voltage
   	TpsVoltageGauge  = rawTps1Primary, "TPS 1 Primary Volts", "V", 0, 5, 0, 0, 5, 5, 3, 0
   	PedalVoltageGauge   = rawPpsPrimary , "Pedal Primary Volts", "V", 0, 5, 0, 0, 5, 5, 3, 0
   	CltVoltsGauge          = rawClt        , "CLT Volts",           "V", 0, 5, 0, 0, 5, 5, 3, 0
   	IatVoltsGauge          = rawIat        , "IAT Volts",           "V", 0, 5, 0, 0, 5, 5, 3, 0
   	OilPressVoltsGauge  = rawOilPressure, "Oil Pressure Volts",  "V", 0, 5, 0, 0, 5, 5, 3, 0
	MAFGauge			   = MAFValue,        "MAF Volts",         "V", 0, 5, 0, 0, 5, 5, 3, 0


gaugeCategory = Ignition
   	ignadvGauge = ignitionAdvance,       "Ignition timing",   "degrees",     -100,    100,    -999,   -999,     999,   999,   1, 1
   	dwellGauge        = sparkDwellValue,           "Dwell",      "mSec",        0,     10,     0.5,    1.0,     6.0,   8.0,   1, 1
   	coilDutyCycleGauge = coilDutyCycle,       "dwell: coil duty cycle",      "perc",        -11,   11,     1.0,    1.2,      100,    100,   3, 1
   ignitionLoadGauge = ignitionLoad, "ign: load", "%", 0, 300, 0, 0, 300, 300, 1, 1

gaugeCategory = Acceleration Enrichment
   	engineLoadDeltaGauge = engineLoadDelta,"AE: load change","value",      0,    120,      10,     10,     100,   100,   1,   1
   	engineLoadAccelExtraGauge = engineLoadAccelExtra,"AE: load extra","value",      0,    120,      10,     10,     100,   100,   1,   1
   	deltaTpsGauge     = deltaTps,                "AE: TPS change",            "",        0,    120,      10,     10,     100,   100,   1,   1
   	tpsAccelFuelGauge = tpsAccelFuel,"AE: TPS enrich",             "ms",        0,    120,      10,     10,     100,   100,   1,   1
   	wallFuelAmountGauge = wallFuelAmount, "AE: wall amount", "ms",     0,   100,     0,    0,    100,  100,   0,   0
   	wallFuelCorrectionGauge = wallFuelCorrection, "AE: wall correction extra", "ms",     0,   100,     0,    0,    100,  100,   0,   0

gaugeCategory = Fueling
   ;Name               Var            Title                 Units        Lo      Hi      LoD    LoW       HiW   HiD    vd  ld
   tChargeGauge          = tCharge,     "fuel: Estimated charge temperature",        "deg C",      -40,    140,     -15,      1,      95,   110,   1,   1
   baroCorrectionGauge  = baroCorrection,"fuel: Barometric pressure correction",           "ratio",        0.5,    1.5,      0.6,     0.7,     1.3,   1.4,   1,   1
   crankingFuelGauge = crankingFuelMs,   "fuel: cranking",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   iatCorrectionGauge = iatCorrection, "fuel: IAT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   cltCorrectionGauge = cltCorrection, "fuel: CLT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   injectorDutyCycleGauge=injectorDutyCycle, "fuel: injector duty cycle","%",      0,    120,      10,     10,     100,   100,   1,   1
   actualLastInjectionGauge   = actualLastInjection,     "fuel: Last injection", "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   veValueGauge      = veValue,                 "fuel: VE",            "",        0,    120,      10,     10,     100,   100,   1,   1
   
   injectorLagMsGauge = injectorLagMs,       "fuel: injector lag",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelRunningGauge     = fuelRunning,       "fuel: running",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   baseFuelGauge     = baseFuel,       "fuel: base",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelPidCorrectionGauge = fuelPidCorrection,       "fuel: Short-term fuel trim",      "%",        -10,   10,     -8, -5, 5, 8,   3, 1
   fuelingLoadGauge = fuelingLoad, "fuel: load", "%", 0, 300, 0, 0, 300, 300, 1, 1

gaugeCategory = Throttle Body (incl. ETB)
   	pedalPositionGauge = throttlePedalPosition, "Throttle pedal position",        "%",    0,    120,      0,     0,     100,   100,   1,   1
   	tpsADCGauge       = tpsADC,           "tps1 ADC",       "ADC",        0,   1024,       0,      0,       0,     0,   0,   0
   	TPSGauge			 = TPSValue,      "Throttle position",         "%",        0,    100,       0,      0,     100,   100,   1,   1
   	TPS2Gauge		 = TPS2Value,     "Throttle position #2",         "%",        0,    100,       0,      0,     100,   100,   1,   1

   	etbTargetGauge     = etbTarget,     "ETB position target", "%",    0,    100,    0,     0,     100,   100,   1,   1
   	etbErrorGauge      = etb1Error,     "ETB position error",  "%",    -20,  20,    -10,   -5,    5,    10,  2, 0
   	etbDutyCycleGauge  = etb1DutyCycle, "ETB duty cycle",                 "%",    -100, 100,   -75,   -50,   50,   75,  0, 0
  	
gaugeCategory = WideBand
	afr1Gauge         = AFRValue, "Air fuel ratio",          "",       10,   19.4,      12,     13,      15,    16,   2,   1
	widebandIdentG = widebandIdent,     "CJ125 Ident",         "%",        0,    100,       0,      0,     100,   100,   1,   1
	;widebandStateGauge = cj125State,"Code",         "",        0,    120,      10,     10,     100,   1000,   1,   1
	;widebandDiagGauge = cj125Diag,"Code",         "",        0,    120,      10,     10,     100,   1000,   1,   1


[WueAnalyze]
    
;                    wueCurveName, afrTempCompensationCurve, lambdaTargetTableName, lambdaChannel, coolantTempChannel, egoCorrectionChannel, wueChannel, activeCondition
     wueAnalyzeMap = wueAnalyzer_warmup_curve, wueAfrTargetOffsetCurve, afrTableTbl, AFRValue, coolant, cltCorrection, egoCorrection

     lambdaTargetTables = afrTableTbl, afrTSCustom

     wuePercentOffset = 0 ; for working with 0 based enrichment set to 100
     option = disableLiveUpdates
     option = burnOnSend

;     filter = std_DeadLambda ; Auto build

     filter = decelFilterMap,"After Start Enrich", engine,         &     , 4 ,       , false
     filter = accelFilterTp, "TP Accel Enrich"   , engine,         &     , 16,       , false
     filter = decelFilterTp, "TP Decel Enrich"   , engine,         &     , 32,       , false
     filter = accelFilterMap,"MAP Accel Enrich"  , engine,         &     , 64,       , false
     filter = decelFilterMap,"MAP Decel Enrich"  , engine,         &     , 128,      , false
     ; this works, just another way to skin a cat
     ;filter = decelFilter, "Decel Flag" , tpsaccden,         >       , 0,        , false
     filter = overrunFilter, "Overrun"    , pulseWidth1,  =       , 0,            , false
     filter = highThrottle, "High Throttle"    , throttle,  >       , 15,         , true
     filter = lowRpm,       "Low RPM"    ,       rpm,       <       , 300,        , false
     filter = std_Custom ; Standard Custom Expression Filter.

   
[FrontPage]
   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   gauge1 = RPMGauge
   gauge2 = CLTGauge
   gauge3 = TPSGauge
   gauge4 = MAPGauge
   gauge5 = afr1Gauge
   gauge6 = VBattGauge
   gauge7 = dwellGauge
   gauge8 = ignadvGauge
   


;         =   expression,            off-label,            on-label,            off-bg, off-fg, on-bg, on-fg
	; important status
	indicator = { ind_hasFatalError }, "",   "Config Error",   green, black, red,   black
    indicator = { ind_isWarnNow }, "",   "Warning",   green, black, red,   black
    indicator = { ind_check_engine }, "Ok",      "Check Engine",       green,  black,  red, black
    indicator = { isIgnitionEnabledIndicator}, "no ignition",   "ignition",   yellow, black, white,   black
    indicator = { ind_injection_enabled}, "Injection Off",   "Injection Ok",   red, black, green,   black
    indicator = { ind_isTriggerError}, "Trigger Ok",      "Trigger Error",       green,  black,  red, black
    indicator = { lastErrorCode    }, "No Error Code", {bitStringValue(troubleList, lastErrorCode)},   green, black, red, black {ind_isWarnNow == 1}
    indicator = { recentErrorCode1 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode1)},   green, black, red, black 
	indicator = { recentErrorCode2 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode2)},   green, black, red, black 
    indicator = { recentErrorCode3 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode3)},   green, black, red, black 
    indicator = { recentErrorCode4 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode4)},   green, black, red, black 
    indicator = { recentErrorCode5 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode5)},   green, black, red, black 
    indicator = { recentErrorCode6 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode6)},   green, black, red, black 
    indicator = { recentErrorCode7 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode7)},   green, black, red, black 
    ;indicator = { cj125State }, "", {bitStringValue(wideBandStateList, cj125State)},   green, black, red, black 
    ;indicator = { cj125Diag }, "", {bitStringValue(wideBandErrorList, cj125Diag)},   green, black, red, black 

	; minor info	
    indicator = { ind_fan}, "Fan Off",   "Fan On",   white, black, green,   black
    indicator = { isCylinderCleanupActivated}, "Cyl Cleanup Off",   "Cyl Cleanup On",   white, black, green,   black    
    indicator = { needBurn }, "Config Ok",  "Unsaved Changes",   white, black, yellow,   black
    indicator = { hasSdCard}, "No SD",   "with SD",   white, black, green,   black
    indicator = { ind_fuel_pump}, "Fuel Pump Off",   "Fuel Pump On",   white, black, green,   black
    indicator = { clutchUpState }, "Clutch Off",   "Clutch On",   white, black, red,   black
    indicator = { clutchDownState }, "Clutch",   "Clutch Down",   white, black, yellow,   black
    indicator = { brakePedalIndicator }, "Brake Off", "Brake On",   white, black, red,   black
    indicator = { acSwitchIndicator }, "AC on",   "AC off",   yellow, black, white,   black
    
    ; error codes
    indicator = { ind_tps_error}, "Tps Ok",   "Tps Error",   white, black, red,   black
    indicator = { ind_clt_error}, "Clt Ok",   "Clt Error",   white, black, red,   black
    indicator = { ind_iat_error}, "Iat Ok",   "Iat Error",   white, black, red,   black
;    indicator = { ind_map_error}, "Map Ok",   "Map Error",   white, black, red,   black
	indicator = { ind_pedal_error}, "map",   "map error",   white, black, red,   black

    indicator = { knockEverIndicator }, "",   "Knock Recently",   white, black, red,   black
    indicator = { knockNowIndicator }, "No Knock",   "Knock NOW",   white, black, red,   black
   
	

[Datalog]
   ;       Channel          Label          Type    Format
   entry = time,            "Time",        float,  "%.3f"
   entry = RPMValue,        "RPM",         int,    "%d"
   entry = firmwareVersion, "firmware",     int,    "%d"
   entry = coolant,         "CLT",         float,  "%.2f"
   entry = intake,          "IAT",         float,  "%.2f"
   entry = oilPressure,		"Oil Press",   float,  "%.1f"
   entry = TPSValue,        "TPS",         float,  "%.2f"
   entry = TPS2Value,       "TPS2",        float, "%.2f"
   entry = MAFValue,        "MAF",         float,  "%.2f"
   entry = MAPValue,        "MAP",         float,  "%.1f"
   entry = AFRValue,        "AFR",         float,  "%.2f"
   entry = VBatt,           "VBatt",       float,  "%.2f"
   entry = engineLoad,	    "Engine Load", 	   float,  "%.1f"
   entry = fuelingLoad,     "fuel: load",     float, "%.1f"
   entry = ignitionLoad,    "ign: load", float, "%.1f"
   entry = ignitionAdvance,	"timing",	   float,  "%.2f"
   entry = knockLevel,	    "knock: current level", 	   float,  "%.2f"
   entry = knockCount,		"knock: counter",	   int,    "%d"
   entry = vehicleSpeedKph,	"Vehicle Speed",	   float,  "%.2f"
   entry = speedToRpmRatio, "s2rpm",	   float,  "%.3f"
   entry = rpmAcceleration, "dRPM",        float,  "%.3f"
   entry = massAirFlowValue,"MAF air flow",    float,  "%.3f"
   entry = chargeAirMass,   "air mass",    float,  "%.3f"
   entry = throttlePedalPosition,   "Throttle pedal position",       float,  "%.3f"
   entry = totalTriggerErrorCounter, "trg err",int,    "%d"
   entry = idleAirValvePosition, "Idle Air Valve", float,  "%.3f"


   entry = injectorLagMs,   "fuel: injector lag", float,  "%.3f"
   entry = fuelRunning,     "fuel: running", float,  "%.3f"
   entry = actualLastInjection,     "fuel: Last injection", float,  "%.3f"
   entry = baseFuel,	    "fuel: base",  float,  "%.2f"
   entry = fuelPidCorrection,"fuel: Short-term fuel trim",  float,  "%.2f"
   entry = veValue,         "fuel: VE",    float,  "%.3f"
   entry = injectorDutyCycle,"fuel: injector duty cycle",float,"%.3f"
   entry = coilDutyCycle,	"dwell: coil duty cycle",	float,"%.3f"
   entry = currentTargetAfr,"fuel: target AFR",	float,"%.3f"

   	entry = injectorLagMs,   "fuel: injector lag", float,  "%.3f"
   	entry = fuelRunning,     "fuel: running", float,  "%.3f"
   	entry = actualLastInjection,     "fuel: Last injection", float,  "%.3f"
   	entry = baseFuel,	    "fuel: base",  float,  "%.2f"
   	entry = fuelPidCorrection,"EGO cor1",  float,  "%.2f"
   	entry = veValue,         "fuel: VE",    float,  "%.3f"
   	entry = injectorDutyCycle,"fuel: injector duty cycle",float,"%.3f"
   	entry = coilDutyCycle,	"dwell: coil duty cycle",	float,"%.3f"
   	entry = currentTargetAfr,"fuel: target AFR",	float,"%.3f"

   entry = engineLoadAccelExtra, "fuel: engine load acceleration extra fuel",float,  "%.3f"
   entry = engineLoadDelta, "fuel: load change",float,  "%.3f"

   entry = deltaTps,		"fuel: TPS change",float,  "%.3f"
   entry = tpsAccelFuel,    "fuel: TPS acceleration extra fuel ms",    float,  "%.3f"

   entry = wallFuelCorrection,"fuel: wall corr ms",	float,   "%.3f"
   entry = wallFuelAmount, "fuel: wall amount",	float,   "%.3f"
   
   entry = baroCorrection,  "fuel: Barometric pressure correction",float,"%.3f"
   entry = iatCorrection,   "fuel: IAT correction",	float,   "%.3f"
   entry = cltCorrection,	"fuel: CLT correction", float,"%.3f"

   entry = sparkDwellValue,	"dwell: coil charge time", float,"%.3f"
   entry = vvtPosition, "VVT position", float,"%.2f"
   entry = injectionOffset, "injOffset"  , float, "%.2F"

    entry = knock1, "Knock 1", int, "%d"
   entry = knock2, "Knock 2", int, "%d"
   entry = knock3, "Knock 3", int, "%d"
   entry = knock4, "Knock 4", int, "%d"
   entry = knock5, "Knock 5", int, "%d"
   entry = knock6, "Knock 6", int, "%d"
   entry = knock7, "Knock 7", int, "%d"
   entry = knock8, "Knock 8", int, "%d"

; is there a way to log parameter?   entry = debugMode,   "debugMode",int,"%d"
   entry = debugFloatField1,   {bitStringValue( debugFieldF1List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField2,   {bitStringValue( debugFieldF2List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField3,   {bitStringValue( debugFieldF3List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField4,   {bitStringValue( debugFieldF4List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField5,   {bitStringValue( debugFieldF5List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField6,   {bitStringValue( debugFieldF6List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugFloatField7,   {bitStringValue( debugFieldF7List,  debugMode )},float,"%.4f", { !enableLogDebugChannels }
   entry = debugIntField1,     {bitStringValue( debugFieldI1List,  debugMode )},int,"%d", { !enableLogDebugChannels }
   entry = debugIntField2,     {bitStringValue( debugFieldI2List,  debugMode )},int,"%d", { !enableLogDebugChannels }
   entry = debugIntField3,     {bitStringValue( debugFieldI3List,  debugMode )},int,"%d", { !enableLogDebugChannels }
   entry = debugIntField4,     {bitStringValue( debugFieldI4List,  debugMode )},int,"%d", { !enableLogDebugChannels }
   entry = debugIntField5,     {bitStringValue( debugFieldI5List,  debugMode )},int,"%d", { !enableLogDebugChannels }


; Alternator_PID: D setting
   	entry = debugFloatField5,   "debug f5: dParam",float,"%.4f", { !enableLogDebugChannels }

   entry = engineMode,   "Engine Mode",int,"%d"
   entry = warningCounter,   "warning: counter",int,"%d"
   entry = lastErrorCode,   "warning: last",int,"%d"
   entry = recentErrorCode0,   "error 0",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode1,   "error 1",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode2,   "error 2",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode3,   "error 3",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode4,   "error 4",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode5,   "error 5",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode6,   "error 6",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode7,   "error 7",int,"%d", { !enableLogErrorList }
   entry = internalMcuTemperature,   "CPU Temperature",float,"%.2f"
   
   entry = tCharge, "tCharge",float,"%.3f"
   
   entry = clutchUpState,   "clutch: up",int,"%d"
   entry = clutchDownState,   "clutch: down",int,"%d"
   entry = brakePedalIndicator,   "brake: down",int,"%d"
   entry = acSwitchIndicator,   "AC switch",int,"%d"
   entry = ind_fan, "radiator fan",int,"%d"

; Electronic throttle body
   entry = etb1Error,      "ETB Error", float, "%.3f"
   entry = etb1DutyCycle,  "ETB duty cycle", float, "%.3f"
   entry = etbTarget,      "ETB Target", float, "%.3f"
   
   
;     tpsADC          = U16,    "ADC",
;     alignmet        = U16,    "al",
;     atmPres         = F32,    "pres",
;	  crankingFuel    = F32,    "ms",
;     tCharge         = F32,    "T",
;     sparkDwell      = F32,    "MAP",
;     warmUpEnrich    = F32,    "%",

[Menu]

menuDialog = main
	menu = "Configuration"
		subMenu = engineChars,					"Base Engine Settings"
		subMenu = std_separator
		subMenu = triggerConfiguration,			"Trigger Setup"
		subMenu = std_separator
		subMenu = updateFirmware,      			"Firmware Update"
			
		
	menu = "Fuel"
		subMenu = injectionSettings,	  		"Fuel Main"
		subMenu = std_separator
		subMenu = allPins2_1,            		"Injector Outputs"
		subMenu = fuelClosedLoopDialog, 	"Closed loop fuel correction", 0, {enableInjectors == 1}
		subMenu = std_separator
		subMenu = testInjectors,          		"Injector Test"
		subMenu = std_separator
		groupMenu = 					"Injector Settings"
		groupChildMenu = injectorDeadTime,		"Injector Dead Time", 0, {enableInjectors == 1}
		groupChildMenu = injPhaseTableTbl,     	"Injection Phase", 0, {enableInjectors == 1}
	
	;	subMenu = fuelClosedLoopDialog, 	"Closed Loop", 0, {enableInjectors == 1}
		subMenu = std_separator
        groupMenu = 					"AfterStart Enrichment"
		groupChildMenu = afterstartEnrichCurve,		"AfterStart Enrichment", 0, {enableInjectors == 1}
        groupChildMenu = afterstartHoldTimeCurve,	"AfterStart Hold Time", 0, {enableInjectors == 1}
        groupChildMenu = afterstartDecayCurve,		"AfterStart Decay Time", 0, {enableInjectors == 1}
		subMenu = std_separator	
		groupMenu = 					"Warmup Enrichment"
		groupChildMenu = cltFuelCorrCurve,			"Warmup Enrichment", 0, {enableInjectors == 1}
		groupChildMenu = iatFuelCorrCurve,			"Intake Air Temp Enrichment", 0, {enableInjectors == 1}
		
		
		subMenu = std_separator	
		# Accel enrichment
	
		groupMenu = 					"Accel Enrichments"
		groupChildMenu = EngineLoadAccelPanel,      "Engine Load Based", 0, {enableInjectors == 1}
		groupChildMenu = TpsAccelPanel,             "TPS Based", 0, {enableInjectors == 1}
        subMenu = std_separator
        subMenu = tChargeSettings,					"Charge Temp Correction", 0, {enableInjectors == 1}
		subMenu = std_separator
        subMenu = coastingFuelCutControl, 			"Overrun Fuel Cut", 0, {enableInjectors == 1}
        subMenu = std_separator
	    subMenu = WallWettingAccelPanel, 			"Wall Wetting", 0, {enableInjectors == 1}
	    subMenu = std_separator
		subMenu = afrTableTbl,						"Target AFR Table", 0, {enableInjectors == 1}
		subMenu = std_separator
		subMenu = veTableTbl,						"Main Fuel Table ", 0, {enableInjectors == 1}
		
	

	menu = "Ignition"
		subMenu = ignitionSettings,					"Ignition Main"
        subMenu = std_separator
		subMenu = allPins2_2,              			"Ignition Outputs"
		subMenu = std_separator
		subMenu = testSpark,               			"Test Ignition Outputs"
		subMenu = std_separator
	    subMenu = multisparkSettings,				"Multispark", 0, {enableIgnition == 1}
		subMenu = std_separator
		groupMenu = 	"Corrections"
		groupChildMenu = ignitionIatCorrTableTbl,	"IAT Correction", 0, {enableIgnition == 1}
		subMenu = std_separator
		subMenu = dwellSettings,					"Coil Dwell Time", 0, {enableIgnition == 1}
		subMenu = ignitionTableTbl,					"Main Ignition Table ", 0, {enableIgnition == 1}
	


	menu = "&Cranking/Idle"
        subMenu = crankingIgnition, 				"Cranking Ignition Settings"
		subMenu = std_separator	
	    subMenu = crankingFuel,       				"Cranking Fuel Settings"
		subMenu = std_separator
		subMenu = crankingAirSettings,               	"Cranking Air Settings"
		subMenu = std_separator
		# Corrections
	    groupMenu = 		"Cranking Enrichment"
	    groupChildMenu = crankingDurationCurve,	   	"First Crank Enrichment"
		groupChildMenu = crankingCltCurve,			"Cranking Enrichment Table"
		subMenu = crankingAdvanceCurve,				"Cranking Ignition Table", 0, {enableCrankingTimingTable == 1}
		# Idle
		subMenu = std_separator	
		subMenu = idlehw,							"Idle hardware"
		subMenu = std_separator						
		subMenu = etbIdleSettingsDialog,           	"Idle Settings", {useETBforIdleControl == 1}
		subMenu = std_separator
		subMenu = idleSettingsDialog,				"Idle Settings", {useSolenoidIdle == 1}
		subMenu = std_separator	
		subMenu = cltIdleRPMCurve,					"Idle Target RPM"
		subMenu = cltIdleCurve,						"Idle Valve Warmup Correction"
		subMenu = idleVeCurve,               		"Idle VE Table", 0, {useSeparateVeForIdle == 1}
		subMenu = idleAdvanceCurve,					"Idle Ignition Table", 0, {useSeparateAdvanceForIdle == 1}
		subMenu = idleTimingPidCorrDialog,			"Closed-loop Idle Timing", {useIdleTimingPidControl == 1}		
		subMenu = iacCoastingCurve,					"Coasting IAC Position for Auto-Idle", 0, {useIacTableForCoasting == 1}
     	
	  
		

		
	
	menu = "&Inputs"
		subMenu = DigitalInputs,		    		"Digital Inputs"
		subMenu = std_separator
		

		# TPS/Pedal
		subMenu = tpsSensor,						"TPS"
		subMenu = pedalSensor,				"Accelerator pedal"
		subMenu = std_separator
		subMenu = cltSensor,						"Coolant Temp Sensor"
		subMenu = iatSensor,						"Intake Air Temp Sensor"
		
		subMenu = std_separator

		
		subMenu = mapSensor,						"MAP Sensor"
		subMenu = baroSettings,						"Baro Sensor"
        subMenu = oilPressureSensor,				"Oil pressure"
	    subMenu = std_separator
		
	;	subMenu = mafSettings,						"MAF Sensor"
	;	subMenu = mafDecodingCurve,					"MAF Linearization", 0, {mafAdcChannel != 16}
	;	subMenu = std_separator
		subMenu = auxTempSensor1Sensor,  			"GP Temp Sensor 1"
		subMenu = auxTempSensor2Sensor,				"GP Temp Sensor 2"
		# O2 sensor(s)
		subMenu = std_separator
		subMenu = egoSettings,						"EGO Sensor"
		subMenu = knockSettings,					"Knock Sensor"
	
		subMenu = narrowToWideOxygenCurve,			"Narrow to Wideband approximation"
	  
		
	menu = "&Outputs" 
		subMenu = boostDialog,          			"Boost Control"
		subMenu = boostPidDialog,        			"Closed Loop Boost",    { boostType == 1 }
		subMenu = std_separator
	   	subMenu = gppwm1, "General Purpose PWM 1"
		subMenu = gppwm2, "General Purpose PWM 2"
		subMenu = gppwm3, "General Purpose PWM 3"
		subMenu = gppwm4, "General Purpose PWM 4"
		subMenu = std_separator
		;subMenu = vvtDialog,						"VVT Settings"
	    ;subMenu = std_separator
        subMenu = fuelPump,						"Fuel Pump"
		subMenu = mainRelay,					"Main Relay"
		subMenu = fanSetting,					"Fan"
		subMenu = tachSettings,					"Tachometer"
        subMenu = alternator,              		"Alternator Control"
	# Digital outputs
	subMenu = std_separator
		


    menu = "&E-Throttle"
        subMenu = etbDialog,					"Electronic Throttle Setup" 
		subMenu = std_separator
		subMenu = pedalToTpsTbl,				"Throttle Target Map"
		subMenu = std_separator
		subMenu = tpsSensor,						"TPS"
		subMenu = pedalSensor,						"Accelerator Pedal"
	
	
	menu = "&MotorSport/Advanced" 
		subMenu = smLaunchControl,					"Launch Control"
	 	subMenu = std_separator
		;subMenu = antiLag,        					"Antilag Setup"
		;subMenu = std_separator	
		


	menu = "Tools"
        subMenu = batteryDialog, 				"Battery Calibration"
		subMenu = canBus,                   	"CAN-Bus Settings"
		subMenu = analogInputSettings, 			"Analog Input Settings"
		subMenu = frpmTableBins, 				"Edit Fuel Rpm Axis"
		subMenu = floadTableBins, 				"Edit Fuel Load Axis"
    	subMenu = IrpmTableBins, 				"Edit Ign RPM Axis"
        subMenu = IloadTableBins, 				"Edit Ign Load Axis"
  	

	menu = "&Internal Settings"
        subMenu = std_separator 
		subMenu = allPins1,  "Full Pinout 1"
		subMenu = allPins2 , "Full Pinout 2"
		subMenu = debug, "Debug Mode"
		subMenu = connection, "Connection"
		subMenu = ecuStimulator, "Trigger Simulator"

       
     menu = "Help"
        ;subMenu = helpGeneral,     "Wiring Information"
		subMenu = helpUpdate,     "Firmware Update"
		subMenu = helpDbw,     "E-Throttle Setup"
		subMenu = helpPid,   "PID Tuning"
		subMenu = helpBoost, , "Boost Control Setup"	
		subMenu = helpLaunch, , "Launch Control Setup"
		subMenu = helpAls, , "AntiLag Setup"

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition 
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

;
; see TS_IO_TEST_COMMAND in firmware code
;

cmd_erase_fault_codes 	= "w\x00\x11\x00\x01"
cmd_test_spk1  			= "w\x00\x12\x00\x01"
cmd_test_spk2  			= "w\x00\x12\x00\x02"
cmd_test_spk3  			= "w\x00\x12\x00\x03"
cmd_test_spk4  			= "w\x00\x12\x00\x04"
cmd_test_spk5  			= "w\x00\x12\x00\x05"
cmd_test_spk6  			= "w\x00\x12\x00\x06"
cmd_test_spk7  			= "w\x00\x12\x00\x07"
cmd_test_spk8  			= "w\x00\x12\x00\x08"
cmd_test_spk9  			= "w\x00\x12\x00\x09"
cmd_test_spk10 			= "w\x00\x12\x00\x0a"
cmd_test_spk11 			= "w\x00\x12\x00\x0b"
cmd_test_spk12 			= "w\x00\x12\x00\x0c"
cmd_test_spk13 			= "w\x00\x12\x00\x0d"
cmd_test_spk14 			= "w\x00\x12\x00\x0e"
cmd_test_spk15 			= "w\x00\x12\x00\x0f"
cmd_test_spk16 			= "w\x00\x12\x00\x10"
		
		
cmd_test_inj1  			= "w\x00\x13\x00\x01"
cmd_test_inj2  			= "w\x00\x13\x00\x02"
cmd_test_inj3  			= "w\x00\x13\x00\x03"
cmd_test_inj4  			= "w\x00\x13\x00\x04"
cmd_test_inj5  			= "w\x00\x13\x00\x05"
cmd_test_inj6  			= "w\x00\x13\x00\x06"
cmd_test_inj7  			= "w\x00\x13\x00\x07"
cmd_test_inj8  			= "w\x00\x13\x00\x08"
cmd_test_inj9  			= "w\x00\x13\x00\x09"
cmd_test_inj10 			= "w\x00\x13\x00\x0a"
cmd_test_inj11 			= "w\x00\x13\x00\x0b"
cmd_test_inj12 			= "w\x00\x13\x00\x0c"
cmd_test_inj13 			= "w\x00\x13\x00\x0d"
cmd_test_inj14 			= "w\x00\x13\x00\x0e"
cmd_test_inj15 			= "w\x00\x13\x00\x0f"
cmd_test_inj16 			= "w\x00\x13\x00\x10"

		
cmd_test_fuel_pump   		= "w\x00\x14\x00\x01"
cmd_calibrate_tps_1_closed  = "w\x00\x14\x00\x02"
cmd_calibrate_tps_1_wot	    = "w\x00\x14\x00\x03"
cmd_calibrate_tps_2_closed  = "w\x00\x14\x00\x04"
cmd_calibrate_tps_2_wot     = "w\x00\x14\x00\x05"
cmd_calibrate_pedal_up      = "w\x00\x14\x00\x06"
cmd_calibrate_pedal_down    = "w\x00\x14\x00\x07"
cmd_tle8888_init     		= "w\x00\x14\x00\x08"
cmd_test_ac_relay     		= "w\x00\x14\x00\x09"
cmd_write_config     		= "w\x00\x14\x00\x0A"
cmd_test_starter_relay     	 = "w\x00\x14\x00\x0B"
cmd_etb_autotune             = "w\x00\x14\x00\x0C"
cmd_enable_self_stim         = "w\x00\x14\x00\x0D"
cmb_etb_auto_calibrate       = "w\x00\x14\x00\x0E"
cmd_disable_self_stim        = "w\x00\x14\x00\x0F"
cmd_etb_autotune_stop        = "w\x00\x14\x00\x10"

cmd_test_radiator_fan        = "w\x00\x15\x00\x01"
cmd_test_check_engine_light  = "w\x00\x16\x00\x01"
cmd_test_idle_valve          = "w\x00\x17\x00\x01"
cmd_cj125_calibrate          = "w\x00\x18\x00\x00"
cmd_cj125_reset          	 = "w\x00\x19\x00\x00"
cmd_test_main_relay            = "w\x00\x20\x00\x00"
cmd_stop_engine              = "w\x00\x79\x00\x00"

; reboot ECU
cmd_reset_controller        = "w\x00\xbb\x00\x00"
; jump to DFU mode
cmd_dfu         			= "w\x00\xba\x00\x00"


[UserDefined]
   ; Key setting dialogs are defined here. 
   ; In most cases TunerStudio will choose the appropriate UI widget based on
   ; the Constant type. However, there are additional use specific widgets such
   ; Slider - Can be assigned and scalar Constant to render a slider UI widget
   ; gauge - Place a gauge of choosing on a dialog.
   ; liveGraph - Place a live graph widget with multiple traces.
   ; commandButton - A button that when clicked will send a generic command as defined in [ControllerCommands]

   ; Supported Layouts Consist of Border, xAxis, Card, yAxis (Default)

   ;----------------------------------------------------------------------------
   ; Create custom dialogs here.
   ; 1. Define a new dialog by giving it a name and display text.
   ; 2. Define items on the dialog, such as fields or gauges.  There are many
   ;    options for display type and configuration, so refer to the 
   ;    documentation.
   ;----------------------------------------------------------------------------	
;[UserDefined]
dialog = limits, "Limits"
		field = "RPM Hard Limit",         	    		rpmLimit
		field = "Cranking RPM limit",                	cranking_rpm


	dialog = baseEngineConfig, "Engine Configuration"
;		field = "Engine Preset",						engineType
		field = "Number of Cylinders",					cylindersCount
		field = "Engine Displacement",         			displacement
		field = "Firing Order",							firingOrder
		field = "Speed Density are normally used"
		field = "Fuel Equation Mode",					fuelAlgorithm
		field = ""		


	dialog = internalSettings, "Internal Settings"
        field = "Key Combinations For Internal Settings"
		field = "Full Pinout 1:			fp1" 
		field = "Full Pinout 2:			fp2"
		field = "Debug:					dbg"
		field = "Connection:			con"
		field = "Trigger Simulator:		sim"

;			Engine->Base Engine Settings
	dialog = engineChars, "Base Engine Settings"
		panel = baseEngineConfig
		panel = limits
		panel = internalSettings

	dialog = triggerConfig,	""
		field = "Trigger type",							trigger_type
		field = "Trigger Angle Offset",         		globalTriggerAngleOffset
		field = ""
		;field = "Trigger Filter",						triggerFilter
		field = "#Custom Trigger Settings"
		field = ""
		field = "Trigger 1 Speed",						ambiguousOperationMode
		field = ""              
		field = "Trigger 1 Sensor Type",				useOnlyRisingEdgeForTrigger
		field = ""
		field = "total Tooth Count",					trigger_numTeeth, {trigger_type == 0}
		field = "skipped Tooth Count",					trigger_missingTeeth, {trigger_type == 0}  
		field = ""
 		field = "Enable noise filtering",				enableTriggerFilter
		field = "Enable Custom Sync Ratio",				syncMode
		field = "Min (3x)",								syncRatioFrom
		field = "Max (3x)",								syncRatioTo
		

dialog = triggerInputs,					"Trigger Inputs"
		field = "Trigger 1 are the signal processed first by the ECU"
		field = "Normally Crank are Trigger 1 unless some rare cases"
		field = ""
		field = "Trigger 1", 							pinTrigger1
		field = "Trigger Polarity",						trigger1Edge
		field = ""
		field = "Mode",						tle8888mode
		field = "Detection Voltage",			tle8888VrDetectionVoltage, {tle8888mode != 0}
		field = "Filter Time",						tle8888VrFilter, {tle8888mode != 0}
		field = "Peak Detection Time",						tle8888VrPeakTime, {tle8888mode != 0}
		
		field = ""
		field = "Trigger 2", 							pinTrigger2,            { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = "Trigger Polarity",						trigger2Edge, { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = ""
		field = "VVT Input",		  					pinCam1
		field = "Invert VVT Signal",				invertCamVVTSignal
		field = ""
		field = "Active Edge",						vvtCamSensorUseRise, {trigger_type != 80}
	    field = "Trigger Wheel", 					vvtMode, { isVvtControlEnabled && vvt_vvtType == 1 }

	dialog = triggerConfiguration, "Trigger Setup",	border
        panel =  triggerConfig, West
		panel = triggerInputs, East
	
			#Fuel Settings

	dialog = injectionSettings, ""
		field = "Enabled",						enableInjectors
		field = "Injector Flow",				injector_size
		field = "Mode",							injectionMode
		field = "Offset Angle",					extraInjectionOffset


				
	dialog = testInjectors, "Injector Test"
	    field = ""
		field = "For Checking Outputs"
		field = ""
		field = "These Buttons Will Generate Some Test Pulses"
		field = ""
		commandButton = "Injector 1", cmd_test_inj1
		commandButton = "Injector 2", cmd_test_inj2
		commandButton = "Injector 3", cmd_test_inj3
		commandButton = "Injector 4", cmd_test_inj4
		commandButton = "Injector 5", cmd_test_inj5
		commandButton = "Injector 6", cmd_test_inj6
		commandButton = "Injector 7", cmd_test_inj7
		commandButton = "Injector 8", cmd_test_inj8
    

	dialog = injectorDeadTime,	"", yAxis
		panel = injectorsDeadTime,		East



	dialog = tChargeRpmTpsSettings, "RPM+TPS Mode Settings"
		displayOnlyField = ""
	    field = "Estimation of Charge Temperature are estimated by interpolation between these points"
		displayOnlyField = ""
		displayOnlyField = "A value of 100% means the Charge Temperature parameter will read the same as the ECT parameter"
		displayOnlyField = "A value of 0% means the Charge Temperature parameter will read the same as the IAT parameter"
		displayOnlyField = ""
		displayOnlyField = "When using the Charge Temp Correction, start with IAT Fuel Correction and Warmup Enrichment set to 0" 
		displayOnlyField = ""
		
		field = "Min RPM - Min TPS", tChargeMinRpmMinTps
		field = "Min RPM - Max TPS", tChargeMinRpmMaxTps
		field = ""
		field = "Max RPM - Min TPS", tChargeMaxRpmMinTps
		field = "Max RPM - Max TPS", tChargeMaxRpmMaxTps

	dialog = tChargeGeneralSettings, ""
		field = "Charge Temp Estimate Mode", tChargeMode
		field = "Change Remp Increment Limit, deg/sec", tChargeAirIncrLimit
		field = "Change Temp Decrement Limit, deg/sec", tChargeAirDecrLimit
	    field = ""

	dialog = tChargeAirInterpSettings, "Air Interpolation Mode Settings"
		field = "Min tCharge Coeff.", tChargeAirCoefMin
		field = "Max tCharge Coeff.", tChargeAirCoefMax
		field = "Max Air Flow, kg/h", tChargeAirFlowMax
		
	dialog = tChargeSettings, "Charge Temperature Estimate Settings "
		panel = tChargeGeneralSettings
		panel = tChargeRpmTpsSettings, { tChargeMode == 0}
		panel = tChargeAirInterpSettings, { tChargeMode == 1}

		
		dialog = coastingFuelCutControl, "Overrun Fuel Cut Settings"
		field = "Overrun Fuel Cut",						enableDfco
		field = "RPM High Limit",						rpmMaxDfco, {enableDfco == 1}
		field = "RPM Low Limit",						rpmMinDfco, 	{enableDfco == 1}
		field = "TP/AP Threshold",						tpsTresholdDfco, 	{enableDfco == 1}
		field = "CLT Threshold",						cltTresholdDfco, 	{enableDfco == 1}
		field = "MAP Threshold",      					mapTresholdDfco, 	{enableDfco == 1}
	
	dialog = EngineLoadAccelPanelLeft, "Accel Enrichment"
		field = ""
		field = "Accel Hold controls how long the full acceleration enrichment"
		field = "will last before it begins its decay to zero."
		field = "The number represents the number of injection events which must"
		field = "occur before the decay begins."
		field = ""
		field = "Enrichment Hold Time",					engineLoadAccelLength
		field = "Enrichment Threshold (Kpa)", 			loadBasedAeMaxEnrich
		field = "Enrichment",	 						loadBasedAeMult
		field = ""
		field = "This function controls the rate at which the Acceleration Enrichment fuel"
		field = "decays away to zero. The number represents a percentage of the original"
		field = "Acceleration Enrichment."
		field = ""
		field = "Decay Threshold", 				loadBasedAeMaxEnleanment
		field = "Decay Enleanment",	 			engineLoadDecelEnleanmentMultiplier

		dialog = accelTaperPanel, "", card 
 		panel = mapAccelTaper
		
	dialog = EngineLoadAccelPanel, "", border
        panel = EngineLoadAccelPanelLeft, West
        panel = accelTaperPanel, Center

	
		
	dialog = WallWettingAccelPanel, "Wall Wetting"
		field = "evaporation time constant",          wwaeTau
		field = "added to wall coef",                   wwaeBeta

	dialog = TpsAccelPanelLeft, "TPS"
		field = "Enable",						enableTpsTpsAe
   		field = "Length",						tpsAccelLength
		field = "Accel Threshold", 				maxDeltaTpsEnlean
		field = "Decay Threshold", 				maxDeltaTpsEnlean
		field = "Decay Enleanment",	 			tpsTpsEnleanFactor
		field = ""
		field = "#Throttle Pump model:"
		field = "Enable",						enableThrottlePumps
		field = "Fraction Period",				tpsAccelFractionCycles
		field = "Fraction Divisor",				tpsAccelFractionDivisor
		field = "Accel Enrichment Time Treshold",		noAccelAfterHardLimitPeriodSecs
;			Tuning->AccelEnrichment
	dialog = tpsTpsPanel, "", card 
 		panel = tpsTpsAccelTbl

	dialog = TpsAccelPanel, "", border	
        panel = TpsAccelPanelLeft, West
        panel = tpsTpsPanel, Center
				
	

				
	
#Ignition
	
        

	dialog = ignitionSettings, ""
		field = "Enabled",						enableIgnition
		field = "Mode",							ignitionMode, {enableIgnition == 1}
		field = "Spark Edge",         	        sparkEdge, {enableIgnition == 1}
		field = "#Wasted spark with individual coils"
		field = "Two wire wasted",				twoWireBatchIgnition, {enableIgnition == 1 && ignitionMode == 2}
		field = "Timing Mode",					timingMode, {enableIgnition == 1}
		field = "#Use fixed timing while validating with a timing gun"
		field = "Fixed Timing",					fixTiming, {enableIgnition == 1 && timingMode == 1}
	    

	dialog = ignitionCylExtra, "Ignition Cylinder Extra Timing"
		field = "Extra cyl #1",                       		timing_offset_cylinder1
		field = "Extra cyl #2",                       		timing_offset_cylinder2, {cylindersCount > 1}
		field = "Extra cyl #3",                       		timing_offset_cylinder3, {cylindersCount > 2}
		field = "Extra cyl #4",                       		timing_offset_cylinder4, {cylindersCount > 3}
		field = "Extra cyl #5",                       		timing_offset_cylinder5, {cylindersCount > 4}
		field = "Extra cyl #6",                       		timing_offset_cylinder6, {cylindersCount > 5}
		field = "Extra cyl #7",                       		timing_offset_cylinder7, {cylindersCount > 6}
		field = "Extra cyl #8",                       		timing_offset_cylinder8, {cylindersCount > 7}
		field = "Extra cyl #9",                       		timing_offset_cylinder9, {cylindersCount > 8}
		field = "Extra cyl #10",                       		timing_offset_cylinder10, {cylindersCount > 9}
		field = "Extra cyl #11",                       		timing_offset_cylinder11, {cylindersCount > 10} 
		field = "Extra cyl #12",                       		timing_offset_cylinder12, {cylindersCount > 11}
	
	dialog = multisparkDwellParams, "Delay & Dwell"
		field = "Spark Duration",							multisparkSparkDuration, {multisparkEnable}
		field = "Dwell",									multisparkDwell, {multisparkEnable}

	dialog = multisparkMain, "Configuration"
		field = "Maximum engine speed",						multisparkMaxRpm, {multisparkEnable}
		field = "Fire sparks for this angle duration"		multisparkMaxSparkingAngle, {multisparkEnable}
		field = "Maximum extra spark count"					multisparkMaxExtraSparkCount, {multisparkEnable}

	dialog = multisparkSettings, "Multispark"
		field = "#WARNING! These settings have the potential to overheat ignition components"
		field = "#and cause other nasty misbehavior.  Use with care, at your own risk!"
		field = "Enable Multiple Sparks",					multisparkEnable
		panel = multisparkMain
		panel = multisparkDwellParams

	dialog = dwellSettings, "", yAxis
		panel = dwellCorrection,	Center
		dialog = testSpark, "Ignition Coil Test"
		field = ""
		field = "For Checking Outputs"
		field = ""
		field = "These Buttons Will Generate Some Test Pulses"
		field = ""
		commandButton = "Spark #1", cmd_test_spk1
		commandButton = "Spark #2", cmd_test_spk2
		commandButton = "Spark #3", cmd_test_spk3
		commandButton = "Spark #4", cmd_test_spk4
		commandButton = "Spark #5", cmd_test_spk5
		commandButton = "Spark #6", cmd_test_spk6
		commandButton = "Spark #7", cmd_test_spk7
		commandButton = "Spark #8", cmd_test_spk8




dialog = crankingIgnition, "Ignition"
		field = "Use separate Advance Table for cranking",		enableCrankingTimingTable
		field = "Advance", 										fixedCrankingTiming, {enableCrankingTimingTable == 0}	
		field = "Use Advance Corrections for cranking",			useAdvanceCorrectionsForCranking
        field = "Use fixed cranking dwell",         			enableFixedDwellCranking
        field = "Fixed Cranking Dwell",           				ignitionDwellForCrankingMs, {enableFixedDwellCranking == 1}
		field = "Cranking Dwell Angle", 						crankingChargeAngle, {enableFixedDwellCranking == 0}

dialog = crankingFuel, "Fuel"
		field = "Cranking Injection Mode",						crankingInjectionMode
		field = "Fuel Map Are Normally Used"
		field = "Fuel Source For Cranking",             		useRunningMathForCranking
		field = "Base Fuel Pulse Width", 						cranking_baseFuel, {useRunningMathForCranking == 0}
		field = "Priming Duration at -40C degrees",				startOfCrankingPrimingPulse
		field = "Priming Falloff temperature", 					primeInjFalloffTemperature
		field = "Enable Cylinder Cleanup",						isCylinderCleanupEnabled
		field = ""
		field = "Enable Fast Start(Without Trigger Sync)",		isFasterEngineSpinUpEnabled

	dialog = crankingAir, "Air"		
		field = "Override Throttle multiplier for cranking",	overrideCrankingIacSetting
#			Engine->idle Settings	

		
	dialog = idleSolenoid, "Solenoid"
		field = "Idle Solenoid Output",					idle_solenoidPin, {useSolenoidIdle == 1}
		field = "Idle Solenoid Output Mode",   	  	    idle_solenoidPinMode, {useSolenoidIdle == 1}
		field = "Second Idle Solenoid Output",			secondSolenoidPin, {useSolenoidIdle == 1}
		field = "Solenoid Frequency",   				idle_solenoidFrequency, {useSolenoidIdle == 1}

	

	dialog = idleStepper, "Stepper"
		field = "Drive stepper with dual H bridges",	useHbridges, {useStepperIdle == 1}
		field = "Stepper reaction time",				idleStepperReactionTime, {useStepperIdle == 1}
		field = "Stepper total steps",					idleStepperTotalSteps, {useStepperIdle == 1}
		field = "Stepper parking extra steps, %",		stepperParkingExtraSteps, {useStepperIdle == 1}
		field = "Force parking every restart",			stepperForceParkingEveryRestart, {useStepperIdle == 1}
		

	dialog = idleHwType, "Idle Valve Outputs",	border
		panel = idleSolenoid,				West, {useSolenoidIdle == 1}
		panel = idleStepper,				East, {useStepperIdle == 1}
		

	dialog = idlehw, ""
		field = "E-Throttle for Idle Control",				useETBforIdleControl, {useSolenoidIdle == 0}
		field = ""
		field = "Solenoid Valve",                           useSolenoidIdle, {useETBforIdleControl == 0}
		field = "Dual Solenoid Mode",						isDoubleSolenoidIdle, {useETBforIdleControl == 0 && useSolenoidIdle == 1}
		field = ""
	;	field = "Stepper Valve",							useStepperIdle, {useETBforIdleControl == 0}
	;	panel = idleHwType, {useSolenoidIdle == 1 || useStepperIdle == 1}
	
	


	dialog = crankingAirSettings,""
		slider = "Cranking Air Valve Position",					crankingIACposition
 		field = "For E-Throttle, This Means % Of Max Idle Opening"
		field = ""
		field = "Afterstart Hold Duration In Cranking Position"
		field = "Afterstart Hold",					afterCrankingIACtaperDuration
 	
	
	dialog = idleSettings,""		
		field = "Control Mode",									idleMode
		slider = "Manual Idle Position",						manIdlePosition, horizontal, {idleMode == 1}
     	field = ""
		field = "Idle Solenoid Output",							idle_solenoidPin, {useETBforIdleControl == 0}
		field = "Idle Solenoid Output Mode",   	  	    		idle_solenoidPinMode, {useETBforIdleControl == 0}
		field = "Idle Solenoid Frequency",   					idle_solenoidFrequency, {useETBforIdleControl == 0}
		field = "Idle Ignition"
		field = "Separate Ignition Table",	               		useSeparateAdvanceForIdle
		field = "Instant Rpm Method",	useInstantRpmForIdle
	    field = "PID Settings"
		field = "Enable Pid-Cic",	useCicPidForIdle
	    field = "idleIncrementalPidCic",						idleIncrementalPidCic
		field = "Disable Above TPS",							idlePidDeactivationTpsThreshold, {idleMode == 0}
		field = "AntiWindup Frequency",							idle_antiwindupFreq
		field = "Derivative FilterLoss",						idle_derivativeFilterLoss
		

	dialog = etbIdleSettings,""
		field = "Maximum Allowed TPS For Idle Control To Operate"
		field = "Idle Control Range",							etbIdleThrottleRange
		field = "Control Mode",									idleMode
		slider = "Idle Position (% TPS Of Maximum Allowed Idle Range)",	manIdlePosition, horizontal, {idleMode == 1}
    	field = ""
		field = "Idle Ignition"
		field = "Separate Ignition Table For Idle",	        	useSeparateAdvanceForIdle, {idleMode == 0}
		field = ""
		field = "PID Settings"	
				field = "Instant Rpm Method",	useInstantRpmForIdle
		field = "Disable Above Pedal Position",					idlePidDeactivationTpsThreshold, {idleMode == 0}


	dialog = idlePidSettings, "Idle PID Control"	
		field = ""
		field = "P-Gain                        	%/100 Rpm",idleRpmPid_pFactor
		field = "I-Gain                   	%/100 Rpm/Sec",idleRpmPid_iFactor
		field = "D-Gain                   	%/100 Rpm/Sec",idleRpmPid_dFactor
		field = "Update Rate",	idleRpmPid_periodMs
		field = "Min",									    idleRpmPid_minValue
		field = "Max",										idleRpmPid_maxValue
		field = "I-Term Min",								idlerpmpid_iTermMin
		field = "I-Term Max",								idlerpmpid_iTermMax
		field = "Offset",										idleRpmPid_offset
		field = ""
		field = "PID Are Disabled Within This Range From Target-Rpm"
		field = "Rpm DeadBand",								idlePidRpmDeadZone
		field = ""
		field = "Rpm Above Target-Rpm To Disable Idle Control"
		field = "Rpm",	 									idlePidRpmUpperLimit
		field = ""
		field = "Additional PID Gain At Low Rpm",			pidExtraForLowRpm
		
		
	dialog = idleSettingsDialog, "", xAxis
	    panel = idleSettings
        panel = idlePidSettings, { idleMode == 0}
		
	
	dialog = etbIdleSettingsDialog, "", xAxis
	    panel = etbIdleSettings
        panel = idlePidSettings, { idleMode == 0}


	dialog = idleTimingPidCorrDialog, "", xAxis
		field = "!This timing correction mode is Alpha Version"
		field = "Use Auto-PID ignition advance control",	useIdleTimingPidControl
		field = "#See Idle Target RPM Curve"
		field = "P-factor",									idleTimingPid_pFactor, {useIdleTimingPidControl == 1}
		field = "I-factor",									idleTimingPid_iFactor, {useIdleTimingPidControl == 1}
		field = "D-factor",									idleTimingPid_dFactor, {useIdleTimingPidControl == 1}
		field = "Offset",									idleTimingPid_offset, {useIdleTimingPidControl == 1}
		field = "Min Delta",								idleTimingPid_minValue, {useIdleTimingPidControl == 1}
		field = "Max Delta",								idleTimingPid_maxValue, {useIdleTimingPidControl == 1}
		field = "period",									idleTimingPid_periodMs, {useIdleTimingPidControl == 1}
		field = "#See RPM dead zone to deactivate IAC pid"
		field = "RPM working zone for timing pid",			idleTimingPidWorkZone, {useIdleTimingPidControl == 1}
		field = "RPM working zone falloff",					idlePidFalloffDeltaRpm, {useIdleTimingPidControl == 1}
		field = "RPM dead zone to deactivate timing pid",	idleTimingPidDeadZone, {useIdleTimingPidControl == 1}

#			Cranking->Cranking Settings
	
	dialog = postCrankingEnrichment, "Post-cranking short-time fuel enrichment (NOT IMPLEMENTED #331)"
		field = "Post-Cranking factor", 				postCrankingFactor
		field = "Duration", 							postCrankingDurationSec
		
#			Sensors->AUX2 Thermistor Sensor Setting		

	dialog = auxTempSensor1Sensor,	"aux1 Thermistor Settings"
		field = "Input",								auxTempSensor1_adcChannel
		field = "Bias Resistor",       					auxTempSensor1_bias_resistor, {auxTempSensor1_adcChannel != 16}
		field = "#Here is three pairs of thermistor temperature and resistance."
		field = "#Typical Temperatures is -40 deg C, 0 deg C and 100 deg C"
		field = ""
		field = "Lowest Temperature",					auxTempSensor1_tempC_1, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ LT",						auxTempSensor1_resistance_1, {auxTempSensor1_adcChannel != 16}
		field = ""
		field = "Middle Temperature",					auxTempSensor1_tempC_2, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ MT",						auxTempSensor1_resistance_2, {auxTempSensor1_adcChannel != 16}
		field = ""
		field = "Highest Temperature",					auxTempSensor1_tempC_3, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ HT",						auxTempSensor1_resistance_3, {auxTempSensor1_adcChannel != 16}

;			Sensors->AUX2 Thermistor Sensor Setting
	dialog = auxTempSensor2Sensor, "aux2 Thermistor Settings"
		field = "Input",								auxTempSensor2_adcChannel
		field = "Bias Resistor",						auxTempSensor2_bias_resistor, {auxTempSensor2_adcChannel != 16}
    	field = "#Here is three pairs of thermistor temperature and resistance."
		field = "#Typical temperatures is -40 deg C, 0 deg C and 100 deg C"
		field = ""
		field = "Lowest temperature",					auxTempSensor2_tempC_1, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ LT",						auxTempSensor2_resistance_1, {auxTempSensor2_adcChannel != 16}
		field = ""
		field = "Middle Temperature",					auxTempSensor2_tempC_2, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ MT",						auxTempSensor2_resistance_2, {auxTempSensor2_adcChannel != 16}
		field = ""
		field = "Highest Temperature",					auxTempSensor2_tempC_3, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ HT",						auxTempSensor2_resistance_3, {auxTempSensor2_adcChannel != 16}
	
	dialog = tpsNum1, "Throttle #1"
		field = "!See Tools>Calibrate TPS"
		field = "Primary sensor",				tps1_1AdcChannel
		field = "Primary min",					tpsMin, {tps1_1AdcChannel != 16}
		field = "Primary max",					tpsMax, {tps1_1AdcChannel != 16}
		field = "Secondary sensor",				tps1_2AdcChannel
		field = "Secondary min",				tps1SecondaryMin, {tps1_2AdcChannel != 16}
		field = "Secondary max",				tps1SecondaryMax, {tps1_2AdcChannel != 16}

	dialog = tpsNum2, "Throttle #2"
		field = "Primary sensor",				tps2_1AdcChannel
		field = "Primary min",					tps2Min, {tps2_1AdcChannel != 16}
		field = "Primary max",					tps2Max, {tps2_1AdcChannel != 16}
		field = "Secondary sensor",				tps2_2AdcChannel
		field = "Secondary min",				tps2SecondaryMin, {tps2_2AdcChannel != 16}
		field = "Secondary max",				tps2SecondaryMax, {tps2_2AdcChannel != 16}

	dialog = tpsLimits, "TPS Limits"
		field = "TPS minimum valid value",	tpsErrorDetectionTooLow, {tps1_1AdcChannel != 16}
		field = "TPS maximum valid value",	tpsErrorDetectionTooHigh, {tps1_1AdcChannel != 16}

	dialog = tpsSensor, "TPS"
		panel = tpsLimits
		panel = tpsNum1
		panel = tpsNum2

	dialog = pedalSensorLeft, "Accelerator pedal"
		field = "Accelerator position sensor",			throttlePedalPositionAdcChannel
		field = "Up voltage",							throttlePedalUpVoltage
		field = "Down (WOT) voltage",					throttlePedalWOTVoltage
		field = "Accelerator position 2nd sensor",		throttlePedalPositionSecondAdcChannel
		field = "Up voltage"							throttlePedalSecondaryUpVoltage
		field = "Down (WOT) voltage",					throttlePedalSecondaryWOTVoltage

	dialog = pedalGauges
		gauge = pedalPositionGauge
		gauge = PedalVoltageGauge

	dialog = pedalSensor, "Accelerator pedal", border
		panel = pedalSensorLeft, West
		panel = pedalGauges, East
	dialog = DigitalInputs,					"Digital Inputs"
		field = "Clutch Down Input",					clutchDownPin
		field = "Input Mode",							clutchDownPinMode
		field = "Clutch Up Input",						clutchUpPin
		field = "Input Mode",                          	clutchUpPinMode
		field = ""
		field = "Brake Pedal Input",					brakePedalPin
		field = ""
		field = "A/C Switch",							acSwitchAdc
		field = ""
		field = "Speed Sensor Input",					vehicleSpeedSensorInputPin
		field = "Speed Sensor Multiplier",				vehicleSpeedCoef
		field = "Enable Can Speed Sensor", 				enableCanVss
	    field = "Vss Car Type",						    canVssNbcType, { enableCanVss  }

#			Sensors->CLT sensor
 	dialog = cltSensor, "Calibrate Coolant Sensor"
      	field = "Coolant Sensor Input", 				clt_adcChannel
	  	field = "Bias Resistor",						clt_bias_resistor, {clt_adcChannel != 16}
      	settingSelector = "Common Coolant Sensors"
      	settingOption = "Bosch NTC",  clt_tempC_1=-40, clt_resistance_1=45340,clt_tempC_2=30, clt_resistance_2=1707,clt_tempC_3=120, clt_resistance_3=113
      	settingOption = "Delphi M12",  clt_tempC_1=-40, clt_resistance_1=100865,clt_tempC_2=30, clt_resistance_2=2240,clt_tempC_3=120, clt_resistance_3=101
	  	settingOption = "DTM 1/8npt",  clt_tempC_1=-40, clt_resistance_1=45340,clt_tempC_2=30, clt_resistance_2=2501,clt_tempC_3=120, clt_resistance_3=113
	  	field = ""
	  	field = "Temperature ",  clt_tempC_1
      	field = "Resistance ", clt_resistance_1
	  	field = ""
	  	field = "Temperature ", clt_tempC_2
      	field = "Resistance ", clt_resistance_2
	  	field = ""
	  	field = "Temperature ", clt_tempC_3
      	field = "Resistance ", clt_resistance_3
      	field = "Linear characteristic",			useLinearCltSensor, {clt_adcChannel != 16}

#			Sensors->IAT sensor
		
	dialog = iatSensor, "Calibrate Intake Air Temp Sensor"
      	field = "IAT Sensor Input", 				iat_adcChannel
	  	field = "Bias Resistor",					iat_bias_resistor, {iat_adcChannel != 16}
      	settingSelector = "Common IAT Sensors"
      	settingOption = "Bosch NTC",  iat_tempC_1=-40, iat_resistance_1=45340,iat_tempC_2=30, iat_resistance_2=1707,iat_tempC_3=120, iat_resistance_3=113
      	settingOption = "Delphi M12",  iat_tempC_1=-40, iat_resistance_1=100865,iat_tempC_2=30, iat_resistance_2=2240,iat_tempC_3=120, iat_resistance_3=101
	  	settingOption = "DTM 1/8npt",  iat_tempC_1=-40, iat_resistance_1=45340,iat_tempC_2=30, iat_resistance_2=2501,iat_tempC_3=120, iat_resistance_3=113
	  	field = ""
	  	field = "Temperature ",  iat_tempC_1
      	field = "Resistance ", iat_resistance_1
	  	field = ""
	  	field = "Temperature ", iat_tempC_2
      	field = "Resistance ", iat_resistance_2
	  	field = ""
	  	field = "Temperature ", iat_tempC_3
      	field = "Resistance ", iat_resistance_3
      	field = "Linear characteristic",			useLinearIatSensor, {iat_adcChannel != 16}

; 				Sensors->Oil pressure sensor
	dialog = oilp_settings, "Oil pressure sensor"
		field = "Oil Pressure ADC input",			oilPressure_hwChannel
		field = "low voltage",						oilPressure_v1, {oilPressure_hwChannel != 16}
		field = "low pressure",						oilPressure_value1, {oilPressure_hwChannel != 16}
		field = "high voltage",						oilPressure_v2, {oilPressure_hwChannel != 16}
		field = "high pressure",					oilPressure_value2, {oilPressure_hwChannel != 16}

    dialog = oilPressureSensor, "", xAxis
		panel = oilp_settings
		gauge = OilPressGauge
	
#			Sensors->MAP sensor
	dialog = baroSettings, "Baro sensor"
			field = "Baro Sensor Input", 				baroSensor_hwChannel
	    settingSelector = "Common Baro Sensors"
        settingOption = "MPX4115",  baroSensor_lowValue=10,   baroSensor_highValue=118 ; https://www.nxp.com/docs/en/data-sheet/MPX4115.pdf
    	settingOption = "MPX4250",  baroSensor_lowValue=10,   baroSensor_highValue=260 ; https://www.nxp.com/docs/en/data-sheet/MPX4250A.pdf Vout = VCC x (P x 0.004 – 0.04)
        settingOption = "GM 1-BAR", baroSensor_lowValue=10,   baroSensor_highValue=105 ; https://speeduino.com/wiki/index.php/File:GM_Table.gif
        settingOption = "GM 2-BAR", baroSensor_lowValue=9,  baroSensor_highValue=208 ; https://speeduino.com/wiki/index.php/File:GM_Table.gif
        settingOption = "GM 3-BAR", baroSensor_lowValue=1,  baroSensor_highValue=315 ; VOUT = VS*(.00318*P-.00353)
        settingOption = "MPXH6300", baroSensor_lowValue=1,  baroSensor_highValue=315 ; https://www.nxp.com/docs/en/data-sheet/MPXH6300A.pdf VOUT = VS*(.00318*P-.00353)
        settingOption = "MPX5700", baroSensor_lowValue=-31,  baroSensor_highValue=746 ; https://www.nxp.com/docs/en/data-sheet/MPX5700.pdf Vout = VS*(0.0012858*P+0.04)
        settingOption = "MPX6400", baroSensor_lowValue=3,  baroSensor_highValue=416 ; https://www.nxp.com/docs/en/data-sheet/MPXH6400A.pdf VOUT = VS x (0.002421xP–0.00842)
        settingOption = "Denso 079800", baroSensor_lowValue=0,  baroSensor_highValue=173 ; http://speeduino.com/forum/viewtopic.php?f=18&t=510&p=7023#p7021
        settingOption = "VW/Audi/Porsche 250kPa", baroSensor_lowValue=26,  baroSensor_highValue=250 ; http://speeduino.com/forum/viewtopic.php?p=17502#p17502
        settingOption = "Bosch 3 Bar TMAP", baroSensor_lowValue=-6,  baroSensor_highValue=323
        field =    "kPa At 0.0 Volts",   			baroSensor_lowValue
        field =    "kPa At 5.0 Volts",   			baroSensor_highValue
		
	

	

	dialog = mafSettings, "MAF Sensor", yAxis
		field = "Input", 							mafAdcChannel
	
	 
	dialog = mapSensor, "Calibrate MAP/Baro"
      	field = "#MAP Sensor"
      	field = "MAP Sensor Input", 				map_sensor_hwChannel
	    settingSelector = "Common Map Sensors"
        settingOption = "MPX4115",  map_sensor_lowValue=10,   map_sensor_highValue=118 ; https://www.nxp.com/docs/en/data-sheet/MPX4115.pdf
    	settingOption = "MPX4250",  map_sensor_lowValue=10,   map_sensor_highValue=260 ; https://www.nxp.com/docs/en/data-sheet/MPX4250A.pdf Vout = VCC x (P x 0.004 – 0.04)
        settingOption = "GM 1-BAR", map_sensor_lowValue=10,   map_sensor_highValue=105 ; https://speeduino.com/wiki/index.php/File:GM_Table.gif
        settingOption = "GM 2-BAR", map_sensor_lowValue=9,  map_sensor_highValue=208 ; https://speeduino.com/wiki/index.php/File:GM_Table.gif
        settingOption = "GM 3-BAR", map_sensor_lowValue=1,  map_sensor_highValue=315 ; VOUT = VS*(.00318*P-.00353)
        settingOption = "VW 4-BAR", baroSensor_lowValue=2,  baroSensor_highValue=418
	    settingOption = "MPXH6300", map_sensor_lowValue=1,  map_sensor_highValue=315 ; https://www.nxp.com/docs/en/data-sheet/MPXH6300A.pdf VOUT = VS*(.00318*P-.00353)
        settingOption = "MPX5700", map_sensor_lowValue=-31,  map_sensor_highValue=746 ; https://www.nxp.com/docs/en/data-sheet/MPX5700.pdf Vout = VS*(0.0012858*P+0.04)
        settingOption = "MPX6400", map_sensor_lowValue=3,  map_sensor_highValue=416 ; https://www.nxp.com/docs/en/data-sheet/MPXH6400A.pdf VOUT = VS x (0.002421xP–0.00842)
        settingOption = "Denso 079800", map_sensor_lowValue=0,  map_sensor_highValue=173 ; http://speeduino.com/forum/viewtopic.php?f=18&t=510&p=7023#p7021
        settingOption = "VW/Audi/Porsche 250kPa", map_sensor_lowValue=26,  map_sensor_highValue=250 ; http://speeduino.com/forum/viewtopic.php?p=17502#p17502
        settingOption = "Bosch 3 Bar TMAP", map_sensor_lowValue=-6,  map_sensor_highValue=323
        field =    "kPa At 0.0 Volts",   			map_sensor_lowValue
        field =    "kPa At 5.0 Volts",   			map_sensor_highValue

#			Sensors->EGO sensor
	dialog = egoSettings_sensor,	"EGO sensor"
        field =    "AFR Min Volts",   			afr_v1, {afr_type != 7}
		field =    "AFR Min Value",   			afr_value1, {afr_type != 7}
		field = ""
		field =    "AFR Max Volts",   			afr_v2, {afr_type != 7}
		field =    "AFR Max Value",   			afr_value2, {afr_type != 7}
; todo: only use these values for custom!		
		field = "Correction",							egoValueShift, {afr_type != 7}

	dialog = egoSettings_IO,	"EGO Sensor I/O"
		field = "Input channel", 						afr_hwChannel, {afr_type != 7}
		
	dialog = cj125, ""
	    field = "Internal Wideband Sensor"
		field = "Enabled",							isCJ125Enabled, {afr_type == 7}
		field = "Sensor Type",						cj125isLsu49, {isCJ125Enabled == 1 && afr_type == 7}
		
		field = "Dynamic Mode Change (Test)",		cj125AutoChangeMode, {isCJ125Enabled == 1 && afr_type == 7}
		field = "Custom PID Gains",					tuneCj125Pid, {isCJ125Enabled == 1 && afr_type == 7}
		field = "P Gain",							cj125Pfactor, {isCJ125Enabled == 1 && afr_type == 7 && tuneCj125Pid == 1}
		field = "I Gain",							cj125Ifactor, {isCJ125Enabled == 1 && afr_type == 7 && tuneCj125Pid == 1}
		commandButton = "Start Calibration", 		cmd_cj125_calibrate, {isCJ125Enabled == 1 && afr_type == 7}
		commandButton = "Reset", 		cmd_cj125_reset, {isCJ125Enabled == 1 && afr_type == 7}


	dialog = egoSettings, "", yAxis
		field = "Type",									afr_type
		panel = egoSettings_IO
		panel = egoSettings_sensor,	{afr_hwChannel != 16 && enableAemXSeries == 0 && !auxSerialRxPin && !auxSerialTxPin}
		panel = cj125
		field = "Enable AEM X-Series CANbus",			enableAemXSeries, { canReadEnabled }
		field = "Enable Innovate LC-2 Serial",			enableInnovateLC2, { auxSerialRxPin && auxSerialTxPin }

	      
	dialog = knockSettings, "Knock Sensor"
		field = "Enable", 								enableSoftwareKnock
		field = "Middle Frequency", 					knockBandCustom
#Outputs		

	dialog = fuelPump, "Fuel Pump"
		field = "Output",							pinFuelPump
		field = "Output Mode",         	        	pinFuelPumpMode
		field = "Prime duration",					startUpFuelPumpDuration
		field = "Test Fuel Pump"
		commandButton = "Test Fuel Pump", 				cmd_test_fuel_pump

	dialog = mainRelay, "Main relay output"
		field = "Output",  							pinMainRelay
		field = "Output Mode",			         	pinMainRelayMode
		commandButton = "Test Main Relay", 			cmd_test_main_relay

   
	


     dialog = fanSetting, "Fan Settings"
		field = "Output",							pinFan
		field = "Output Mode",						pinFanMode
		field = "On temperature",					fanOnTemperature
		field = "Off temperature",					fanOffTemperature
		field = "Use This Button To Test Fan Output"
		commandButton = "Fan Test", 				cmd_test_radiator_fan

	dialog = vvt_left, ""
		field = "Enable",							isVvtControlEnabled
		field = "Output",							vvt_vvtControlPin
		field = "Number of Teeth"
		field = "Minimum Coolant Temp",             vvt_minVvtTemperature
		field = "Maximum Advance/Retard",           vvt_maxVvtDeviation
		field = "Load Axis",                        vvt_vvtLoadAxis
		field = "Mode",								vvt_vvtType
	    field = "Active Edge",						vvtCamSensorUseRise, {trigger_type != 80}
	    field = "Trigger Wheel", 					vvtMode, { isVvtControlEnabled && vvt_vvtType == 1 }
	  	field = "Angle Window to look for edge"
	   	field = "Min Angle",		            	vvtToothMinAngle, { isVvtControlEnabled && vvt_vvtType == 1 }
	    field = "Max Angle",		            	vvtToothMaxAngle, { isVvtControlEnabled && vvt_vvtType == 1 }
		field = "Tooth Offset",		            	vvtOffset, { isVvtControlEnabled && vvt_vvtType == 1 }
	   
		field = "Frequency",						vvt_vvtPwmFrequency, { isVvtControlEnabled }
		field = "Min Duty",							vvt_vvtPid_minValue, { isVvtControlEnabled }
		field = "Max Duty",							vvt_vvtPid_maxValue, { isVvtControlEnabled }
		field = "#PID Settings"
		field = "Control Interval",					vvt_vvtPid_periodMs, { isVvtControlEnabled && vvt_vvtType == 1 }
		field = "P Gain",							vvt_vvtPid_pFactor, { isVvtControlEnabled && vvt_vvtType == 1 }
		field = "I Gain",							vvt_vvtPid_iFactor, { isVvtControlEnabled && vvt_vvtType == 1 }
		field = "D Gain",							vvt_vvtPid_dFactor,{ isVvtControlEnabled && vvt_vvtType == 1 }
		

	dialog = vvtDialog, "", border
        panel = vvt_left, West
        panel = vvtTableTbl, Center	

;Boost Open Loop

	dialog = boost_left, ""
        field = "Enable",                           isBoostControlEnabled
        field = "Control Mode",                     boostType, { isBoostControlEnabled }
		field = "Output",							boostControlPin, { isBoostControlEnabled }
		field = "Output Mode",                      boostControlPinMode, { isBoostControlEnabled }
		field = "Frequency",						boostPwmFrequency, { isBoostControlEnabled } 
		field = ""
		field = "Boost Cut Pressure",				boostCutPressure
		
	dialog = boostDialog, "", border
        panel = boost_left, West
        panel = boostTableTbl, Center

;Boost Closed Loop

	dialog = boostPidleft, ""
   		field = "P Gain", 	                        boostPid_pFactor, { isBoostControlEnabled && boostType == 1 }				
	   	field = "I Gain",                           boostPid_iFactor, { isBoostControlEnabled && boostType == 1 }			
	   	field = "D Gain",                           boostPid_dFactor, { isBoostControlEnabled && boostType == 1 }			
		;boostPid_offset					
		field = "Control Period",                   boostPid_periodMs, { isBoostControlEnabled && boostType == 1 }			
		field = "Min Duty",                         boostPid_minValue, { isBoostControlEnabled && boostType == 1 }			
		field = "Max Duty",                         boostPid_maxValue, { isBoostControlEnabled && boostType == 1 }	

 	dialog = boostTableDialog, "", card
    	panel = boostTable2Tbl

	dialog = boostPidDialog, "", border
        panel = boostPidleft, West
        panel = boostTableDialog, Center		

	
			;			Racing Features->Launch Control
	dialog = smLaunchControl, "Launch Control Settings"
        field = "Enable Launch Control",               	launchControlEnabled
		field = "Activation Mode",                      launch_launchActivationMode,  {launchControlEnabled == 1}
	    field = "Switch Input",                     	launchActivatePin,  {launch_launchActivationMode == 0 && launchControlEnabled == 1}
		field = "Clutch Input", 						clutchDownPin,      {launch_launchActivationMode == 1 && launchControlEnabled == 1}
		field = "Input Mode",							clutchDownPinMode,  {launch_launchActivationMode == 1 && launchControlEnabled == 1}
		field = "Invert Switch",						invertLaunchSwitch,  {launchControlEnabled == 1}
		displayOnlyField  = "RPM Settings"
		field = "Launch RPM",            	    		launch_launchRpm,  {launchControlEnabled == 1}
		field = "Enable Launch Retard",             	enableLaunchRetard, {launchControlEnabled == 1 }
		field = "Ignition Retard RPM Range",            launch_launchAdvanceRpmRange,  {launchControlEnabled == 1 }
		field = "Hard Cut RPM Range",                   launch_hardCutRpmRange,  {launchControlEnabled == 1}
		displayOnlyField  = "Enable Conditions"
		field = "Enable Activation Delay",				useLaunchActivateDelay,  {launchControlEnabled == 1}
		field = "Activation Delay",                     launch_launchActivateDelay, {launchControlEnabled == 1 && useLaunchActivateDelay ==1}
		field = "Disable By Speed",	                    launchDisableBySpeed, {launchControlEnabled == 1}
		field = "Speed Treshold",                       launch_launchSpeedTreshold,  {launchControlEnabled == 1 && launchDisableBySpeed == 1}
	    field = "Disable Below TPS", 	                launch_launchTpsTreshold, {launchControlEnabled == 1}
	    displayOnlyField  = "Launch Settings"
		field = "Enable Launch Fuel", 					enableLaunchFuel,  {launchControlEnabled == 1}
		field = "Extra Fuel",           				launch_launchFuelAdded,  {launchControlEnabled == 1 && enableLaunchFuel == 1}
        field = "Enable Launch Boost",               	enableLaunchBoost, {launchControlEnabled == 1}
        field = "Boost Solenoid Duty",	                launch_launchBoostDuty,  {launchControlEnabled == 1 && enableLaunchBoost == 1}
		field = "Ignition Retard",      				launch_launchTimingRetard,  {launchControlEnabled == 1 }
		field = "Smooth Retard Mode",                   launchSmoothRetard,  {launchControlEnabled == 1}
		displayOnlyField  = "Hard Cut Mode"
		field = "Ignition Cut",    						enableLaunchIgnCut,  {launchControlEnabled == 1}
		field = "Fuel Cut",	    						enableLaunchFuelCut,  {launchControlEnabled == 1}
		
	

					;			Racing Features->Rolling Launch
	dialog = antiLag, "AntiLag Settings"
        field = "Conditions"
		field = "Enable AntiLag",               		antiLagEnabled
	    field = "Activation Mode",          			antiLag_antiLagActivationMode,  {antiLagEnabled == 1}    
		field = "Switch Input",                 		antiLagActivatePin,  {antiLag_antiLagActivationMode == 1 && antiLagEnabled == 1}
		field = "Antilag Timeout",            			antiLag_antilagTimeout, {antiLagEnabled == 1}
		field = "Tps Treshold",    						antiLag_antiLagTpsTreshold,  {antiLagEnabled == 1}
		field = "Rpm Treshold",                         antiLag_antiLagRpmTreshold,  {antiLagEnabled == 1}
		field = "Coolant Treshold", 					antiLag_antiLagCoolantTreshold,  {antiLagEnabled == 1}
		field = ""
		field = "Settings"
		
		field = "Enable Extra Air",  					enableAntiLagAir,  {antiLagEnabled == 1}
		field = "Air Supply Source",                    antiLag_antiLagAirSupply,  {antiLagEnabled == 1 && enableAntiLagAir == 1}
		field = "Extra Air %",							antiLag_antilagExtraAir,  {antiLagEnabled == 1 && enableAntiLagAir == 1}
		field = "Enable Ignition Retard",				enableAntiLagRetard,  {antiLagEnabled == 1}
		field = "Ignition Retard", 						antiLag_antiLagRetard,  {antiLagEnabled == 1 && enableAntiLagRetard == 1}	
		field = "Enable Extra Fuel",					enableAntiLagFuel,  {antiLagEnabled == 1&& enableAntiLagRetard == 1}
		field = "Extra Fuel %",							antiLag_antiLagExtraFuel,  {antiLagEnabled == 1 && enableAntiLagFuel == 1&& enableAntiLagRetard == 1}
		field = "Enable Boost Valve",					enableAntiLagBoost,  {antiLagEnabled == 1}
		field = "Boost Solenoid Duty"					antiLag_antiLagBoost,  {antiLagEnabled == 1 && enableAntiLagBoost == 1}


	dialog = coastingFuelCutControl, "Coasting Fuel Cutoff Settings"
		field = "Enable Coasting Fuel Cutoff",			enableDfco
		field = "Cutoff Activation RPM High Limit",		rpmMaxDfco, {enableDfco == 1}
		field = "Cutoff Deactivation RPM Low Limit",	rpmMinDfco, {enableDfco == 1}
		field = "TPS Deactivation Threshold",			tpsTresholdDfco, {enableDfco == 1}
		field = "CLT Activation Threshold",				cltTresholdDfco, {enableDfco == 1}
		field = "MAP Deactivation Threshold",      		mapTresholdDfco, {enableDfco == 1}


# Electronic Throttle

	dialog = etbAutotune, "PID Autotune"
		commandButton = "Start ETB PID Autotune", cmd_etb_autotune
		commandButton = "Stop ETB PID Autotune", cmd_etb_autotune_stop
		commandButton = "Auto Calibrate TPS", cmb_etb_auto_calibrate

		dialog = etbPidDialog, "PID Settings"
	 	displayOnlyField  = "#Set FeedForward map before tuning PID"
		field = "P Gain",								etb_pFactor, {throttlePedalPositionAdcChannel != 16}
		field = "I Gain",								etb_iFactor, {throttlePedalPositionAdcChannel != 16}
		field = "D Gain",								etb_dFactor, {throttlePedalPositionAdcChannel != 16}
		field = "I-Term Min",							etb_iTermMin, {throttlePedalPositionAdcChannel != 16}
		field = "I-Term Max",							etb_iTermMax, {throttlePedalPositionAdcChannel != 16}
		field = "Control Update Period",				etb_periodMs, {throttlePedalPositionAdcChannel != 16}
		
	dialog = etbDialogText
		field = ""
		displayOnlyField = "Feed-Forward Table"

	dialog = etbDialogLeft
	 	field = ""
		field = "Frequency",							etbFreq, {throttlePedalPositionAdcChannel != 16}
		field = ""
		panel = etbAutotune
		panel = etbPidDialog
		panel = etbDialogText


	dialog = etbDialogRight
		field = "ETB Idle Control",						useETBforIdleControl
		field = "Maximum Idle Opening",					etbIdleThrottleRange, {useETBforIdleControl == 1}
		field = "Cranking/TPS Angle % / Max",			crankingIACposition
		slider = "Idle Position % / Max",				manIdlePosition, horizontal, {useETBforIdleControl == 1}
		field = ""
		field = "Idle Mode",							idleMode
		

	dialog = etbDialogBottom
		field = ""  
        panel = etbTpsBiasCurve
	

	dialog = etbDialog, "Electronic Throttle", border
		panel = etbDialogLeft, West
		panel = etbDialogRight, East
		panel = etbDialogBottom, South

	

	dialog = debug, "Debug"
    	field = "Debug Mode",							debugMode



	dialog = stftPartitioning, "Region Configuration"
		field = "Idle region RPM",						stft_maxIdleRegionRpm
		field = "Overrun region load",					stft_maxOverrunLoad
		field = "Power region load",					stft_minPowerLoad

	dialog = stftPartitionSettingsMain, "Main Region", xAxis
		field = "Time Const",							stft_cellCfgs4_timeConstant
		field = "Max add",								stft_cellCfgs4_maxAdd
		field = "Max remove",							stft_cellCfgs4_maxRemove

	dialog = stftPartitionSettingsIdle, "Idle Region", xAxis
		field = "Time Const",							stft_cellCfgs1_timeConstant
		field = "Max add",								stft_cellCfgs1_maxAdd
		field = "Max remove",							stft_cellCfgs1_maxRemove

	dialog = stftPartitionSettingsPower, "Power Region", xAxis
		field = "Time Const",							stft_cellCfgs3_timeConstant
		field = "Max add",								stft_cellCfgs3_maxAdd
		field = "Max remove",							stft_cellCfgs3_maxRemove

	dialog = stftPartitionSettingsOverrun, "Overrun Region", xAxis
		field = "Time Const",							stft_cellCfgs2_timeConstant
		field = "Max add",								stft_cellCfgs2_maxAdd
		field = "Max remove",							stft_cellCfgs2_maxRemove

	dialog = fuelClosedLoopDialog, "Short-term fuel trim"
		field = "Enabled",								fuelClosedLoopCorrectionEnabled

		field = "Startup delay"							stft_startupDelay, {fuelClosedLoopCorrectionEnabled == 1}
		field = "Minimum CLT for correction",			stft_minClt, {fuelClosedLoopCorrectionEnabled == 1}
		field = "Minimum AFR for correction",			stft_minAfr, {fuelClosedLoopCorrectionEnabled == 1}
		field = "Maximum AFR for correction",			stft_maxAfr, {fuelClosedLoopCorrectionEnabled == 1}
		field = "Adjustment deadband",					stft_deadband, {fuelClosedLoopCorrectionEnabled == 1}
		field = "Ignore error magnitude",				stftIgnoreErrorMagnitude, {fuelClosedLoopCorrectionEnabled == 1}

		panel = stftPartitioning, {fuelClosedLoopCorrectionEnabled == 1}
		panel = stftPartitionSettingsMain, {fuelClosedLoopCorrectionEnabled == 1}
		panel = stftPartitionSettingsIdle, {fuelClosedLoopCorrectionEnabled == 1}
		panel = stftPartitionSettingsPower, {fuelClosedLoopCorrectionEnabled == 1}
		panel = stftPartitionSettingsOverrun, {fuelClosedLoopCorrectionEnabled == 1}

		
	dialog = enterDfu, ""
		field = "Enter DFU Mode"
    	commandButton = "Update Firmware",              cmd_dfu 
    	commandButton = "Reset Controller",             cmd_reset_controller	
  		commandButton = "Erase Fault Codes",         	cmd_erase_fault_codes
		commandButton = "Calibrate Wideband", 			cmd_cj125_calibrate
	
	dialog = updateFirmware, ""
		panel = enterDfu
	
;			Board->ECU stimulator
	dialog = ecuStimulator, "Trigger Simulator"
		field = "Engine Speed",   						triggerSimulatorFrequency
		field = "Trigger Simulation"
		field = ""
		commandButton = "Start", cmd_enable_self_stim
		commandButton = "Stop", cmd_disable_self_stim
		

	
	

		;			Engine->Other inputs	
	dialog = analogInputSettings, "Analog Input Settings"
		field = "!ECU reboot needed to apply these settings"
		field = "Use fixed baro corr from MAP", 		useFixedBaroCorrFromMap
        field = "ADC vRef voltage",						adcVcc
		field = "Analog divider",						analogInputDividerCoefficient
	
	dialog = tachSettings, "Tachometer Output"
		field = "!See also dizzySparkOutputPin"
		field = "Output",								pinTacho
		field = "Output Mode",							pinTachoMode
		field = "Rise at trigger index",				tachPulseTriggerIndex
		field = "Pulse duration is duty cycle",			tachPulseDurationAsDutyCycle
		field = "Pulse duration",						tachPulseDuractionMs
; todo: finish implementation under #907
		field = "Pulse per Rev",                        tachPulsePerRev


;			Board->Connection
	dialog = tsPort, "TunerStudio Port"
		field = "tunerStudioSerialSpeed",				tunerStudioSerialSpeed
		field = "Use UART/TTL serial?",					useSerialPort
		field = "uartConsoleSerialSpeed",				uartConsoleSerialSpeed
	
	
	
	dialog = can_settings
		field = "Can Read Enabled",						canReadEnabled
		field = "Can Write Enabled",					canWriteEnabled
		field = "Can Nbc Type",							canNbcType
		field = "Can Baud Rate",						canBaudRate
		field = "Can Sleep Period",						canSleepPeriodMs
		

	
		
	dialog = canBus, "CAN Bus", 	xAxis
		panel = can_settings
		

	dialog = auxSerial, "AUX Serial"
		field = "RX pin",								auxSerialRxPin 
		field = "TX pin",								auxSerialTxPin 
		field = "Serial Baud Rate",						auxSerialSpeed 
		
	dialog = tle8888, "TLE8888", yAxis
		field = "useTLE8888 cranking reset hack",		useTLE8888_cranking_hack
		commandButton = "Reinit",						cmd_tle8888_init

	dialog = connection, "", 	yAxis
		field = "STM32 vRef voltage",					adcVcc
		panel = tsPort
		panel = tle8888

	
		


	dialog = allPinsSensors, "Inputs"
	field = ""
		field = "Analog Inputs" 
		field = "Use Two Throttles",                    useSecondEtb
		field = "#Throttle 1"
		field = "Throttle pedal Position Channel", 		throttlePedalPositionAdcChannel
		field = "TPS 1 Main Input", 					tps1_1AdcChannel
		field = "TPS 1 Sub Input", 						tps1_2AdcChannel
		field = "TPS 2 Main Input", 					tps2_1AdcChannel,  {useSecondEtb == 1}
		field = "TPS 2 Sub Input", 						tps2_2AdcChannel,  {useSecondEtb == 1}
		 
		field = "#Analog"
		field = "vBatt Input", 							vbattAdcChannel
		field = "MAF Sensor Input", 					mafAdcChannel
		field = "AFR Input", 							afr_hwChannel
		field = "Baro Sensor Input", 					baroSensor_hwChannel
		field = "MAP Sensor Input", 					map_sensor_hwChannel
		field = "Fuel Level Sensor", 					fuelLevelSensor
		
		field = "#Temperature Sensors"
		
		field = "Coolant Sensor Input", 				clt_adcChannel
		field = "Intake Air Temperature Input", 		iat_adcChannel
		field = "Aux Temperature #1",					auxTempSensor1_adcChannel
		field = "Aux Temperature #2",					auxTempSensor2_adcChannel
	
		field = "#Digital Inputs" 
		
		field = "Speed Input",							vehicleSpeedSensorInputPin
		field = "Clutch Down Input",					clutchDownPin
		field = "Input Mode",							clutchDownPinMode
		field = "Clutch Up Input",						clutchUpPin
		field = "Input Mode",                          	clutchUpPinMode
		field = "Brake Pedal",							brakePedalPin
		field = "A/C Switch",							acSwitchAdc
		
	

 dialog = etbpins, "E-Throttle"
        field = "Two-wire mode",						etb_use_two_wires
 	    field = "Throttle 1 Positive",					etbIo1_directionPin1
		field = "Throttle 1 Negative",					etbIo1_directionPin2  ,  {etb_use_two_wires == 1}
		field = "Throttle 1 Control",					etbIo1_controlPin1,  {etb_use_two_wires == 0}
		field = "Throttle 1 Disable",					etbIo1_disablePin,  {etb_use_two_wires == 0}
		field = "Throttle 2 Positive",					etbIo2_directionPin1,  {useSecondEtb == 1}  
		field = "Throttle 2 Negative",					etbIo2_directionPin2,  {useSecondEtb == 1}
		field = "Throttle 2 Control",					etbIo2_controlPin1,  {etb_use_two_wires == 0 && useSecondEtb == 1}     

		

	dialog = allPins1_1
		panel = allPinsSensors
	

	dialog = idlepins, "Idle Solenoid"
		field = "Idle Solenoid Output",					idle_solenoidPin
		field = "Idle Stepper Dir",						idle_pinStepperDirection
		field = "Idle Stepper Dir Mode",				pinStepperDirectionMode
		field = "Idle Stepper Step",					idle_stepperStepPin
		field = "Idle Stepper Enable",					pinStepperEnable

	dialog = miscoutputs, "Misc Outputs"
		field = "Fuel Pump Output",						pinFuelPump
		field = "Fuel Pump Output Mode",         	    pinFuelPumpMode
        field = "Tachometer output Pin",				pinTacho
		field = "Fan Pin",								pinFan
		field = "Fan Pin Mode",							pinFanMode
		field = "Main Relay Pin",  						pinMainRelay
		field = "Main Relay Mode",			         	pinMainRelayMode
		

	dialog = allPins1_2
	panel = etbpins
	  
		panel = miscoutputs
		

	dialog = allPins1_3
	panel = idlepins
		field = "CAN RX pin",							canRxPin
		field = "CAN TX pin",							canTxPin
	field = "Trigger Error", triggerErrorPin
	
	field = "Trigger Error Mode", triggerErrorPinMode
	field = "Trigger Sync", debugTriggerSync
	field = "Trigger Sync Mode", debugTriggerSyncMode
		

	
		dialog = allPins2_1
		field = "Injector Pin Mode",                    pinInjectorMode
		field = "Injection Pin 1",						pinInjector1
		field = "Injection Pin 2",						pinInjector2
		field = "Injection Pin 3",						pinInjector3
		field = "Injection Pin 4",						pinInjector4
		field = "Injection Pin 5 ",						pinInjector5
		field = "Injection Pin 6 ",						pinInjector6
		field = "Injection Pin 7 ",						pinInjector7
		field = "Injection Pin 8 ",						pinInjector8
		field = "Injection Pin 9 ",						pinInjector9
		field = "Injection Pin 10 ",	    			pinInjector10
		field = "Injection Pin 11 ",					pinInjector11
		field = "Injection Pin 12 ",					pinInjector12
		


	dialog = allPins2_2
		field = "Ignition Pin Mode",                    sparkEdge
		field = "Ignition Pin 1",                       pinCoil1
		field = "Ignition Pin 2",                       pinCoil2
		field = "Ignition Pin 3",                       pinCoil3
		field = "Ignition Pin 4",                       pinCoil4
		field = "Ignition Pin 5",                       pinCoil5
		field = "Ignition Pin 6",                       pinCoil6
		field = "Ignition Pin 7",                       pinCoil7
		field = "Ignition Pin 8",                       pinCoil8
		field = "Ignition Pin 9",                       pinCoil9
		field = "Ignition Pin 10",                      pinCoil10
		field = "Ignition Pin 11",                      pinCoil11
		field = "Ignition Pin 12",                      pinCoil12
     

	dialog = allPins1_1_and_2, "", xAxis
		panel = allPins1_1
		panel = allPins1_2

	dialog = allPins1, "All Pins 1/2", xAxis
		panel = allPins1_1_and_2
		panel = allPins1_3

	dialog = allPins2_1_and_2, "", xAxis
		panel = allPins2_1
		panel = allPins2_2
		

	dialog = allPins2, "All Pins 2/2", xAxis
		panel = allPins2_1_and_2


		dialog = ignitionOutputs, "Ignition Outputs"
		field = "Ignition Pin Mode",         	        sparkEdge, {enableIgnition == 1}
		field = "Ignition Pin 1",                       pinCoil1, {enableIgnition == 1}
		field = "Ignition Pin 2",                       pinCoil2, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 1) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 2) || (firingOrder == 7) || (firingOrder == 9) || (firingOrder == 11) || (firingOrder == 12)))}
		field = "Ignition Pin 3",                       pinCoil3, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 2) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 1) || (firingOrder == 3) || (firingOrder == 4) || (firingOrder == 5) || (firingOrder == 9)))}
		field = "Ignition Pin 4",                       pinCoil4, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 3) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 7) || (firingOrder == 12)))}
		field = "Ignition Pin 5",                       pinCoil5, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 4) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 4) || (firingOrder == 12)))}
		field = "Ignition Pin 6",                       pinCoil6, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 5) && (ignitionMode !=2 || twoWireBatchIgnition == 1 )}
		field = "Ignition Pin 7",                       pinCoil7, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 6) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 11)))}
		field = "Ignition Pin 8",                       pinCoil8, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 7) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 9",                       pinCoil9, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 8) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 10",                      pinCoil10, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 9) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 11",                      pinCoil11, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 10) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 12",                      pinCoil12, {enableIgnition == 1 && (ignitionMode != 0 && cylindersCount > 11) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
	

	
    dialog = tpsAdcFields, "TPS Min / Max"
	;	commandButton = "Calibrate ETB TPS", cmd_calibrate_etb_tps, {calibrateMode}    
		field = "",
        field = "TPS Min", tpsMin
		field = "TPS Max", tpsMax

	dialog = tpsAdCGauge, "TPS ADC"
        gauge = tpsADCGauge
			

	dialog = fieldsAndGauge, "", xAxis
		panel = tpsAdcFields
		panel = tpsAdCGauge
			 		


	dialog = driveByWirePedal,""
		field = "Throttle Pedal Up",					throttlePedalUpVoltage
		field = "Throttle Pedal Wide Open",				throttlePedalWOTVoltage

	dialog = frpmTableBins, "RPM Bins for Fuel Table"       
 		array1D   = "", "Fuel RPM  %INDEX% ", frpm_table 

 
 	dialog = floadTableBins, "LOAD Bins for Fuel Table"       
 		array1D   = "", "Fuel LOAD  %INDEX% ", fmap_table 

	dialog = IrpmTableBins, "RPM Bins for Ignition Table"       
 		array1D   = "", "RPM  %INDEX% ", srpm_table 

 
 	dialog = IloadTableBins, "LOAD Bins for Ignition Table"       
 		array1D   = "", "LOAD  %INDEX% ", smap_table 

	dialog = batteryDialog, "Battery Settings",	yAxis
	    field = "#Use a Multimeter To Set Correction"
		field = "Battery Voltage Correction",	vbattDividerCoeff


	dialog = alternator, "Alternator Settings",	yAxis
		field = "Enabled",								enableAlternatorControl
		field = "On/Off Mode",					onOffAlternatorLogic, {enableAlternatorControl == 1}
		field = "Target",								targetVBatt, {enableAlternatorControl == 1}
		field = "Output",									pinAlternator, {enableAlternatorControl == 1}
		field = "Output Mode",								pinAlternatorMode, {enableAlternatorControl == 1}
		field = "PWM frequency",						alternatorPwmFrequency, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "Off Above TPS",						alternatorOffAboveTps, {enableAlternatorControl == 1}
		field = "#PID Settings"
		field = "control period",						alternatorControl_periodMs, {enableAlternatorControl == 1}
		field = "#PID control"
		field = "Offset",								alternatorControl_offset, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "P Gain",								alternatorControl_pFactor, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "I Gain",								alternatorControl_iFactor, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "D Gain",								alternatorControl_dFactor, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "Min ??",									alternatorControl_minValue, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "Max ??",									alternatorControl_maxValue, {enableAlternatorControl == 1 && onOffAlternatorLogic == 0}
		field = "#% duty = Pterm + Iterm + Dterm + offset%"
 ;-------------------------------------------------------------------------------
    ; General help text

      
		
		help = helpGeneral, "Wiring Information"
		text = "<h1>"
        text = "<img src='file:///$getProjectsDirPath()/docs/pinout.png'>"

		help = helpUpdate,     "Firmware Update"
		text = "<br>"	
		text = "<h3>Start by downloading and installing DFU Software and drivers"
		text = "<br>"
		text = "<h3>You can download from our website http://ruudbilelektro.no/files/en.stsw-stm32080.zip"
		text = "<br>"
		text = "<h3>Open DfuSeDemo, and press Firmware Update found under Configuration Menu"
		text = "<h3>You should then see STM32 in DFU Mode connected"


		help =	helpDbw, , "E-Throttle Setup"
		text = "<h3>Always start by configuring and calibrating your PP/TP Sensors"
		text = "<h3>Next, tune the Feed-Forward before PID"
		text = "<h3>See PID Tuning for setting the values"
		text = "<br>"
		text = "<h2>Feed Forward"
		text = "<br>"
		text = "<h3>Feed-forward is used to give the controller an estimated starting point faster than the actual PID controller can find the exact value."
		text = "<h3> This speeds up the controller and decreases the necessity of high PID values. A E-Throttle body has a spring that closes the throttle,"
		text = "<h3>that the e-throttle motor has to work against.By telling the controller how many % duty cycle is necessary to reach each a given target point,"
		text = "<h3> the PID only has to account for the smaller error from the estimated target given by the feed-forward."

		help =	helpPid, , "PID Tuning"
		text = "<br>"
		text = "<h3>  P is used to bring the value close to the target."
		text = "<h3>  I is used to brin the error to zero." 
		text = "<h3>  D is used to dampen the response."
		text = "<br>"
		text = "<h2>  Setup process"

		text = "<h3>P and I must always be used (not allowed to be zero), D is optional and not always necessary."
		text = "<h3>Usually starting by increasing the P and I together (using the same values) until it becomes slightly unstable."
		text = "<h3>Bring in some D to counteract that, and then fine-tune each value. Often by reducing P and increasing I."
		text = "<h3>The overall goal is to use as high values as possible while still having a stable response. "
		text = "<h3>Then decrease all values a bit to add some safety margin to prevent overshoot or oscillation."
		
	help =	helpBoost, , "Boost Control Setup"	

	help =	helpAls, , "AntiLag Setup"
		text = "<h2>Activation method"
		text = "<br>"
		text = "<h3>Always active - Anti-lag functionality is always activated."
		text = "<h3>Switch input - Activation of the function requires the digital input function anti-lag enable to be activated."
		text = "<br>"
 		text = "<h2>Anti-lag timeout"
		text = "<h3>Maximum amount of time the anti-lag function can be used."
		text = "<h3>It's not recommended to anti-lag more than 3-5second unless you really know what you are doing."
		text = "<br>"
 		text = "<h2>TPS Treshold"
		text = "<h3>Minimum TPS to activate the function."
		text = "<br>"
 		text = "<h3>RPM Treshold"
		text = "<h3>Minimum RPM to activate the function."
		text = "<br>"
 		text = "<h2>Coolant Treshold"
		text = "<h3>Minimum CLT to activate the function. Safety function to prevent cold engines to be able to anti-lag."
		text = "<br>"
 		text = "<h2>Air supply."
		text = "<h3>This function overrides the current position of the idle speed solenoid, E-Throttle or stepper motor. This override is used to bleed extra air into the engine when Anti-Lag is active. A standard Idle value does generally not flow enough air for proper Anti-Lag operation, an after market upgrade is often necessary"
		text = "<h3>To be able to anti-lag, the engine needs to get enough air to spool the turbo. Specifies where the extra air is from."
		text = "<br>"
		text = "<h3>Solenoid - Unuquie solenoid dedicated for this purpose only."
		text = "<h3>Idle control solenoid - Uses the idle air solenoid."
		text = "<h3>E-Throttle - Use the E-Throttle system."
		text = "<h3>Note: Anti-lag need a lot of air to build boost on low RPM with larger turbos."



	help =	helpLaunch, , "Launch Control Setup"
    ;-------------------------------------------------------------------------------

	dialog = gppwm1left, ""
		field = "Pin", gppwm1_pin
		field = ""
		field = "Set frequency to 0hz for on-off mode"
		field = "Frequency", gppwm1_pwmFrequency, {gppwm1_pin != 0}
		field = ""
		field = "On above duty", gppwm1_onAboveDuty, {gppwm1_pin != 0 && gppwm1_pwmFrequency == 0}
		field = "Off below duty", gppwm1_offBelowDuty, {gppwm1_pin != 0 && gppwm1_pwmFrequency == 0}
		field = "Duty if error", gppwm1_dutyIfError, {gppwm1_pin != 0}
		field = ""
		field = "Load Axis", gppwm1_loadAxis, {gppwm1_pin != 0}
		field = ""
		field = ""
		field = ""
		field = ""
		field = ""

	dialog = gppwm1, "General Purpose PWM 1", xAxis
		panel = gppwm1left
		panel = gppwm1Tbl, {gppwm1_pin != 0}

	dialog = gppwm2left, ""
		field = "Pin", gppwm2_pin
		field = ""
		field = "Set frequency to 0hz for on-off mode"
		field = "Frequency", gppwm2_pwmFrequency, {gppwm2_pin != 0}
		field = ""
		field = "On above duty", gppwm2_onAboveDuty, {gppwm2_pin != 0 && gppwm2_pwmFrequency == 0}
		field = "Off below duty", gppwm2_offBelowDuty, {gppwm2_pin != 0 && gppwm2_pwmFrequency == 0}
		field = "Duty if error", gppwm2_dutyIfError, {gppwm2_pin != 0}
		field = ""
		field = "Load Axis", gppwm2_loadAxis, {gppwm2_pin != 0}
		field = ""
		field = ""
		field = ""
		field = ""
		field = ""

	dialog = gppwm2, "General Purpose PWM 2", xAxis
		panel = gppwm2left
		panel = gppwm2Tbl, {gppwm2_pin != 0}

	dialog = gppwm3left, ""
		field = "Pin", gppwm3_pin
		field = ""
		field = "Set frequency to 0hz for on-off mode"
		field = "Frequency", gppwm3_pwmFrequency, {gppwm3_pin != 0}
		field = ""
		field = "On above duty", gppwm3_onAboveDuty, {gppwm3_pin != 0 && gppwm3_pwmFrequency == 0}
		field = "Off below duty", gppwm3_offBelowDuty, {gppwm3_pin != 0 && gppwm3_pwmFrequency == 0}
		field = "Duty if error", gppwm3_dutyIfError, {gppwm3_pin != 0}
		field = ""
		field = "Load Axis", gppwm3_loadAxis, {gppwm3_pin != 0}
		field = ""
		field = ""
		field = ""
		field = ""
		field = ""

	dialog = gppwm3, "General Purpose PWM 3", xAxis
		panel = gppwm3left
		panel = gppwm3Tbl, {gppwm3_pin != 0}

	dialog = gppwm4left, ""
		field = "Pin", gppwm4_pin
		field = ""
		field = "Set frequency to 0hz for on-off mode"
		field = "Frequency", gppwm4_pwmFrequency, {gppwm4_pin != 0}
		field = ""
		field = "On above duty", gppwm4_onAboveDuty, {gppwm4_pin != 0 && gppwm4_pwmFrequency == 0}
		field = "Off below duty", gppwm4_offBelowDuty, {gppwm4_pin != 0 && gppwm4_pwmFrequency == 0}
		field = "Duty if error", gppwm4_dutyIfError, {gppwm4_pin != 0}
		field = ""
		field = "Load Axis", gppwm4_loadAxis, {gppwm4_pin != 0}
		field = ""
		field = ""
		field = ""
		field = ""
		field = ""

	dialog = gppwm4, "General Purpose PWM 4", xAxis
		panel = gppwm4left
		panel = gppwm4Tbl, {gppwm4_pin != 0}

[Tools]
 ;addTool = toolName, PanelName
 addTool = veTableGenerator, "VE Table Generator", veTableTbl
 addTool = afrTableGenerator, "AFR Table Generator", afrTableTbl
 
