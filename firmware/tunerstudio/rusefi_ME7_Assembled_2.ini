
; This is a TunerStudio project for the RusEFI.com engine management system
;
; This file has been generated by invoking gen_config.bat.
; The input files are
;   rusefi.input	the common template
;   rusefi_config.txt	the project specific file
;
; In TunerStudio some fields have little question mark on the left of the name for additional field tips.
; Those tips are defined in ../integration/rusefi_config.txt
;
; For example
;
;     float bias_resistor;+Pull-up resistor value on your board;"Ohm"
; here 'bias_resistor' is internal field name and the text between semicolons is what produces the tooltip
; Note that '+' sign is required after first semicolon for tooltop to appear in TunerStudio
;
;
;

; this should stop TS from looking for the CAN ID in the 2nd byte location and allow the page reads to work correctly.
enable2ndByteCanID = false

;#unset tuneByMAF

[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a 
   ; settingGroup with a reference name of lambdaSensor, it will replace the 
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName

    settingGroup = tuneVeMode, "VE Autotune Mode"
      settingOption = tuneByTPS, "TPS-Based (See Injection -> Inj.Settings)"
      settingOption = tuneByMAF, "MAF-Based"
      settingOption = tuneByLoad, "Load-Based (Default)"

;    settingGroup = fAlgorithmSetting, "Fuel Logic / Tables"  
;    settingOption = FA_PLAIN_MAF, "Plain MAF"
;    settingOption = FA_TPS, "AlphaN/TPS"
;    settingOption = DEFAULT, "Speed Density" ; DEFAULT will be over looked and this will fall into the #else block of the statement.



[TunerStudio]
   queryCommand   = "S"
   versionInfo    = "V"  ; firmwave version for title bar.
   signature    = "rusEFI v1.08" ; signature is expected to be 7 or more characters.

[Constants]
; new packet serial format with CRC
   messageEnvelopeFormat = msEnvelope_1.0

   endianness          = little
   nPages              = 1
  

   pageIdentifier      = "\x00\x00"
   pageReadCommand     = "R\x00\x00%2o%2c"
   burnCommand         = "B\x00\x00"
   pageActivate        = "P\x00\x00"
   pageValueWrite      = "W\x00\x00%2o%v"
   pageChunkWrite      = "C\x00\x00%2o%2c%v"
;   crc32CheckCommand   = "k%2i%2o\xB8\x36"
	;
	; TODO: interesting - 0x36B8 equals 14008 which looks like pageSize at some point in the past? is this a defect here - should
	; we have current pageSize or (pageSize + 8) here?
	;
   crc32CheckCommand   = "k\x00\x00\x00\x00\x36\xB8"

;communication settings
   pageActivationDelay = 500 ; Milliseconds delay after burn command. See https://sourceforge.net/p/rusefi/tickets/77/
;e.g. put writeblocks off and add an interwrite delay
   writeBlocks = on
   interWriteDelay = 10
   blockReadTimeout    = 3000; Milliseconds general timeout
   
 ; delayAfterPortOpen = 500  
   
   blockingFactor = 256 ; max chunk size
;end communication settings

   ;  name      			= bits,   type, offset,  bits
   ;  name           		= array,  type, offset,  shape, units,     scale, translate,    lo,      hi, digits
   ;  name       			= scalar, type, offset,         units,     scale, translate,    lo,      hi, digits

; see PAGE_0_SIZE in C source code    
; CONFIG_DEFINITION_START
; this section was generated automatically by rusEfi tool ConfigDefinition.jar based on integration\rusefi_config.txt Tue Mar 10 23:18:05 CET 2020

pageSize            = 20000
page = 1
	engineType					 = bits, S32, 0, [0:7], "INVALID", "INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID",
	fuelAlgorithm				 = bits, U32, 4, [0:2], "MAF", "Alpha-N/TPS", "MAP", "SPEED DENSITY", "MAF Air Charge"
	displacement					= scalar, F32,	8,	"L", 1, 0, 0, 1000.0, 2
	cylindersCount				 = bits, U32, 12, [0:7], "INVALID", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, "INVALID", "INVALID", "INVALID"
	firingOrder					 = bits, U32, 16, [0:7], "One Cylinder", "1-3-4-2", "1-2-4-3", "1-3-2-4", "1-5-3-6-2-4", "1-8-4-3-6-5-7-2", "1-2-4-5-3", "1-4-2-5-3-6", "1-2", "1_2_3_4_5_6", "1-2-3", "1-8-7-2-6-5-4-3", "1-5-4-2-6-3-7-8", "1-6-3-2-5-4", "1-10-9-4-3-6-5-8-7_2", "1-7-5-11-3-9-6-12-2-8-4-10", "1-7-4-10-2-8-6-12-3-9-5-11", "1-4-3-2", "1-12-5-8-3-10-6-7-2-11-4-9", "1-2-7-8-4-5-6-3", "fo20", "fo21", "fo22", "INVALID"
	trigger_type				 = bits, U32, 20, [0:7], "custom toothed wheel", "Ford Aspire", "Dodge Neon 1995", "Miata NA", "Miata NB", "GM_7X", "Cooper R50", "Mazda SOHC 4", "60/2", "36/1", "Honda 4+24+1", "Mitsubishi", "Honda 4+24", "Honda 1+4+24", "Dodge Neon 2003", "Mazda DOHC 1+4", "1+1", "1+60/2", "Single Tooth", "Dodge Ram 1+16", "60/2 VW", "Honda 1+24", "Dodge Stratus", "36_2_2_2", "Nissan Primera", "2JZ", "Rover K", "GM LS 24", "Honda CBR 600", "2JZ_1_12", "Honda CBR 600 custom", "3/1 skipped" , "Dodge Neon 2003 crank", "Miata VVT", "trg34", "trg35", "Subaru 7+6", "Jeep 18-2-2-2", "WIP", "Dodge Neon 1995 crank only", "Jeep XJ 4 cyl", "FiatIAQ_P8", "Mazda Z5", "trg43", "Vag 60-2 VVT", "trg45", "INVALID"
;no TS info - skipping trigger_unused121 offset 24
	trigger_customTotalToothCount		= scalar, S32,	28,	"number", 1, 0.0, 0, 500.0, 0
	trigger_customSkippedToothCount		= scalar, S32,	32,	"number", 1, 0.0, 0, 500.0, 0
	cranking_baseFuel				= scalar, F32,	36,	"ms", 1, 0, 0, 200, 1
	cranking_rpm					= scalar, S16,	40,	"RPM", 1, 0, 0, 3000, 0
;no TS info - skipping cranking_unused120 offset 42
	crankingInjectionMode		 = bits, U32, 44, [0:2], "Simultaneous", "Sequential", "Batch", "Single Point"
	injectionMode				 = bits, U32, 48, [0:2], "Simultaneous", "Sequential", "Batch", "Single Point"
	mafSensorType				 = bits, S32, 52, [0:7], "v0", "v1", "v2", "v3"
	idle_solenoidFrequency			= scalar, S32,	56,	"Hz", 1, 0, 0, 3000, 0
	idle_solenoidPin			 = bits, U08, 60, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_stepperDirectionPin	 = bits, U08, 61, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_stepperStepPin			 = bits, U08, 62, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	idle_solenoidPinMode		 = bits, U08, 63, [0:7], "default", "default inverted", "open collector", "open collector inverted"
;no TS info - skipping idle_unused171 offset 64
	idleMode					 = bits, U32, 68, [0:0], "Automatic", "Manual"
	boostType					 = bits, U32, 72, [0:0], "Open Loop", "Closed Loop"
	launchActivationMode		 = bits, S32, 76, [0:7], "Switch Input", "Clutch Input", "Always Active(Disabled By Speed)","INVALID"
	antiLagActivationMode		 = bits, S32, 80, [0:0], "Always Active", "Switch Input"
	afr_type					 = bits, S32, 84, [0:7], "BPSX", "Innovate", "14Point7", "Narrow", "PLX", "Custom"
	vvtMode						 = bits, U32, 88, [0:7], "First half", "Second half", "2GZ", "Miata NB2", "mode4", "mode5", "mode6", "mode7"
	afr_hwChannel				 = bits, U08, 92, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping afr_alignAf offset 93
	afr_v1							= scalar, F32,	96,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value1						= scalar, F32,	100,	 "AFR", 1, 0.0, 0, 1000.0, 2
	afr_v2							= scalar, F32,	104,	 "volts", 1, 0.0, 0, 10.0, 2
	afr_value2						= scalar, F32,	108,	 "AFR", 1, 0.0, 0, 1000.0, 2
	auxTempSensor1_tempC_1			= scalar, F32,	112,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_2			= scalar, F32,	116,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_tempC_3			= scalar, F32,	120,	"*C", 1, 0, -40, 200, 1
	auxTempSensor1_resistance_1		= scalar, F32,	124,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_2		= scalar, F32,	128,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_resistance_3		= scalar, F32,	132,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_bias_resistor		= scalar, F32,	136,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor1_adcChannel	 = bits, U08, 140, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping auxTempSensor1_alignmentFill_at_29 offset 141
	auxTempSensor2_tempC_1			= scalar, F32,	144,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_2			= scalar, F32,	148,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_tempC_3			= scalar, F32,	152,	"*C", 1, 0, -40, 200, 1
	auxTempSensor2_resistance_1		= scalar, F32,	156,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_2		= scalar, F32,	160,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_resistance_3		= scalar, F32,	164,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_bias_resistor		= scalar, F32,	168,	"Ohm", 1, 0, 0, 200000, 1
	auxTempSensor2_adcChannel	 = bits, U08, 172, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping auxTempSensor2_alignmentFill_at_29 offset 173
	canNbcType					 = bits, U32, 176, [0:2], "BMW", "FIAT", "VAG" , "MAZDA RX8"
	ambiguousOperationMode		 = bits, U32, 180, [0:2], "INVALID", "4 stroke without cam sensor", "4 stroke with cam sensor", "2 stroke", "4 stroke with symmetrical crank (requires VVT input)", "INVALID", "INVALID", "INVALID"
	timingMode					 = bits, U32, 184 [0:0], "dynamic", "fixed"
	ignitionMode				 = bits, U32, 188, [0:2], "One coil", "Individual Coils", "Wasted", "Two distributors"
	tChargeMode					 = bits, U32, 192, [0:0], "RPM+TPS (Default)", "Air Mass Interpolation"
	debugMode					 = bits, U32, 196, [0:7], "Alternator PID", "TPS acceleration enrichment", "INVALID", "Idle Control", "Engine Load accl enrich", "Trigger Counters", "FSIO_ADC", "AUX_PID_1", "VVT input", "Cranking", "Timing", "Closed-loop fuel corr PID", "VSS", "SD card", "sr5", "Knock", "Trigger Sync", "Electronic Throttle", "Executor", "Bench Test / TS commands", "Aux Valves", "Analog inputs #1", "INSTANT_RPM", "FSIO_EXPRESSION", "Status", "CJ125", "CAN", "MAP", "Metrics", "ETB#2", "Ion Sense", "TLE8888", "Analog inputs #2", "Dwell Metric", "Aux Temperature", "ETB Logic", "Boost Control", "Launch Control"
	logFormat					 = bits, U32, 200, [0:0], "native", "Mega Log Viewer"
;no TS info - skipping freeSpaceForConstants offset 204
	throttlePedalPositionAdcChannel	 = bits, U08, 224, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	tps1_1AdcChannel			 = bits, U08, 225, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	tps1_2AdcChannel			 = bits, U08, 226, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	tps2_2AdcChannel			 = bits, U08, 227, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	throttlePedalPositionSecondAdcChannel	 = bits, U08, 228, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	vbattAdcChannel				 = bits, U08, 229, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	fuelLevelSensor				 = bits, U08, 230, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	tps2_1AdcChannel			 = bits, U08, 231, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	mafAdcChannel				 = bits, U08, 232, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	vRefAdcChannel				 = bits, U08, 233, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	cj125ua						 = bits, U08, 234, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	cj125ur						 = bits, U08, 235, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	externalKnockSenseAdc		 = bits, U08, 236, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	acSwitchAdc					 = bits, U08, 237, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	auxFastSensor1_adcChannel	 = bits, U08, 238, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	fsioAdc1					 = bits, U08, 239, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	fsioAdc2					 = bits, U08, 240, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	fsioAdc3					 = bits, U08, 241, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
	fsioAdc4					 = bits, U08, 242, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping freeSpaceForadc_channel_e offset 243
	cj125CsPin					 = bits, U08, 268, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	canTxPin					 = bits, U08, 269, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	canRxPin					 = bits, U08, 270, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi1mosiPin					 = bits, U08, 271, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi1misoPin					 = bits, U08, 272, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi1sckPin					 = bits, U08, 273, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2mosiPin					 = bits, U08, 274, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2misoPin					 = bits, U08, 275, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi2sckPin					 = bits, U08, 276, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3mosiPin					 = bits, U08, 277, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3misoPin					 = bits, U08, 278, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	spi3sckPin					 = bits, U08, 279, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialTxPin			 = bits, U08, 280, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	binarySerialRxPin			 = bits, U08, 281, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	consoleSerialTxPin			 = bits, U08, 282, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	consoleSerialRxPin			 = bits, U08, 283, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	dizzySparkOutputPin			 = bits, U08, 284, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	cj125ModePin				 = bits, U08, 285, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	wboHeaterPin				 = bits, U08, 286, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	stepperEnablePin			 = bits, U08, 287, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	tle8888_cs					 = bits, U08, 288, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	debugTriggerSync			 = bits, U08, 289, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	debugSetTimer				 = bits, U08, 290, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	debugTimerCallback			 = bits, U08, 291, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	debugMapAveraging			 = bits, U08, 292, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	starterRelayPin				 = bits, U08, 293, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	secondSolenoidPin			 = bits, U08, 294, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerErrorPin				 = bits, U08, 295, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPins1		 = bits, U08, 296, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	triggerSimulatorPins2		 = bits, U08, 297, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
;no TS info - skipping unused251 offset 298
;no TS info - skipping freeSpaceForBrainpins offset 300
	fuelPumpPin					 = bits, U08, 320, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	o2heaterPin					 = bits, U08, 321, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	fanPin						 = bits, U08, 322, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out 3","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	malfunctionIndicatorPin		 = bits, U08, 323, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	alternatorControlPin		 = bits, U08, 324, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	tachOutputPin				 = bits, U08, 325, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	mainRelayPin				 = bits, U08, 326, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	boostControlPin				 = bits, U08, 327, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	vvtControlPin				 = bits, U08, 328, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	acRelayPin					 = bits, U08, 329, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
;no TS info - skipping unused174 offset 330
	injectionPins1				 = bits, U08, 332, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins2				 = bits, U08, 333, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins3				 = bits, U08, 334, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out 3","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	injectionPins4				 = bits, U08, 335, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins5				 = bits, U08, 336, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins6				 = bits, U08, 337, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins7				 = bits, U08, 338, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out 3","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	injectionPins8				 = bits, U08, 339, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins9				 = bits, U08, 340, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins10				 = bits, U08, 341, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins11				 = bits, U08, 342, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	injectionPins12				 = bits, U08, 343, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins1				 = bits, U08, 344, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins2				 = bits, U08, 345, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins3				 = bits, U08, 346, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins4				 = bits, U08, 347, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins5				 = bits, U08, 348, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out 3","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	ignitionPins6				 = bits, U08, 349, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins7				 = bits, U08, 350, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins8				 = bits, U08, 351, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins9				 = bits, U08, 352, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins10				 = bits, U08, 353, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins11				 = bits, U08, 354, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	ignitionPins12				 = bits, U08, 355, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
;no TS info - skipping freeSpaceForOutputpins offset 356
	tle8888_csPinMode			 = bits, U08, 376, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	fuelPumpPinMode				 = bits, U08, 377, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	injectionPinMode			 = bits, U08, 378, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	ignitionPinMode				 = bits, U08, 379, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	electronicThrottlePin1Mode	 = bits, U08, 380, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	o2heaterPinModeTodO			 = bits, U08, 381, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	alternatorControlPinMode	 = bits, U08, 382, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	malfunctionIndicatorPinMode	 = bits, U08, 383, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	fanPinMode					 = bits, U08, 384, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	tachOutputPinMode			 = bits, U08, 385, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	mainRelayPinMode			 = bits, U08, 386, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	starterRelayPinMode			 = bits, U08, 387, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	cj125CsPinMode				 = bits, U08, 388, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	dizzySparkOutputPinMode		 = bits, U08, 389, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	cj125ModePinMode			 = bits, U08, 390, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	stepperEnablePinMode		 = bits, U08, 391, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	boostControlPinMode			 = bits, U08, 392, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	vvtControlPinMode			 = bits, U08, 393, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	triggerErrorPinMode			 = bits, U08, 394, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	stepperDirectionPinMode		 = bits, U08, 395, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	acRelayPinMode				 = bits, U08, 396, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	triggerSimulatorPinModes1	 = bits, U08, 397, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	triggerSimulatorPinModes2	 = bits, U08, 398, [0:7], "default", "default inverted", "open collector", "open collector inverted"
;no TS info - skipping unused129 offset 399
;no TS info - skipping freeSpaceForOutputpinMode offset 400
	triggerInputPins1			 = bits, U08, 420, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	triggerInputPins2			 = bits, U08, 421, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	triggerInputPins3			 = bits, U08, 422, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	frequencyReportingMapInputPin	 = bits, U08, 423, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	camInputs1					 = bits, U08, 424, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	camInputs2					 = bits, U08, 425, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	camInputs3					 = bits, U08, 426, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	camInputs4					 = bits, U08, 427, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
	vehicleSpeedSensorInputPin	 = bits, U08, 428, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Cam Sensor 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Crank Sensor","Speed Signal
;no TS info - skipping unused137 offset 429
;no TS info - skipping freeSpaceForInputpins offset 432
	clutchDownPinMode			 = scalar, U08, 440, "todo", 1, 0, 0, 20, 1
	throttlePedalUpPinMode		 = scalar, U08, 441, "todo", 1, 0, 0, 20, 1
	clutchUpPinMode				 = scalar, U08, 442, "todo", 1, 0, 0, 20, 1
	brakePedalPinMode			 = scalar, U08, 443, "todo", 1, 0, 0, 20, 1
;no TS info - skipping freeSpaceForInputpinMode offset 444
	clutchUpPin					 = bits, U08, 452, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	clutchDownPin				 = bits, U08, 453, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	unused82					 = bits, U08, 454, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	launchActivatePin			 = bits, U08, 455, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	antiLagActivatePin			 = bits, U08, 456, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	brakePedalPin				 = bits, U08, 457, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
;no TS info - skipping unused130 offset 458
;no TS info - skipping freeSpaceForSwitchInputpins offset 460
	spi1SckMode					 = bits, U08, 480, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi1MosiMode				 = bits, U08, 481, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi1MisoMode				 = bits, U08, 482, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi2SckMode					 = bits, U08, 483, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi2MosiMode				 = bits, U08, 484, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi2MisoMode				 = bits, U08, 485, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi3SckMode					 = bits, U08, 486, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PULLUP", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "PULLDOWN"
	spi3MosiMode				 = bits, U08, 487, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
	spi3MisoMode				 = bits, U08, 488, [0:7], "default", "INVALID", "INVALID", "INVALID", "opendrain
;no TS info - skipping unused131 offset 489
;no TS info - skipping freeSpaceForPinmode offset 492
	tle8888spiDevice			 = bits,U32, 508, [0:7], "Off", "SPI1", "SPI2", "SPI3", "SPI4"
	cj125SpiDevice				 = bits,U32, 509, [0:7], "Off", "SPI1", "SPI2", "SPI3", "SPI4"
;no TS info - skipping unused141 offset 510
;no TS info - skipping freeSpaceForSpiDevice offset 512
	canDeviceMode				 = bits, U32, 552, [0:7], "v0", "v1"
	consoleUartDevice			 = bits,U32, 556, [0:7], "Off", "UART1", "UART2", "UART3"
;no TS info - skipping unused139 offset 557
	etbIo1_directionPin1		 = bits, U08, 560, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_directionPin2		 = bits, U08, 561, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_controlPin1			 = bits, U08, 562, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo1_controlPinMode		 = bits, U08, 563, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	etbIo2_directionPin1		 = bits, U08, 564, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_directionPin2		 = bits, U08, 565, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_controlPin1			 = bits, U08, 566, [0:7], "NONE", "INVALID", "PA0", "PA1", "PA2", "PA3", "PA4", "PA5", "PA6", "PA7", "PA8", "PA9", "PA10", "PA11", "PA12", "PA13", "PA14", "PA15", "PB0", "PB1", "PB2", "PB3", "PB4", "PB5", "PB6", "PB7", "PB8", "PB9", "PB10", "PB11", "PB12", "PB13", "PB14", "PB15", "PC0", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PD0", "PD1", "PD2", "PD3", "PD4", "PD5", "PD6", "PD7", "PD8", "PD9", "PD10", "PD11", "PD12", "PD13", "PD14", "PD15", "PE0", "PE1", "PE2", "PE3", "PE4", "PE5", "PE6","PE7","PE8","PE9","PE10","PE11","PE12","PE13","PE14","PE15", "PF0","PF1","PF2","PF3","PF4","PF5","PF6","PF7","PF8","PF9","PF10","PF11","PF12","PF13","PF14","PF15", "PG0","PG1","PG2","PG3","PG4","PG5","PG6","PG7","PG8","PG9","PG10","PG11","PG12","PG13","PG14","PG15", "PH0","PH1","PH2","PH3","PH4","PH5","PH6","PH7","PH8","PH9","PH10","PH11","PH12","PH13","PH14","PH15","INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	etbIo2_controlPinMode		 = bits, U08, 567, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	gppwmIo_gpPwm1InputPin		 = bits, U08, 568, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	gppwmIo_gpPwm2InputPin		 = bits, U08, 569, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	gppwmIo_gpPwm3InputPin		 = bits, U08, 570, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	gppwmIo_gpPwm4InputPin		 = bits, U08, 571, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Clutch Switch","Digital In 5","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Digital In 4","Digital In 3","Digital In 2","Brake Switch","Digital In 8","Digital In
	gppwmIo_gpPwm1Pin			 = bits, U08, 572, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out 3","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID"
	gppwmIo_gpPwm2Pin			 = bits, U08, 573, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	gppwmIo_gpPwm3Pin			 = bits, U08, 574, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	gppwmIo_gpPwm4Pin			 = bits, U08, 575, [0:7], "NONE","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Injector 8","Injector 7","Injector 2","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Coil 8","INVALID","INVALID","Coil 7","INVALID","INVALID","INVALID","Coil 4","Coil 2","Coil 1","Coil 5","Coil 3","INVALID","Coil 6","INVALID","INVALID","INVALID","INVALID","INVALID","Thermostat Control","INVALID","INVALID","Gp High Side 1","Injector 4","Injector 3","Injector 1","Boost Valve","Injector 6","Injector 5","Gp Out 4","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","INVALID","Alternator Control","Fuel Pump","INVALID","INVALID","Coolant Fan","INVALID","INVALID","INVALID","Gp Out 1","INVALID","VVT Intake","VVt Exhaust","Gp Out 2","Gp Out
	gppwmIo_gpPwm1PinMode		 = bits, U08, 576, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	gppwmIo_gpPwm2PinMode		 = bits, U08, 577, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	gppwmIo_gpPwm3PinMode		 = bits, U08, 578, [0:7], "default", "default inverted", "open collector", "open collector inverted"
	gppwmIo_gpPwm4PinMode		 = bits, U08, 579, [0:7], "default", "default inverted", "open collector", "open collector inverted"
;no TS info - skipping freeSpaceForPins offset 580
	vvtLoadAxis					 = bits, U32, 640, [0:1], "TPS", "MAP", "CLT"
	gpPwm1Load					 = bits, U32, 644, [0:1], "Map", "Tps", "Coolant"
	gpPwm2Load					 = bits, U32, 648, [0:1], "Map", "Tps", "Coolant"
	gpPwm3Load					 = bits, U32, 652, [0:1], "Map", "Tps", "Coolant"
	gpPwm4Load					 = bits, U32, 656, [0:1], "Map", "Tps", "Coolant"
	directSelfStimulation	= bits,    U32,   	660, [0:0], "No", "Yes"
	useBiQuadAnalogFiltering= bits,    U32,   	660, [1:1], "No", "Yes"
	cj125isUaDivided		= bits,    U32,   	660, [2:2], "No", "Yes"
	cj125isLsu49			= bits,    U32,   	660, [3:3], "No", "Yes"
	etb_use_two_wires		= bits,    U32,   	660, [4:4], "No", "Yes"
	isDoubleSolenoidIdle	= bits,    U32,   	660, [5:5], "No", "Yes"
	showSdCardWarning		= bits,    U32,   	660, [6:6], "No", "Yes"
	cj125isUrDivided		= bits,    U32,   	660, [7:7], "No", "Yes"
	useTLE8888_hall_mode	= bits,    U32,   	660, [8:8], "No", "Yes"
	useTLE8888_cranking_hack= bits,    U32,   	660, [9:9], "No", "Yes"
	useInstantRpmForIdle	= bits,    U32,   	660, [10:10], "No", "Yes"
	absoluteFuelPressure	= bits,    U32,   	660, [11:11], "No", "Yes"
	launchControlEnabled	= bits,    U32,   	660, [12:12], "No", "Yes"
	rollingLaunchEnabled	= bits,    U32,   	660, [13:13], "No", "Yes"
	antiLagEnabled			= bits,    U32,   	660, [14:14], "No", "Yes"
	useRunningMathForCranking= bits,    U32,   	660, [15:15], "Fixed", "Fuel Map"
	isCJ125Enabled			= bits,    U32,   	660, [16:16], "No", "Yes"
	vvtCamSensorUseRise		= bits,    U32,   	660, [17:17], "No", "Yes"
	measureMapOnlyInOneCylinder= bits,    U32,   	660, [18:18], "No", "Yes"
	stepperForceParkingEveryRestart= bits,    U32,   	660, [19:19], "No", "Yes"
	isFasterEngineSpinUpEnabled= bits,    U32,   	660, [20:20], "No", "Yes"
	coastingFuelCutEnabled	= bits,    U32,   	660, [21:21], "No", "Yes"
	useIacTableForCoasting	= bits,    U32,   	660, [22:22], "No", "Yes"
	useNoiselessTriggerDecoder= bits,    U32,   	660, [23:23], "No", "Yes"
	useIdleTimingPidControl	= bits,    U32,   	660, [24:24], "No", "Yes"
	useTPSBasedVeTable		= bits,    U32,   	660, [25:25], "No", "Yes"
	pauseEtbControl			= bits,    U32,   	660, [26:26], "No", "Yes"
	alignEngineSnifferAtTDC	= bits,    U32,   	660, [27:27], "No", "Yes"
	useETBforIdleControl	= bits,    U32,   	660, [28:28], "No", "Yes"
	idleIncrementalPidCic	= bits,    U32,   	660, [29:29], "No", "Yes"
	enableAemXSeries		= bits,    U32,   	660, [30:30], "No", "Yes"
	onOffAlternatorLogic	= bits,    U32,   	660, [31:31], "No", "Yes"
;no TS info - skipping unused243 offset 664
	useSerialPort			= bits,    U32,   	668, [0:0], "No", "Yes"
	is_enabled_spi_1		= bits,    U32,   	668, [1:1], "No", "Yes"
	is_enabled_spi_2		= bits,    U32,   	668, [2:2], "No", "Yes"
	is_enabled_spi_3		= bits,    U32,   	668, [3:3], "No", "Yes"
	is_enabled_spi_4		= bits,    U32,   	668, [4:4], "No", "Yes"
	isFastAdcEnabled		= bits,    U32,   	668, [5:5], "No", "Yes"
	isEngineControlEnabled	= bits,    U32,   	668, [6:6], "No", "Yes"
	canReadEnabled			= bits,    U32,   	668, [7:7], "No", "Yes"
	canWriteEnabled			= bits,    U32,   	668, [8:8], "No", "Yes"
	useStepperIdle			= bits,    U32,   	668, [9:9], "No", "Yes"
	useTpicAdvancedMode		= bits,    U32,   	668, [10:10], "No", "Yes"
	useOnlyFirstChannel		= bits,    U32,   	668, [11:11], "No", "Yes"
	useLinearCltSensor		= bits,    U32,   	668, [12:12], "No", "Yes"
	useLinearIatSensor		= bits,    U32,   	668, [13:13], "No", "Yes"
	hasFrequencyReportingMapSensor= bits,    U32,   	668, [14:14], "No", "Yes"
	vvtType					= bits,    U32,   	668, [15:15], "Closed Loop", "On/Off"
	isInjectionEnabled		= bits,    U32,   	668, [16:16], "No", "Yes"
	isIgnitionEnabled		= bits,    U32,   	668, [17:17], "No", "Yes"
	isCylinderCleanupEnabled= bits,    U32,   	668, [18:18], "No", "Yes"
	secondTriggerChannelEnabled= bits,    U32,   	668, [19:19], "No", "Yes"
	vvtDisplayInverted		= bits,    U32,   	668, [20:20], "No", "Yes"
	fuelClosedLoopCorrectionEnabled= bits,    U32,   	668, [21:21], "No", "Yes"
	useConstantDwellDuringCranking= bits,    U32,   	668, [22:22], "No", "Yes"
	isEngineChartEnabled	= bits,    U32,   	668, [23:23], "No", "Yes"
	silentTriggerError		= bits,    U32,   	668, [24:24], "No", "Yes"
	tachPulseDurationAsDutyCycle= bits,    U32,   	668, [25:25], "No", "Yes"
	isAlternatorControlEnabled= bits,    U32,   	668, [26:26], "No", "Yes"
	invertPrimaryTriggerSignal= bits,    U32,   	668, [27:27], "No", "Yes"
	invertSecondaryTriggerSignal= bits,    U32,   	668, [28:28], "No", "Yes"
	isBoostControlEnabled	= bits,    U32,   	668, [29:29], "No", "Yes"
	isVvtControlEnabled		= bits,    U32,   	668, [30:30], "No", "Yes"
	setEtbErrorRpm			= bits,    U32,   	668, [31:31], "No", "Yes"
;no TS info - skipping unused200 offset 672
	enableLaunchBoost		= bits,    U32,   	676, [0:0], "No", "Yes"
	isMapAveragingEnabled	= bits,    U32,   	676, [1:1], "No", "Yes"
	overrideCrankingIacSetting= bits,    U32,   	676, [2:2], "No", "Yes"
	useSeparateAdvanceForIdle= bits,    U32,   	676, [3:3], "No", "Yes"
	isTunerStudioEnabled	= bits,    U32,   	676, [4:4], "No", "Yes"
	isWaveAnalyzerEnabled	= bits,    U32,   	676, [5:5], "No", "Yes"
	useSeparateVeForIdle	= bits,    U32,   	676, [6:6], "No", "Yes"
	isManualSpinningMode	= bits,    U32,   	676, [7:7], "No", "Yes"
	twoWireBatchInjection	= bits,    U32,   	676, [8:8], "No", "Yes"
	useOnlyRisingEdgeForTrigger= bits,    U32,   	676, [9:9], "No", "Yes"
	twoWireBatchIgnition	= bits,    U32,   	676, [10:10], "No", "Yes"
	useFixedBaroCorrFromMap	= bits,    U32,   	676, [11:11], "No", "Yes"
	useSeparateAdvanceForCranking= bits,    U32,   	676, [12:12], "No", "Yes"
	useAdvanceCorrectionsForCranking= bits,    U32,   	676, [13:13], "No", "Yes"
	useTPSAdvanceTable		= bits,    U32,   	676, [14:14], "No", "Yes"
	etbCalibrationOnStart	= bits,    U32,   	676, [15:15], "No", "Yes"
	useIacPidMultTable		= bits,    U32,   	676, [16:16], "No", "Yes"
	launchDisableBySpeed	= bits,    U32,   	676, [17:17], "No", "Yes"
	launchSmoothRetard		= bits,    U32,   	676, [18:18], "No", "Yes"
	enableLaunchRetard		= bits,    U32,   	676, [19:19], "No", "Yes"
	cutFuelOnHardLimit		= bits,    U32,   	676, [20:20], "No", "Yes"
	cutSparkOnHardLimit		= bits,    U32,   	676, [21:21], "No", "Yes"
	launchFuelCutEnable		= bits,    U32,   	676, [22:22], "No", "Yes"
	launchSparkCutEnable	= bits,    U32,   	676, [23:23], "No", "Yes"
	multisparkEnable		= bits,    U32,   	676, [24:24], "No", "Yes"
	unused44				= bits,    U32,   	676, [25:25], "false", "true"
	unused45				= bits,    U32,   	676, [26:26], "false", "true"
	unused5					= bits,    U32,   	676, [27:27], "false", "true"
	unused205				= bits,    U32,   	676, [28:28], "false", "true"
	unused202				= bits,    U32,   	676, [29:29], "false", "true"
	unused203				= bits,    U32,   	676, [30:30], "false", "true"
	unused204				= bits,    U32,   	676, [31:31], "false", "true"
;no TS info - skipping freeSpaceForBits offset 680
	boostPid_pFactor				= scalar, F32,	720,	"", 1, 0, -10000, 10000, 1
	boostPid_iFactor				= scalar, F32,	724,	"", 1, 0, -10000, 10000, 1
	boostPid_dFactor				= scalar, F32,	728,	"", 1, 0, -10000, 10000, 1
	boostPid_offset					= scalar, S16,	732,	"", 1, 0, -1000, 1000, 0
	boostPid_periodMs				= scalar, S16,	734,	"ms", 1, 0, 0, 3000, 0
	boostPid_minValue				= scalar, S16,	736,	"", 1, 0, -30000, 30000.0, 0
	boostPid_maxValue				= scalar, S16,	738,	"", 1, 0, -30000, 30000.0, 0
	vvtPid_pFactor					= scalar, F32,	740,	"", 1, 0, -10000, 10000, 1
	vvtPid_iFactor					= scalar, F32,	744,	"", 1, 0, -10000, 10000, 1
	vvtPid_dFactor					= scalar, F32,	748,	"", 1, 0, -10000, 10000, 1
	vvtPid_offset					= scalar, S16,	752,	"", 1, 0, -1000, 1000, 0
	vvtPid_periodMs					= scalar, S16,	754,	"ms", 1, 0, 0, 3000, 0
	vvtPid_minValue					= scalar, S16,	756,	"", 1, 0, -30000, 30000.0, 0
	vvtPid_maxValue					= scalar, S16,	758,	"", 1, 0, -30000, 30000.0, 0
	alternatorControl_pFactor		= scalar, F32,	760,	"", 1, 0, -10000, 10000, 1
	alternatorControl_iFactor		= scalar, F32,	764,	"", 1, 0, -10000, 10000, 1
	alternatorControl_dFactor		= scalar, F32,	768,	"", 1, 0, -10000, 10000, 1
	alternatorControl_offset		= scalar, S16,	772,	"", 1, 0, -1000, 1000, 0
	alternatorControl_periodMs		= scalar, S16,	774,	"ms", 1, 0, 0, 3000, 0
	alternatorControl_minValue		= scalar, S16,	776,	"", 1, 0, -30000, 30000.0, 0
	alternatorControl_maxValue		= scalar, S16,	778,	"", 1, 0, -30000, 30000.0, 0
	etb_pFactor						= scalar, F32,	780,	"", 1, 0, -10000, 10000, 1
	etb_iFactor						= scalar, F32,	784,	"", 1, 0, -10000, 10000, 1
	etb_dFactor						= scalar, F32,	788,	"", 1, 0, -10000, 10000, 1
	etb_offset						= scalar, S16,	792,	"", 1, 0, -1000, 1000, 0
	etb_periodMs					= scalar, S16,	794,	"ms", 1, 0, 0, 3000, 0
	etb_minValue					= scalar, S16,	796,	"", 1, 0, -30000, 30000.0, 0
	etb_maxValue					= scalar, S16,	798,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid_pFactor				= scalar, F32,	800,	"", 1, 0, -10000, 10000, 1
	idleRpmPid_iFactor				= scalar, F32,	804,	"", 1, 0, -10000, 10000, 1
	idleRpmPid_dFactor				= scalar, F32,	808,	"", 1, 0, -10000, 10000, 1
	idleRpmPid_offset				= scalar, S16,	812,	"", 1, 0, -1000, 1000, 0
	idleRpmPid_periodMs				= scalar, S16,	814,	"ms", 1, 0, 0, 3000, 0
	idleRpmPid_minValue				= scalar, S16,	816,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid_maxValue				= scalar, S16,	818,	"", 1, 0, -30000, 30000.0, 0
	fuelClosedLoopPid_pFactor		= scalar, F32,	820,	"", 1, 0, -10000, 10000, 1
	fuelClosedLoopPid_iFactor		= scalar, F32,	824,	"", 1, 0, -10000, 10000, 1
	fuelClosedLoopPid_dFactor		= scalar, F32,	828,	"", 1, 0, -10000, 10000, 1
	fuelClosedLoopPid_offset		= scalar, S16,	832,	"", 1, 0, -1000, 1000, 0
	fuelClosedLoopPid_periodMs		= scalar, S16,	834,	"ms", 1, 0, 0, 3000, 0
	fuelClosedLoopPid_minValue		= scalar, S16,	836,	"", 1, 0, -30000, 30000.0, 0
	fuelClosedLoopPid_maxValue		= scalar, S16,	838,	"", 1, 0, -30000, 30000.0, 0
	idleTimingPid_pFactor			= scalar, F32,	840,	"", 1, 0, -10000, 10000, 1
	idleTimingPid_iFactor			= scalar, F32,	844,	"", 1, 0, -10000, 10000, 1
	idleTimingPid_dFactor			= scalar, F32,	848,	"", 1, 0, -10000, 10000, 1
	idleTimingPid_offset			= scalar, S16,	852,	"", 1, 0, -1000, 1000, 0
	idleTimingPid_periodMs			= scalar, S16,	854,	"ms", 1, 0, 0, 3000, 0
	idleTimingPid_minValue			= scalar, S16,	856,	"", 1, 0, -30000, 30000.0, 0
	idleTimingPid_maxValue			= scalar, S16,	858,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid2_pFactor				= scalar, F32,	860,	"", 1, 0, -10000, 10000, 1
	idleRpmPid2_iFactor				= scalar, F32,	864,	"", 1, 0, -10000, 10000, 1
	idleRpmPid2_dFactor				= scalar, F32,	868,	"", 1, 0, -10000, 10000, 1
	idleRpmPid2_offset				= scalar, S16,	872,	"", 1, 0, -1000, 1000, 0
	idleRpmPid2_periodMs			= scalar, S16,	874,	"ms", 1, 0, 0, 3000, 0
	idleRpmPid2_minValue			= scalar, S16,	876,	"", 1, 0, -30000, 30000.0, 0
	idleRpmPid2_maxValue			= scalar, S16,	878,	"", 1, 0, -30000, 30000.0, 0
;no TS info - skipping freeSpaceForPid offset 880
	engineSnifferRpmThreshold		= scalar, S32,	960,	"RPM", 1, 0, 0,30000, 0
	launchRpm						= scalar, S32,	964,	"rpm", 1, 0, 0, 20000.0, 2
	sensorSnifferRpmThreshold		= scalar, S32,	968,	"RPM", 1, 0, 0,30000, 0
	rpmHardLimit					= scalar, S32,	972,	"rpm", 1, 0, 0, 20000.0, 2
	canSleepPeriodMs				= scalar, S32,	976,	"ms", 1, 0, 0, 1000.0, 2
	byFirmwareVersion				= scalar, S32,	980,	"index", 1, 0, 0, 300, 0
;no TS info - skipping overrideCrankingIgnition offset 984
	sensorChartFrequency			= scalar, S32,	988,	"index", 1, 0, 0, 300, 0 ; size 4
	triggerSimulatorFrequency		= scalar, S32,	992,	"Rpm", 1, 0, 0,30000, 0
;no TS info - skipping idleThreadPeriodMs offset 996
;no TS info - skipping consoleLoopPeriodMs offset 1000
;no TS info - skipping generalPeriodicThreadPeriodMs offset 1004
;no TS info - skipping unrealisticRpmThreashold offset 1008
	launchTpsTreshold				= scalar, S32,	1012,	"&", 1, 0, 0, 100, 0
	launchSpeedTreshold				= scalar, S32,	1016,	"Kph", 1, 0, 0, 300, 0
	antiLagRpmTreshold				= scalar, S32,	1020,	"RPM", 1, 0, 0, 8000, 0
	launchTimingRpmRange			= scalar, S32,	1024,	"RPM", 1, 0, 0, 8000, 0
	launchFuelAdded					= scalar, S32,	1028,	"%", 1, 0, 0, 100.0, 0
	launchBoostDuty					= scalar, S32,	1032,	"%", 1, 0, 0, 100.0, 0
	hardCutRpmRange					= scalar, S32,	1036,	"rpm", 1, 0, 0, 3000, 1
	antilagTimeout					= scalar, S32,	1040,	"Sec", 1, 0, 0, 50, 1
	launchActivateDelay				= scalar, S32,	1044,	"Sec", 1, 0, 0, 50, 1
	boostPwmFrequency				= scalar, S32,	1048,	"Hz", 1, 0, 0, 3000.0, 0
	vvtPwmFrequency					= scalar, S32,	1052,	"Hz", 1, 0, 0, 3000.0, 0
	idleStepperTotalSteps			= scalar, S32,	1056,	"count", 1, 0, 5, 3000, 0
	mapAveragingSchedulingAtIndex		= scalar, S32,	1060,	"index", 1, 0, 0, 7000, 0
	ignMathCalculateAtIndex			= scalar, S32,	1064,	"index", 1, 0, 0, 7000, 0
	mapMinBufferLength				= scalar, S32,	1068,	"count", 1, 0, 0, 24, 0
	maxVvtDeviation					= scalar, S32,	1072,	"Angle", 1, 0, -50, 50, 1
	tachPulseTriggerIndex			= scalar, S32,	1076,	"index", 1, 0, 0.0, 360.0, 0
	crankingIACposition				= scalar, S32,	1080,	"", 1, 0, -100.0, 100,
	nbVvtIndex						= scalar, S32,	1084,	"index", 1, 0, 0, 4.0, 0
	alternatorPwmFrequency			= scalar, S32,	1088,	"Hz", 1, 0, 0, 3000.0, 0
	tpsAccelLength					= scalar, S32,	1092,	"cycles", 1, 0, 1, 200, 0
	engineLoadAccelLength			= scalar, S32,	1096,	"cycles", 1, 0, 1, 200, 0
;no TS info - skipping unused201 offset 1100
;no TS info - skipping freeSpaceForInt offset 1104
	tpsMin							= scalar, S16,	1168,	"ADC", 1, 0, 0, 1023, 0
	tpsMax							= scalar, S16,	1170,	"ADC", 1, 0, 0, 1023, 0
	tpsErrorDetectionTooLow			= scalar, S16,	1172,	"%", 1, 0, -40, 200, 0
	tpsErrorDetectionTooHigh		= scalar, S16,	1174,	"%", 1, 0, -40, 200, 0
	sdCardPeriodMs					= scalar, S16,	1176,	"ms", 1, 0, 0, 30000, 0
	idlePidDeactivationTpsThreshold		= scalar, S16,	1178,	"%", 1, 0, 0, 100.0, 0
	stepperParkingExtraSteps		= scalar, S16,	1180,	"%", 1, 0, 0, 3000.0, 0
	idlePidRpmUpperLimit			= scalar, S16,	1182,	"", 1, 0, 0, 9000, 0
	primeInjFalloffTemperature		= scalar, S16,	1184,	"*C", 1, 0, 0, 1000.0, 0
;no TS info - skipping acCutoffLowRpm offset 1186
;no TS info - skipping acCutoffHighRpm offset 1188
	startUpFuelPumpDuration			= scalar, S16,	1190,	"seconds", 1, 0, 0, 6000, 0
	idlePidRpmDeadZone				= scalar, S16,	1192,	"", 1, 0, 0, 1000, 0
	idlerpmpid_iTermMax				= scalar, S16,	1194,	"", 1, 0, -30000, 30000.0, 0
	afterCrankingIACtaperDuration		= scalar, S16,	1196,	"cycles", 1, 0, 0, 5000, 0
	tps2Min							= scalar, S16,	1198,	"ADC", 1, 0, 0, 1023, 0
	tps2Max							= scalar, S16,	1200,	"ADC", 1, 0, 0, 1023, 0
	iacByTpsTaper					= scalar, S16,	1202,	"percent", 1, 0, 0, 500, 0
	idlerpmpid_iTermMin				= scalar, S16,	1204,	"", 1, 0, -30000, 30000.0, 0
;no TS info - skipping acIdleRpmBump offset 1206
	warningPeriod					= scalar, S16,	1208,	"seconds", 1, 0, 0, 60, 0
	idleTimingPidWorkZone			= scalar, S16,	1210,	"RPM", 1, 0, 0, 1000, 0
	idleTimingPidDeadZone			= scalar, S16,	1212,	"RPM", 1, 0, 0, 1000, 0
	idlePidFalloffDeltaRpm			= scalar, S16,	1214,	"RPM", 1, 0, 0, 1000, 0
	fuelClosedLoopCltThreshold		= scalar, S16,	1216,	"C", 1, 0, 0, 100, 0
	fuelClosedLoopTpsThreshold		= scalar, S16,	1218,	"%", 1, 0, 0, 100, 0
	fuelClosedLoopRpmThreshold		= scalar, S16,	1220,	"rpm", 1, 0, 0, 5000, 0
	etbFreq							= scalar, S16,	1222,	"Hz", 1, 0, 0, 30000, 0
	coastingFuelCutRpmHigh			= scalar, S16,	1224,	"rpm", 1, 0, 0, 5000, 0
	coastingFuelCutRpmLow			= scalar, S16,	1226,	"rpm", 1, 0, 0, 5000, 0
	coastingFuelCutTps				= scalar, S16,	1228,	"%", 1, 0, 0, 100, 1
	coastingFuelCutClt				= scalar, S16,	1230,	"C", 1, 0, -100, 100, 0
	pidExtraForLowRpm				= scalar, S16,	1232,	"%", 1, 0, 0, 100, 0
	coastingFuelCutMap				= scalar, S16,	1234,	"kPa", 1, 0, 0, 250, 0
	etb_iTermMin					= scalar, S16,	1236,	"", 1, 0, -30000, 30000.0, 0
	etb_iTermMax					= scalar, S16,	1238,	"", 1, 0, -30000, 30000.0, 0
	tpsAccelFractionPeriod			= scalar, S16,	1240,	"cycles", 1, 0, 0, 500, 0
;no TS info - skipping unused143 offset 1242
	multisparkSparkDuration			= scalar, U16,	1244,	 "ms", 0.001, 0, 0, 3, 2
	multisparkDwell					= scalar, U16,	1246,	 "ms", 0.001, 0, 0, 3, 2
	multisparkMaxRpm				= scalar, U16,	1248,	"rpm", 1, 0, 0, 3000, 0
;no TS info - skipping freeSpaceForInt16 offset 1250
	tunerStudioSerialSpeed			= scalar, U32,	1260,	"BPs", 1, 0, 0,1000000, 0
	engineChartSize					= scalar, U32,	1264,	"count", 1, 0, 0, 300, 0
	uartConsoleSerialSpeed			= scalar, U32,	1268,	"BPs", 1, 0, 0,1000000, 0
;no TS info - skipping freeSpaceForUint32 offset 1272
	extraInjectionOffset			= scalar, F32,	1292,	"deg", 1, 0.0, -720, 720, 2
	crankingTimingAngle				= scalar, F32,	1296,	 "deg", 1, 0.0, -360, 360, 2
	ignitionOffset					= scalar, F32,	1300,	"RPM", 1, 0, 0, 3000.0, 0
	fixedModeTiming					= scalar, F32,	1304,	"RPM", 1, 0, 0, 3000.0, 0
	globalTriggerAngleOffset		= scalar, F32,	1308,	"deg", 1, 0, -720, 720, 0
;no TS info - skipping freeSpaceForangle_t offset 1312
	cylinderBore					= scalar, F32,	1328,	"mm", 1, 0, 0, 20000.0, 2
	primingSquirtDurationMs			= scalar, F32,	1332,	"*C", 1, 0, -40, 200, 1
	ignitionDwellForCrankingMs		= scalar, F32,	1336,	"ms", 1, 0, 0, 200, 1
	crankingChargeAngle				= scalar, F32,	1340,	"deg", 1, 0, 0, 3000.0, 0
	knockBandCustom					= scalar, F32,	1344,	"kHz", 1, 0.0, 0.0, 10.0, 2
	analogInputDividerCoefficient		= scalar, F32,	1348,	"coef", 1, 0, 0.01, 10.0, 2
	vbattDividerCoeff				= scalar, F32,	1352,	"coef", 1, 0, 0.01, 99.0, 2
	fanOnTemperature				= scalar, F32,	1356,	"*C", 1, 0, 0, 1000.0, 0
	fanOffTemperature				= scalar, F32,	1360,	"*C", 1, 0, 0, 1000.0, 0
	vehicleSpeedCoef				= scalar, F32,	1364,	"coef", 1, 0, 0.01, 2000.0, 2
	fuelClosedLoopAfrLowThreshold		= scalar, F32,	1368,	"ratio", 1, 0, 0, 100, 1
	launchTimingRetard				= scalar, F32,	1372,	"deg", 1, 0, -180, 180, 2
	globalFuelCorrection			= scalar, F32,	1376,	"coef", 1, 0.0, 0, 1000.0, 2
	adcVcc							= scalar, F32,	1380,	 "volts", 1, 0.0, 0, 6.0, 3
;no TS info - skipping maxKnockSubDeg offset 1384
	manIdlePosition					= scalar, F32,	1388,	"%", 1, 0, 0, 100, 0
	mapFrequency0Kpa				= scalar, F32,	1392,	"Hz", 1, 0, 0, 100000, 2
	mapFrequency100Kpa				= scalar, F32,	1396,	"Hz", 1, 0, 0, 100000, 2
	fuelLevelEmptyTankVoltage		= scalar, F32,	1400,	"V", 1, 0, 0,10, 2
	fuelLevelFullTankVoltage		= scalar, F32,	1404,	"V", 1, 0, 0,10, 2
	tachPulseDuractionMs			= scalar, F32,	1408,	"ms", 1, 0, 0.0, 100.0, 2
	etbItermLimit					= scalar, F32,	1412,	"value", 1, 0, -500, 500, 1
	idleStepperReactionTime			= scalar, F32,	1416,	"ms", 1, 0, 1, 300, 0
	knockVThreshold					= scalar, F32,	1420,	"V", 1, 0, 1, 5, 2
	fuelRailPressure				= scalar, F32,	1424,	 "kPa", 1, 0.0, 0, 1000.0, 2
	alternator_derivativeFilterLoss		= scalar, F32,	1428,	 "x", 1, 0.0, -1000000, 1000000, 4
	alternator_antiwindupFreq		= scalar, F32,	1432,	 "x", 1, 0.0, -1000000, 1000000, 4
	minVvtTemperature				= scalar, F32,	1436,	"*C", 1, 0, 0, 1000.0, 0
	knockDetectionWindowStart		= scalar, F32,	1440,	"angle", 1, 0, -1000, 1000, 2
	knockDetectionWindowEnd			= scalar, F32,	1444,	"angle", 1, 0, -1000, 1000, 2
	noAccelAfterHardLimitPeriodSecs		= scalar, F32,	1448,	"sec", 1, 0, 0, 60, 0
	wwaeTau							= scalar, F32,	1452,	"Seconds", 1, 0, 0.0, 3.0, 2
	targetVBatt						= scalar, F32,	1456,	"Volts", 1, 0, 0,30, 1
	alternatorOffAboveTps			= scalar, F32,	1460,	"%", 1, 0, 0, 200, 2
	startOfCrankingPrimingPulse		= scalar, F32,	1464,	"ms", 1, 0, 0, 200, 1
	tpsAccelEnrichmentThreshold		= scalar, F32,	1468,	"roc", 1, 0, 0, 200, 3
	vvtOffset						= scalar, F32,	1472,	"", 1, 0, -720, 1000, 1
	engineLoadDecelEnleanmentThreshold		= scalar, F32,	1476,	"roc", 1, 0, 0, 200, 3
	engineLoadDecelEnleanmentMultiplier		= scalar, F32,	1480,	"coeff", 1, 0, 0, 200, 3
	engineLoadAccelEnrichmentThreshold		= scalar, F32,	1484,	"roc", 1, 0, 0, 200, 3
	engineLoadAccelEnrichmentMultiplier		= scalar, F32,	1488,	"coeff", 1, 0, 0, 200, 3
	tpsDecelEnleanmentThreshold		= scalar, F32,	1492,	"roc", 1, 0, 0, 200, 3
	tpsDecelEnleanmentMultiplier		= scalar, F32,	1496,	"coeff", 1, 0, 0, 200, 3
	slowAdcAlpha					= scalar, F32,	1500,	"coeff", 1, 0, 0, 200, 3
	fixedTiming						= scalar, F32,	1504,	"deg", 1, 0, -720, 720, 2
	mapLowValueVoltage				= scalar, F32,	1508,	"v", 1, 0, 0.0, 10, 2
	mapHighValueVoltage				= scalar, F32,	1512,	"v", 1, 0, 0.0, 10, 2
	egoValueShift					= scalar, F32,	1516,	"value", 1, 0, -10.0, 10, 2
	boostCutPressure				= scalar, F32,	1520,	"kPa", 1, 0, 0, 500, 0
	tChargeMinRpmMinTps				= scalar, F32,	1524,	"mult", 1, 0, 0, 3, 4
	tChargeMinRpmMaxTps				= scalar, F32,	1528,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMinTps				= scalar, F32,	1532,	"mult", 1, 0, 0, 3, 4
	tChargeMaxRpmMaxTps				= scalar, F32,	1536,	"mult", 1, 0, 0, 3, 4
	fuelClosedLoopAfrHighThreshold		= scalar, F32,	1540,	"ratio", 1, 0, 0, 100, 1
;no TS info - skipping autoTuneCltThreshold offset 1544
;no TS info - skipping autoTuneTpsRocThreshold offset 1548
;no TS info - skipping autoTuneTpsQuietPeriod offset 1552
	postCrankingTargetClt			= scalar, F32,	1556,	"C", 1, 0, 0, 100, 0
	postCrankingFactor				= scalar, F32,	1560,	"mult", 1, 0, 0, 100, 4
	postCrankingDurationSec			= scalar, F32,	1564,	"seconds", 1, 0, 0, 100, 2
	idlePidActivationTime			= scalar, F32,	1568,	"seconds", 1, 0, 0, 60, 1
	tChargeAirCoefMin				= scalar, F32,	1572,	"Min tCharge Coeff.", 1, 0, 0.0, 1.0, 4
	tChargeAirCoefMax				= scalar, F32,	1576,	"Max tCharge Coeff.", 1, 0, 0.0, 1.0, 4
	tChargeAirFlowMax				= scalar, F32,	1580,	"Max Air Flow, kg/h", 1, 0, 0.0, 1000.0, 1
	tChargeAirIncrLimit				= scalar, F32,	1584,	"tChange Increment Limit, deg/sec", 1, 0, 0.0, 100.0, 1
	tChargeAirDecrLimit				= scalar, F32,	1588,	"tChange Decrement Limit, deg/sec", 1, 0, 0.0, 100.0, 1
	mapErrorDetectionTooLow			= scalar, F32,	1592,	"kPa", 1, 0, -100.0, 100.0, 2
	mapErrorDetectionTooHigh		= scalar, F32,	1596,	"kPa", 1, 0, -100.0, 800.0, 2
	wwaeBeta						= scalar, F32,	1600,	"Fraction", 1, 0, 0.0, 1.0, 2
	throttlePedalUpVoltage			= scalar, F32,	1604,	"voltage", 1, 0, -6, 6, 2
	throttlePedalWOTVoltage			= scalar, F32,	1608,	"voltage", 1, 0, -6, 6, 2
	etbDeadband						= scalar, F32,	1612,	"", 1, 0, 0, 100.0, 2
	etbIdleThrottleRange			= scalar, F32,	1616,	 "%", 1, 0, 0, 15, 0
	tpsAccelFractionDivisor			= scalar, F32,	1620,	"coef", 1, 0, 0, 100, 2
;no TS info - skipping freeSpaceForFloats offset 1624
	tachPulsePerRev					= scalar, U08,	1644,	"Pulse", 1, 0, 1.0, 255.0, 0
	triggerCompCenterVolt			= scalar, U08,	1645,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompHystMin				= scalar, U08,	1646,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompHystMax				= scalar, U08,	1647,	"V", 0.02, 0, 0.0, 5.1, 2
	triggerCompSensorSatRpm			= scalar, U08,	1648,	"RPM", 50, 0, 0.0, 12000.0, 0
	multisparkMaxSparkingAngle		= scalar, U08,	1649,	"deg", 1, 0, 0, 60, 0
	multisparkMaxExtraSparkCount		= scalar, U08,	1650,	"count", 1, 0, 0, 5, 0
;no TS info - skipping unused260 offset 1651
	gppwm_conditionGpPwm4Tps= bits,    U32,   	1652, [0:0], "No", "Yes"
	gppwm_gpPwm4BelowOrAboveTps= bits,    U32,   	1652, [1:1], "Below", "Above"
	gppwm_conditionGpPwm4Map= bits,    U32,   	1652, [2:2], "No", "Yes"
	gppwm_gpPwm4BelowOrAboveMap= bits,    U32,   	1652, [3:3], "Below", "Above"
	gppwm_isGpPwm1Enabled	= bits,    U32,   	1652, [4:4], "false", "true"
	gppwm_isGpPwm2Enabled	= bits,    U32,   	1652, [5:5], "false", "true"
	gppwm_isGpPwm3Enabled	= bits,    U32,   	1652, [6:6], "false", "true"
	gppwm_isGpPwm4Enabled	= bits,    U32,   	1652, [7:7], "false", "true"
	gppwm_conditionGpPwm1Switch= bits,    U32,   	1652, [8:8], "No", "Yes"
	gppwm_conditionGpPwm1Rpm= bits,    U32,   	1652, [9:9], "No", "Yes"
	gppwm_gpPwm1BelowOrAboveRpm= bits,    U32,   	1652, [10:10], "Below", "Above"
	gppwm_conditionGpPwm1Clt= bits,    U32,   	1652, [11:11], "No", "Yes"
	gppwm_gpPwm1BelowOrAboveClt= bits,    U32,   	1652, [12:12], "Below", "Above"
	gppwm_conditionGpPwm1Tps= bits,    U32,   	1652, [13:13], "No", "Yes"
	gppwm_gpPwm1BelowOrAboveTps= bits,    U32,   	1652, [14:14], "Below", "Above"
	gppwm_conditionGpPwm1Map= bits,    U32,   	1652, [15:15], "No", "Yes"
	gppwm_gpPwm1BelowOrAboveMap= bits,    U32,   	1652, [16:16], "Below", "Above"
	gppwm_conditionGpPwm2Switch= bits,    U32,   	1652, [17:17], "No", "Yes"
	gppwm_conditionGpPwm2Rpm= bits,    U32,   	1652, [18:18], "No", "Yes"
	gppwm_gpPwm2BelowOrAboveRpm= bits,    U32,   	1652, [19:19], "Below", "Above"
	gppwm_conditionGpPwm2Clt= bits,    U32,   	1652, [20:20], "No", "Yes"
	gppwm_gpPwm2BelowOrAboveClt= bits,    U32,   	1652, [21:21], "Below", "Above"
	gppwm_conditionGpPwm2Tps= bits,    U32,   	1652, [22:22], "No", "Yes"
	gppwm_gpPwm2BelowOrAboveTps= bits,    U32,   	1652, [23:23], "Below", "Above"
	gppwm_conditionGpPwm2Map= bits,    U32,   	1652, [24:24], "No", "Yes"
	gppwm_gpPwm2BelowOrAboveMap= bits,    U32,   	1652, [25:25], "Below", "Above"
	gppwm_conditionGpPwm3Switch= bits,    U32,   	1652, [26:26], "No", "Yes"
	gppwm_conditionGpPwm3Rpm= bits,    U32,   	1652, [27:27], "No", "Yes"
	gppwm_gpPwm3BelowOrAboveRpm= bits,    U32,   	1652, [28:28], "Below", "Above"
	gppwm_conditionGpPwm3Clt= bits,    U32,   	1652, [29:29], "No", "Yes"
	gppwm_gpPwm3BelowOrAboveClt= bits,    U32,   	1652, [30:30], "Below", "Above"
	gppwm_conditionGpPwm3Tps= bits,    U32,   	1652, [31:31], "No", "Yes"
;no TS info - skipping gppwm_unused250 offset 1656
	gppwm_gpPwm3BelowOrAboveTps= bits,    U32,   	1660, [0:0], "Below", "Above"
	gppwm_conditionGpPwm3Map= bits,    U32,   	1660, [1:1], "No", "Yes"
	gppwm_gpPwm3BelowOrAboveMap= bits,    U32,   	1660, [2:2], "Below", "Above"
	gppwm_conditionGpPwm4Switch= bits,    U32,   	1660, [3:3], "No", "Yes"
	gppwm_conditionGpPwm4Rpm= bits,    U32,   	1660, [4:4], "No", "Yes"
	gppwm_gpPwm4BelowOrAboveRpm= bits,    U32,   	1660, [5:5], "Below", "Above"
	gppwm_conditionGpPwm4Clt= bits,    U32,   	1660, [6:6], "No", "Yes"
	gppwm_gpPwm4BelowOrAboveClt= bits,    U32,   	1660, [7:7], "Below", "Above"
	gppwm_unusedBit_41_8	= bits,    U32,   	1660, [8:8], "false", "true"
	gppwm_unusedBit_41_9	= bits,    U32,   	1660, [9:9], "false", "true"
	gppwm_unusedBit_41_10	= bits,    U32,   	1660, [10:10], "false", "true"
	gppwm_unusedBit_41_11	= bits,    U32,   	1660, [11:11], "false", "true"
	gppwm_unusedBit_41_12	= bits,    U32,   	1660, [12:12], "false", "true"
	gppwm_unusedBit_41_13	= bits,    U32,   	1660, [13:13], "false", "true"
	gppwm_unusedBit_41_14	= bits,    U32,   	1660, [14:14], "false", "true"
	gppwm_unusedBit_41_15	= bits,    U32,   	1660, [15:15], "false", "true"
	gppwm_unusedBit_41_16	= bits,    U32,   	1660, [16:16], "false", "true"
	gppwm_unusedBit_41_17	= bits,    U32,   	1660, [17:17], "false", "true"
	gppwm_unusedBit_41_18	= bits,    U32,   	1660, [18:18], "false", "true"
	gppwm_unusedBit_41_19	= bits,    U32,   	1660, [19:19], "false", "true"
	gppwm_unusedBit_41_20	= bits,    U32,   	1660, [20:20], "false", "true"
	gppwm_unusedBit_41_21	= bits,    U32,   	1660, [21:21], "false", "true"
	gppwm_unusedBit_41_22	= bits,    U32,   	1660, [22:22], "false", "true"
	gppwm_unusedBit_41_23	= bits,    U32,   	1660, [23:23], "false", "true"
	gppwm_unusedBit_41_24	= bits,    U32,   	1660, [24:24], "false", "true"
	gppwm_unusedBit_41_25	= bits,    U32,   	1660, [25:25], "false", "true"
	gppwm_unusedBit_41_26	= bits,    U32,   	1660, [26:26], "false", "true"
	gppwm_unusedBit_41_27	= bits,    U32,   	1660, [27:27], "false", "true"
	gppwm_unusedBit_41_28	= bits,    U32,   	1660, [28:28], "false", "true"
	gppwm_unusedBit_41_29	= bits,    U32,   	1660, [29:29], "false", "true"
	gppwm_unusedBit_41_30	= bits,    U32,   	1660, [30:30], "false", "true"
	gppwm_unusedBit_41_31	= bits,    U32,   	1660, [31:31], "false", "true"
	gppwm_enableGpPwm1AtRpm			= scalar, F32,	1664,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm2AtRpm			= scalar, F32,	1668,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm3AtRpm			= scalar, F32,	1672,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm4AtRpm			= scalar, F32,	1676,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm1AtClt			= scalar, F32,	1680,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm2AtClt			= scalar, F32,	1684,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm3AtClt			= scalar, F32,	1688,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm4AtClt			= scalar, F32,	1692,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm1AtTps			= scalar, F32,	1696,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm2AtTps			= scalar, F32,	1700,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm3AtTps			= scalar, F32,	1704,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm4AtTps			= scalar, F32,	1708,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm1AtMap			= scalar, F32,	1712,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm2AtMap			= scalar, F32,	1716,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm3AtMap			= scalar, F32,	1720,	"", 1, 0, 0, 8000.0, 0
	gppwm_enableGpPwm4AtMap			= scalar, F32,	1724,	"", 1, 0, 0, 8000.0, 0
	gppwm_gpPwm1Frequency			= scalar, S32,	1728,	"Hz", 1, 0, 0, 3000.0, 0
	gppwm_gpPwm2Frequency			= scalar, S32,	1732,	"Hz", 1, 0, 0, 3000.0, 0
	gppwm_gpPwm3Frequency			= scalar, S32,	1736,	"Hz", 1, 0, 0, 3000.0, 0
	gppwm_gpPwm4Frequency			= scalar, S32,	1740,	"Hz", 1, 0, 0, 3000.0, 0
	timing_offset_cylinder1		 = scalar, F32, 1744, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder2		 = scalar, F32, 1748, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder3		 = scalar, F32, 1752, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder4		 = scalar, F32, 1756, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder5		 = scalar, F32, 1760, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder6		 = scalar, F32, 1764, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder7		 = scalar, F32, 1768, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder8		 = scalar, F32, 1772, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder9		 = scalar, F32, 1776, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder10	 = scalar, F32, 1780, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder11	 = scalar, F32, 1784, "Val", 1, 0, -20000000, 20000000, 1
	timing_offset_cylinder12	 = scalar, F32, 1788, "Val", 1, 0, -20000000, 20000000, 1
	baroSensor_lowValue				= scalar, F32,	1792,	"kpa", 1, 0, -400, 800, 2
	baroSensor_highValue			= scalar, F32,	1796,	"kpa", 1, 0, -400, 800, 2
	baroSensor_type				 = bits, U32, 1800, [0:7] "Custom Values", "MPX 4100", "MPX 4115", "MPX 4250", "MPX 4250A", "MPX 5700", "MPX H6300", "MPX 6400", "Gm 1 Bar", "Gm 2 Bar", "Gm 3 Bar", "Bosch 3 Bar TMAP", "Vag 250kPa", "Denso 079800", "DENSO 183", "Honda 3Bar", "Dodge Neon", "Toyota 89420 02010", "Subaru Denso", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	baroSensor_hwChannel		 = bits, U08, 1804, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping baroSensor_alignmentFill_at_13 offset 1805
	clt_tempC_1						= scalar, F32,	1808,	"*C", 1, 0, -40, 200, 1
	clt_tempC_2						= scalar, F32,	1812,	"*C", 1, 0, -40, 200, 1
	clt_tempC_3						= scalar, F32,	1816,	"*C", 1, 0, -40, 200, 1
	clt_resistance_1				= scalar, F32,	1820,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_2				= scalar, F32,	1824,	"Ohm", 1, 0, 0, 200000, 1
	clt_resistance_3				= scalar, F32,	1828,	"Ohm", 1, 0, 0, 200000, 1
	clt_bias_resistor				= scalar, F32,	1832,	"Ohm", 1, 0, 0, 200000, 1
	clt_adcChannel				 = bits, U08, 1836, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping clt_alignmentFill_at_29 offset 1837
	iat_tempC_1						= scalar, F32,	1840,	"*C", 1, 0, -40, 200, 1
	iat_tempC_2						= scalar, F32,	1844,	"*C", 1, 0, -40, 200, 1
	iat_tempC_3						= scalar, F32,	1848,	"*C", 1, 0, -40, 200, 1
	iat_resistance_1				= scalar, F32,	1852,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_2				= scalar, F32,	1856,	"Ohm", 1, 0, 0, 200000, 1
	iat_resistance_3				= scalar, F32,	1860,	"Ohm", 1, 0, 0, 200000, 1
	iat_bias_resistor				= scalar, F32,	1864,	"Ohm", 1, 0, 0, 200000, 1
	iat_adcChannel				 = bits, U08, 1868, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping iat_alignmentFill_at_29 offset 1869
	oilPressure_hwChannel		 = bits, U08, 1872, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping oilPressure_align offset 1873
	oilPressure_v1					= scalar, F32,	1876,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value1				= scalar, F32,	1880,	 "kPa", 1, 0.0, 0, 1000.0, 2
	oilPressure_v2					= scalar, F32,	1884,	 "volts", 1, 0.0, 0, 10.0, 2
	oilPressure_value2				= scalar, F32,	1888,	 "kPa", 1, 0.0, 0, 1000.0, 2
	map_sensor_lowValue				= scalar, F32,	1892,	"kpa", 1, 0, -400, 800, 2
	map_sensor_highValue			= scalar, F32,	1896,	"kpa", 1, 0, -400, 800, 2
	map_sensor_type				 = bits, U32, 1900, [0:7] "Custom Values", "MPX 4100", "MPX 4115", "MPX 4250", "MPX 4250A", "MPX 5700", "MPX H6300", "MPX 6400", "Gm 1 Bar", "Gm 2 Bar", "Gm 3 Bar", "Bosch 3 Bar TMAP", "Vag 250kPa", "Denso 079800", "DENSO 183", "Honda 3Bar", "Dodge Neon", "Toyota 89420 02010", "Subaru Denso", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
	map_sensor_hwChannel		 = bits, U08, 1904, [0:4] "Vbat","UR Wideband Sensor","UA Wideband Sensor","An Temp 1","Throttle Pedal Sub","Throttle Pedal Main","AN Volt 4","Maf Sensor","Intake Air Temp","TPS Sub","AN Volt 1","AN Volt 3","Map Sensor","Coolant Temp","AN Volt 2","TPS Main","NONE","INVALID","INVALID","INVALID"
;no TS info - skipping map_sensor_alignmentFill_at_13 offset 1905
	injector_flow					= scalar, F32,	1908,	"cm3/min", 1, 0, 0, 99999, 2
	injector_battLagCorrBins		= array, F32,	1912,	[8],	"volts", 1, 0, 0.0, 20.0, 2
	injector_battLagCorr			= array, F32,	1944,	[8],	"ms", 1, 0, 0.0, 50.0, 2
	mapsampling_samplingAngleBins		= array, F32,	1976,	[8],	"", 1, 0, 0.0, 18000, 2
	mapsampling_samplingAngle		= array, F32,	2008,	[8],	"deg", 1, 0, -720, 720, 2
	mapsampling_samplingWindowBins		= array, F32,	2040,	[8],	"", 1, 0, 0.0, 18000, 2
	mapsampling_samplingWindow		= array, F32,	2072,	[8],	"deg", 1, 0, -720, 720, 2
	baroCorrTable				 = array, F32, 2104, [4x4],"ratio", 1, 0, 0, 2.0, 2
	baroCorrPressureBins			= array, F32,	2168,	[4],	"kPa", 1, 0, 0.0, 200, 2
	baroCorrRpmBins					= array, F32,	2184,	[4],	"RPM", 1, 0, 0.0, 18000, 2
	cltTimingBins					= array, F32,	2200,	[8],	"C", 1, 0, -100.0, 250.0, 1
	cltTimingExtra					= array, F32,	2232,	[8],	"degree", 1, 0, -400.0, 400.0, 0
	sparkDwellRpmBins				= array, F32,	2264,	[8],	"RPM", 1, 0.0, 0.0, 18000, 2
	sparkDwellValues				= array, F32,	2296,	[8],	"ms", 1, 0.0, 0.0, 30.0, 2
	cltIdleRpmBins					= array, F32,	2328,	[16],	"C", 1, 0, -100.0, 250.0, 2
	cltIdleRpm						= array, F32,	2392,	[16],	"", 1, 0, 0.0, 8000.0, 0
	crankingAdvanceBins				= array, F32,	2456,	[4],	"RPM", 1, 0, 0.0, 18000, 2
	crankingAdvance					= array, F32,	2472,	[4],	"deg", 1, 0, -20, 90, 2
	narrowToWideOxygenBins			= array, F32,	2488,	[8],	"V", 1, 0, -10.0, 10.0, 3
	narrowToWideOxygen				= array, F32,	2520,	[8],	"ratio", 1, 0, -40.0, 40.0, 2
	knockNoise						= array, F32,	2552,	[8],	"v", 1, 0, 0.0, 10, 2
	knockNoiseRpmBins				= array, F32,	2584,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	crankingTpsCoef					= array, F32,	2616,	[8],	"Ratio", 100, 0, 0.0, 700.0, 0
	crankingTpsBins					= array, F32,	2648,	[8],	"%", 1, 0, 0.0, 100.0, 2
	iacCoastingBins					= array, F32,	2680,	[16],	"C", 1, 0, -100.0, 250.0, 2
	iacCoasting						= array, F32,	2744,	[16],	"%", 1, 0, 0.0, 100.0, 2
	mapAccelTaperBins				= array, F32,	2808,	[8],	"counter", 1, 0, 0.0, 300, 0
	mapAccelTaperMult				= array, F32,	2840,	[8],	"mult", 1, 0, 0.0, 300, 2
	etbBiasBins						= array, F32,	2872,	[6],	"target TPS position", 1, 0.0, 0, 100.0, 1
	etbBiasValues					= array, F32,	2896,	[6],	"ETB duty cycle bias", 1, 0.0, -100, 100.0, 2
;no TS info - skipping mainUnuse offset 2920
	iacPidMultTable				 = array, U08, 4060, [8x8],"%", 1, 0, 0, 999, 2
	iacPidMultLoadBins				= array, U08,	4124,	[8],	"Load", 1, 0.0, 0, 500.0, 2
	iacPidMultRpmBins				= array, U08,	4132,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
;no TS info - skipping mainUnusedEnd offset 4140
;no TS info - skipping freeSpaceForCurves offset 4444
	timingMultiplier			 = string, ASCII, 8312, 200
	timingAdditive				 = string, ASCII, 8512, 200
	cltCrankingCorrBins				= array, F32,	8712,	[8],	"C", 1, 0, -100.0, 250.0, 2
	cltCrankingCorr					= array, F32,	8744,	[8],	"%", 100, 0, 0.0, 500.0, 0
	idleAdvanceBins					= array, F32,	8776,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleAdvance						= array, F32,	8808,	[8],	"deg", 1, 0, -20, 90, 2
	idleVeBins						= array, F32,	8840,	[8],	"RPM", 1, 0, 0.0, 18000, 2
	idleVe							= array, F32,	8872,	[8],	,"%", 1, 0, 0, 999.0, 2
	cltFuelCorrBins					= array, F32,	8904,	[16],	"C", 1, 0, -100.0, 250.0, 0
	cltFuelCorr						= array, F32,	8968,	[16],	"% Trim", 100, -1, -100, 500, 1
	iatFuelCorrBins					= array, F32,	9032,	[16],	"C", 1, 0, -100.0, 250.0, 0
	iatFuelCorr						= array, F32,	9096,	[16],	"% Trim", 100, -1, -100, 400, 1
	crankingFuelCoef				= array, F32,	9160,	[8],	"%", 100, -1, -100, 400, 1
	crankingFuelBins				= array, F32,	9192,	[8],	"C", 1, 0, -80.0, 170.0, 0
	crankingCycleCoef				= array, F32,	9224,	[8],	"%", 100, -1, -100, 400, 1
	crankingCycleBins				= array, F32,	9256,	[8],	"counter", 1, 0, -80.0, 170.0, 0
	cltIdleCorrBins					= array, F32,	9288,	[16],	"C", 1, 0, -100.0, 250.0, 1
	cltIdleCorr						= array, F32,	9352,	[16],	"percent", 100, 0, 0.0, 400, 0
	mafDecoding						= array, F32,	9416,	[32],	"kg/hour", 1, 0, -500.0, 4000.0, 2
	mafDecodingBins					= array, F32,	9544,	[32],	 "V", 1, 0, -5.0, 150.0, 2
	afterstartHoldTimeBins			= array, F32,	9672,	[8],	"C", 1, 0, -100.0, 250.0, 0
	afterstartHoldTime				= array, F32,	9704,	[8],	"Seconds", 1, 0, 0, 100, 1
	afterstartDecayTimeBins			= array, F32,	9736,	[8],	"C", 1, 0, -100.0, 250.0, 0
	afterstartDecayTime				= array, F32,	9768,	[8],	"Seconds", 1, 0, 0, 100, 1
	afterstartEnrichBins			= array, F32,	9800,	[8],	"C", 1, 0, -100.0, 250.0, 0
	afterstartEnrich				= array, F32,	9832,	[8],	"%", 100, -1, 0, 600, 1
;no TS info - skipping freeSpaceForTables offset 9864
	gpPwmTable1					 = array, U08, 12664, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	gpPwm1LoadBins					= array, U08,	12728,	[8],	{ bitStringValue(algorithmUnits , gpPwm1Load) }, 1, 0, 0, 600.0, 1
	gpPwm1RpmBins					= array, U08,	12736,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gpPwmTable2					 = array, U08, 12744, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	gpPwm2LoadBins					= array, U08,	12808,	[8],	{ bitStringValue(algorithmUnits , gpPwm2Load) }, 1, 0, 0, 600.0, 1
	gpPwm2RpmBins					= array, U08,	12816,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gpPwmTable3					 = array, U08, 12824, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	gpPwm3LoadBins					= array, U08,	12888,	[8],	{ bitStringValue(algorithmUnits , gpPwm3Load) }, 1, 0, 0, 600.0, 1
	gpPwm3RpmBins					= array, U08,	12896,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	gpPwmTable4					 = array, U08, 12904, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	gpPwm4LoadBins					= array, U08,	12968,	[8],	{ bitStringValue(algorithmUnits , gpPwm4Load) }, 1, 0, 0, 600.0, 1
	gpPwm4RpmBins					= array, U08,	12976,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	vvtTable1					 = array, F32, 12984, [8x8], { bitStringValue(vvtLoadUnits , vvtLoadAxis) }, 1, 0, -720, 720, 1
	vvtLoadBins						= array, F32,	13240,	[8],	"Load", 1, 0, 0, 500.0, 2
	vvtRpmBins						= array, F32,	13272,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	boostTableOpenLoop			 = array, U08, 13304, [8x8],"", 2, 0 , 0, 3000, 0
	boostMapBins					= array, U08,	13368,	[8],	"", 2, 0, 0, 600.0, 1
	boostRpmBins					= array, U08,	13376,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	boostTableClosedLoop		 = array, U08, 13384, [8x8],"", 2, 0 , 0, 3000, 0
	boostTpsBins					= array, U08,	13448,	[8],	"%", 2, 0.0, 0, 100.0, 2
	pedalToTpsTable				 = array, U08, 13456, [8x8],"deg", 1, 0, -720, 720, 2
	pedalToTpsPedalBins				= array, U08,	13520,	[8],	"%", 1, 0, 0.0, 120.0, 0
	pedalToTpsRpmBins				= array, U08,	13528,	[8],	"RPM", 50, 0, 0.0, 12000.0, 0
	ignitionIatCorrTable		 = array, F32, 13536, [16x16],"deg", 1, 0, -720, 720, 2
	ignitionIatCorrLoadBins			= array, F32,	14560,	[16],	"Temperature", 1, 0.0, 0, 500.0, 1
	ignitionIatCorrRpmBins			= array, F32,	14624,	[16],	"RPM", 1, 0.0, 0, 18000.0, 1
	injectionPhase				 = array, F32, 14688, [16x16],"deg", 1, 0, -720, 720, 2
	injPhaseLoadBins				= array, F32,	15712,	[16],	"Load", 1, 0.0, 0, 500.0, 2
	injPhaseRpmBins					= array, F32,	15776,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	fuelTable					 = array, F32, 15840, [16x16],"ms", 1, 0, 0.0, 500.0, 2
	fuelLoadBins					= array, F32,	16864,	[16],	"V", 1, 0, 0.0, 500.0, 2
	fuelRpmBins						= array, F32,	16928,	[16],	"RPM", 1, 0, 0.0, 25500.0, 2
	fuel2Table					 = array, F32, 16992, [16x16],"ms", 1, 0, 0.0, 500.0, 2
	fuel2LoadBins					= array, F32,	18016,	[16],	"kPa", 1, 0.0, 0, 500.0, 2
	fuel2RpmBins					= array, F32,	18080,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	ignitionTable				 = array, F32, 18144, [16x16],"deg", 1, 0, -20, 90, 2
	ignitionLoadBins				= array, F32,	19168,	[16],	"Load", 1, 0.0, 0, 500.0, 2
	ignitionRpmBins					= array, F32,	19232,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	afrTable					 = array, U08, 19296, [16x16],"deg", 0.1, 0, 0, 25.0, 1
	afrLoadBins						= array, F32,	19552,	[16],	"", 1, 0.0, 0, 500.0, 2
	afrRpmBins						= array, F32,	19616,	[16],	"RPM", 1, 0.0, 0, 18000.0, 2
	tpsTpsAccelTable			 = array, F32, 19680, [8x8],"value", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelFromRpmBins			= array, F32,	19936,	[8],	"from", 1, 0, 0.0, 30000.0, 2
	tpsTpsAccelToRpmBins			= array, F32,	19968,	[8],	"to", 1, 0, 0.0, 25500.0, 2
; total TS size = 20000
[SettingContextHelp]
	fuelAlgorithm = "This setting controls which fuel quantity control algorithm is used.\nSee also useTPSAdvanceTable\nset algorithm X"
	cranking_baseFuel = "Base duration of the fuel injection during cranking, this is modified by the multipliers for CLT, IAT, TPS ect, to give the final cranking pulse width."
	cranking_rpm = "This sets the RPM limit below which the ECU will use cranking fuel and ignition logic, typically this is around 350-450rpm. \nset cranking_rpm X"
	crankingInjectionMode = "This is the injection strategy during engine start. See Fuel/Injection settings for more detail. It is suggested to use "Simultaneous"."
	injectionMode = "This is where the fuel injection type is defined: "Simultaneous" means all injectors will fire together at once. "Sequential" fires the injectors on a per cylinder basis, which requires individually wired injectors. "Batched" will fire the injectors in groups. If your injectors are individually wired you will also need to enable "Two wire batch emulation". \nset injection_mode X\nSee also twoWireBatchInjection"
	auxTempSensor1_bias_resistor = "Pull-up resistor value on your board"
	auxTempSensor2_bias_resistor = "Pull-up resistor value on your board"
	ambiguousOperationMode = "'Some triggers could be mounted differently. Most well-known triggers imply specific sensor setup. 4 stroke with symmetrical crank' is a pretty special case for example on Miata NB2\nSee engineCycle\nset operation_mode X"
	timingMode = "Dynamic uses the timing map to decide the ignition timing, Static timing fixes the timing to the value set below (only use for checking static timing)."
	ignitionMode = ""One Coil" is for use on distributed ignition system. "Individual Coils" is to be used when you have one coil per cylinder (COP or similar). "Wasted" means one coil is driving two spark plugs in two cylinders, with one of the sparks not doing anything since it's happening on the exhaust cycle\nset ignition_mode X"
	debugMode = "See http://rusefi.com/s/debugmode\n\nset debug_mode X"
	throttlePedalPositionAdcChannel = "Electronic throttle pedal position input\nFirst channel\nSee also tps1_1AdcChannel"
	tps1_1AdcChannel = "First throttle body, first sensor. See also pedalPositionAdcChannel"
	tps1_2AdcChannel = "First throttle body, second sensor."
	tps2_2AdcChannel = "Second throttle body, second sensor."
	throttlePedalPositionSecondAdcChannel = "Electronic throttle pedal position input\nSecond channel\nSee also tps1_1AdcChannel"
	vbattAdcChannel = "This is the processor input pin that the battery voltage circuit is connected to, if you are unsure of what pin to use, check the schematic that corresponds to your PCB."
	fuelLevelSensor = "This is the processor pin that your fuel level sensor in connected to. This is a non standard input so will need to be user defined."
	tps2_1AdcChannel = "Second throttle body position sensor, single channel so far"
	mafAdcChannel = "See hasMafSensor"
	cj125ua = "lambda input"
	cj125ur = "heater input"
	acSwitchAdc = "A/C button input handled as analogue input"
	auxFastSensor1_adcChannel = "Useful in Research&Development phase"
	dizzySparkOutputPin = "This implementation makes a pulse every time one of the coils is charged, using coil dwell for pulse width. See also tachOutputPin"
	secondSolenoidPin = "Some Subaru and some Mazda use double-solenoid idle air valve"
	triggerErrorPin = "This pin is used for debugging - snap a logic analyzer on it and see if it's ever high"
	o2heaterPin = "Narrow band o2 heater, not used for CJ125. See wboHeaterPin"
	malfunctionIndicatorPin = "Check engine light, also malfunction indicator light. Always blinks once on boot."
	tachOutputPin = "This implementation produces one pulse per engine cycle. See also dizzySparkOutputPin."
	camInputs1 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	camInputs2 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	camInputs3 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	camInputs4 = "Camshaft input could be used either just for engine phase detection if your trigger shape does not include cam sensor as 'primary' channel, or it could be used for Variable Valve timing on one of the camshafts.\nTODO #660"
	clutchUpPin = "Some vehicles have a switch to indicate that clutch pedal is all the way up"
	clutchDownPin = "some cars have a switch to indicate that clutch pedal is all the way down"
	unused82 = "Throttle Pedal not pressed switch"
	brakePedalPin = "Brake pedal switch"
	directSelfStimulation = "Should trigger emulator push data right into trigger handling logic, eliminating the need for physical jumper wires?\nSee also triggerSimulatorPins\nPS: Funny name, right? :)"
	cj125isUrDivided = "looks like 3v range should be enough, divider not needed"
	absoluteFuelPressure = "If your fuel regulator does not have vacuum line"
	vvtCamSensorUseRise = "Use rise or fall signal front"
	measureMapOnlyInOneCylinder = "Useful for individual intakes"
	isFasterEngineSpinUpEnabled = "Smarter cranking logic."
	coastingFuelCutEnabled = "This setting disables fuel injection while the engine is in overrun, this is useful as a fuel saving measure and to prevent back firing."
	useIacTableForCoasting = "This setting allows the ECU to open the IAC during overrun conditions to help reduce engine breaking, this can be helpful for large engines in light weight cars."
	useETBforIdleControl = "This setting allows the ETB to act as the idle air control valve and move to regulate the airflow at idle."
	useStepperIdle = "This setting should only be used if you have a stepper motor idle valve and a stepper motor driver installed."
	useOnlyFirstChannel = "This option could be used if your second trigger channel is broken"
	isInjectionEnabled = "Enable fuel injection - This is default off for new projects as a safety feature, set to "true" to enable fuel injection and further injector settings."
	isIgnitionEnabled = "Enable ignition - This is default off for new projects as a safety feature, set to "true" to enable ignition and further ignition settings."
	isCylinderCleanupEnabled = "When enabled if TPS is held above 95% no fuel is injected while cranking to clear excess fuel from the cylinders."
	fuelClosedLoopCorrectionEnabled = "Enables lambda sensor closed loop feedback for fuelling."
	useConstantDwellDuringCranking = "If set to true, will use the specified duration for cranking dwell. If set to false, will use the specified dwell angle. Unless you have a really good reason to, leave this set to true to use duration mode."
	isEngineChartEnabled = "This options enables data for 'engine sniffer' tab in console, which comes at some CPU price"
	silentTriggerError = "Sometimes we have a performance issue while printing error"
	isAlternatorControlEnabled = "This enables smart alternator control and activates the extra alternator settings."
	invertPrimaryTriggerSignal = "This setting flips the signal from the primary engine speed sensor."
	invertSecondaryTriggerSignal = "This setting flips the signal from the secondary engine speed sensor."
	overrideCrankingIacSetting = "This setting overrides the normal multiplication values that have been set for the idle air control valve during cranking. If this setting is enabled the "IAC multiplier" table in the Cranking settings tab needs to be adjusted appropriately or potentially no IAC opening will occur."
	useSeparateAdvanceForIdle = "This activates a separate ignition timing table for idle conditions, this can help idle stability by using ignition retard and advance either side of the desired idle speed. Extra retard at low idle speeds will prevent stalling and extra advance at high idle speeds can help reduce engine power and slow the idle speed."
	useSeparateVeForIdle = "This activates a separate fuel table for Idle, this allows fine tuning of the idle fuelling."
	isManualSpinningMode = "Usually if we have no trigger events that means engine is stopped\nUnless we are troubleshooting and spinning the engine by hand - this case a longer\ndelay is needed"
	twoWireBatchInjection = "This is needed if your coils are individually wired and you wish to use batch injection.\nenable two_wire_batch_injection"
	useOnlyRisingEdgeForTrigger = "VR sensors are only precise on rising front\nenable trigger_only_front"
	twoWireBatchIgnition = "This is needed if your coils are individually wired (COP) and you wish to use batch ignition (wasted spark)."
	useSeparateAdvanceForCranking = "This activates a separate advance table for cranking conditions, this allows cranking advance to be RPM dependant."
	useAdvanceCorrectionsForCranking = "This enables the various ignition corrections during cranking (IAT, CLT, FSIO and PID idle)."
	useTPSAdvanceTable = "This flag allows to use TPS for ignition lookup while in Speed Density Fuel Mode"
	useIacPidMultTable = "This flag allows to use a special 'PID Multiplier' table (0.0-1.0) to compensate for nonlinear nature of IAC-RPM controller"
	launchSmoothRetard = "Interpolates the Ignition Retard from 0 to 100% within the RPM Range"
	launchSparkCutEnable = "This is the Cut Mode normally used"
	sensorSnifferRpmThreshold = "Disable sensor sniffer above this rpm"
	triggerSimulatorFrequency = "Same RPM is used for two ways of producing simulated RPM. See also triggerSimulatorPins (with wires)\nSee also directSelfStimulation (no wires, bypassing input hardware)\nrpm X"
	launchSpeedTreshold = "Disabled above this speed"
	antiLagRpmTreshold = "Disabled below this rpm"
	launchTimingRpmRange = "Range from Launch Rpm for Timing Retard to activate"
	launchFuelAdded = "Extra Fuel Added"
	launchBoostDuty = "Duty Cycle for the Boost Solenoid"
	hardCutRpmRange = "RPM Range for Hard Cut"
	antilagTimeout = "Time in Seconds"
	launchActivateDelay = "Time in Seconds"
	mapAveragingSchedulingAtIndex = "At what trigger index should some MAP-related math be executed? This is a performance trick to reduce load on synchronization trigger callback."
	ignMathCalculateAtIndex = "At what trigger index should some ignition-related math be executed? This is a performance trick to reduce load on synchronization trigger callback."
	tachPulseTriggerIndex = "Trigger cycle index at which we start tach pulse (performance consideration)"
	crankingIACposition = "This is the IAC position during cranking, some engines start better if given more air during cranking to improve cylinder filling."
	tpsAccelLength = "This is the number of engine cycles that the TPS position change can occur over, a longer duration will make the enrichment more active but too long may affect steady state driving, a good default is 30-60 cycles. "
	tpsErrorDetectionTooLow = "TPS error detection, what TPS % value is unrealistically low"
	tpsErrorDetectionTooHigh = "TPS error detection, what TPS % value is unrealistically high"
	sdCardPeriodMs = "SD card logging period, in milliseconds"
	idlePidRpmUpperLimit = "Relative to the target idle RPM"
	primeInjFalloffTemperature = "This sets the temperature above which no priming pulse is used, The value at -40 is reduced until there is no more priming injection at this temperature."
	startUpFuelPumpDuration = "on ECU start turn fuel pump on to build fuel pressure"
	afterCrankingIACtaperDuration = "This is the duration in cycles that the IAC will take to reach its normal idle position, it can be used to hold the idle higher for a few seconds after cranking to improve startup."
	iacByTpsTaper = "Extra IAC, in percent between 0 and 100, tapered between zero and idle deactivation TPS value"
	idleTimingPidWorkZone = "When the current RPM is closer than this value to the target, closed-loop idle timing control is enabled."
	idleTimingPidDeadZone = "If the RPM closer to target than this value, disable timing correction to prevent oscillation"
	idlePidFalloffDeltaRpm = "Taper out idle timing control over this range as the engine leaves idle conditions"
	coastingFuelCutRpmHigh = "This sets the RPM limit above which the fuel cut is deactivated, activating this maintains fuel flow at high RPM to help cool pistons"
	coastingFuelCutRpmLow = "This sets the RPM limit below which the fuel cut is deactivated, this prevents jerking or issues transitioning to idle"
	coastingFuelCutTps = "percent between 0 and 100 below which the fuel cut is deactivated, this helps low speed drivability."
	coastingFuelCutClt = "Fuel cutoff is deactivated below this coolant threshold."
	pidExtraForLowRpm = "Increases PID reaction for RPM<target by adding extra percent to PID-error"
	coastingFuelCutMap = "MAP value above which fuel injection is re-enabled."
	tpsAccelFractionPeriod = "A delay in cycles between fuel-enrich. portions"
	extraInjectionOffset = "this is about deciding when the injector starts it's squirt\nSee also injectionPhase map\ntodo: do we need even need this since we have the map anyway?"
	crankingTimingAngle = "Ignition advance angle used during engine cranking, 5-10 degrees will work as a base setting for most engines.\nset cranking_timing_angle X"
	ignitionOffset = "this value could be used to offset the whole ignition timing table by a constant"
	fixedModeTiming = "This value is the ignition timing used when in 'fixed timing' mode, i.e. constant timing\nThis mode is useful when adjusting distributor location."
	globalTriggerAngleOffset = "Angle between Top Dead Center (TDC) and the first trigger event.\nKnowing this angle allows us to control timing and other angles in reference to TDC.\nset global_trigger_offset_angle X"
	cylinderBore = "Cylinder diameter, in mm."
	crankingChargeAngle = "While cranking (which causes battery voltage to drop) we can calculate dwell time in shaft\ndegrees, not in absolute time as in running mode.\nset cranking_charge_angle X"
	knockBandCustom = "We calculate knock band based of cylinderBore\n Use this to override - kHz knock band override"
	analogInputDividerCoefficient = "Coefficient of input voltage dividers on your PCB"
	vbattDividerCoeff = "This is the ratio of the resistors for the battery voltage, measure the voltage at the battery and then adjust this number until the gauge matches the reading."
	fanOnTemperature = "Cooling fan turn-on temperature threshold, in Celsius"
	fanOffTemperature = "Cooling fan turn-off temperature threshold, in Celsius"
	vehicleSpeedCoef = "This coefficient translates vehicle speed input frequency (in Hz) into vehicle speed, km/h"
	wwaeTau = "Length of time the deposited wall fuel takes to dissipate after the start of acceleration. "
	targetVBatt = "This is the target battery voltage the alternator PID control will attempt to maintain"
	alternatorOffAboveTps = "Turns off alternator output above specified TPS, enabling this reduced parasitic drag on the engine at full load."
	startOfCrankingPrimingPulse = "Prime pulse for cold engine, duration in ms\nLinear interpolation between -40F/-40C and fallout temperature."
	tpsAccelEnrichmentThreshold = "Maximum change delta of TPS percentage over the 'length'. Actual TPS change has to be above this value in order for TPS/TPS acceleration to kick in."
	vvtOffset = "Angle between cam sensor and VVT zero position\nset vvt_offset X"
	slowAdcAlpha = "ExpAverage alpha coefficient"
	wwaeBeta = "0 = No fuel settling on port walls 1 = All the fuel settling on port walls setting this to 0 disables the wall wetting enrichment. "
	throttlePedalWOTVoltage = "Pedal in the floor"
	tpsAccelFractionDivisor = "A fraction divisor: 1 or less = entire portion at once, or split into diminishing fractions"
	triggerCompCenterVolt = "Trigger comparator center point voltage"
	triggerCompHystMin = "Trigger comparator hysteresis voltage (Min)"
	triggerCompHystMax = "Trigger comparator hysteresis voltage (Max)"
	triggerCompSensorSatRpm = "VR-sensor saturation RPM"
	clt_bias_resistor = "Pull-up resistor value on your board"
	iat_bias_resistor = "Pull-up resistor value on your board"
	injector_flow = "This is your injector flow at the fuel pressure used in the vehicle. cc/min, cubic centimetre per minute\nBy the way, g/s = 0.125997881 * (lb/hr)\ng/s = 0.125997881 * (cc/min)/10.5\ng/s = 0.0119997981 * cc/min"
	crankingAdvanceBins = "Optional timing advance table for Cranking (see useSeparateAdvanceForCranking)"
	crankingAdvance = "Optional timing advance table for Cranking (see useSeparateAdvanceForCranking)"


; CONFIG_DEFINITION_END
	idleRpmPid_offset = "Constant base value"
	idleRpmPid_periodMs = "PID recalculation period"
	

[Tuning]
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   gaugeColumns = 1 ; Only 1 or 2 are valid.

   pageButtons  = "&EGO"
   gauge1       = RPMGauge	
   gauge2       = afr1Gauge
   gauge3		= MAPGauge
   gauge4		= veValueGauge


[LoggerDefinition]
  ; valid logger types: composite, tooth, trigger, csv
  loggerDef = compositeLogger, "Primary Trigger Logger", tooth
        startCommand = "l\x01"
        stopCommand  = "l\x02"
        dataReadCommand = "L"
        dataReadTimeout = 10000 ; time in ms
        dataReadyCondition = { toothLogReady }

       ; recordDef = headerLen, footerLen, recordLen
       recordDef =   0,   0,   2; in bytes, the recordLen is for each record, currently limited to 4 bytes

       ; uint16 that stores 1/100 second
       recordField = toothTime, "tooth", 0, 16, 0.01, "ms"


[VeAnalyze]

        ;    tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition
#if tuneByMAF
       veAnalyzeMap = fuelTableMAFTbl, afrTableTbl, AFRValue, egoCorrection, { 1 }
#else
       veAnalyzeMap = fuelTableTbl, afrTableTbl, AFRValue, egoCorrection, { 1 }
#endif
       lambdaTargetTables = afrTableTbl, afrTSCustom

       ; filter =  Name,        "DisplayName", outputChannel, operator, defaultVal, userAdjustable
        filter = minRPMFilter, "Minimum RPM", RPMValue,           <       , 500,      , true

#if CELSIUS
         filter = minCltFilter, "Minimum CLT", coolant,       <       , 60,       , true
#else
         filter = minCltFilter, "Minimum CLT", coolant,       <       , 160,      , true
#endif

         filter = deltaTps, "dTPS", deltaTps       >       , 50,      , true

		filter = VBatt, "VBatt", VBatt       <       , 12,      , true

         filter = minTps, "Minimum TPS", TPSValue,       <       , 1,       , true


;[VeAnalyze]
;       fuelAnalyzeMap = fuelTableTbl, afrTableTbl, AFRValue, egoCorrection , { 1 }
;        filter = minRPMFilter, "Minimum RPM", RPMValue,           <       , 500,      , true



[OutputChannels]

fileVersion = { 20191221 }

   ochGetCommand    = "O%2o%2c"

; see TS_OUTPUT_SIZE in console source code
   ochBlockSize     = 340

;
; see TunerStudioOutputChannels struct
;

; Bit flags
	hasSdCard                    = bits,    U32,      0,    [0:0], "true", "false";
	isIgnitionEnabledIndicator   =bits,U32, 0,    [1:1], "true", "false";
	ind_injection_enabled        =bits,U32,      0,    [2:2], "true", "false";
	isCylinderCleanupEnabled     =bits,U32,   0,    [3:3], "true", "false";
	  
	isCylinderCleanupActivated   =bits,U32, 0,    [4:4], "true", "false";
	ind_fuel_pump                = bits,    U32,      0,    [5:5], "true", "false";
	ind_fan                      = bits,    U32,      0,    [6:6], "true", "false";
	ind_o2_heater                = bits,    U32,      0,    [7:7], "true", "false";
    ind_check_engine             = bits,    U32,      0,    [8:8], "true", "false";
      
    needBurn                     = bits,    U32,      0,    [9:9], "true", "false";
    ind_2nd_trigger_en           =bits,   U32,      0,  [10:10], "true", "false";
    clutchUpState                =bits,    U32,      0,  [11:11], "true", "false";
    clutchDownState              =bits,    U32,      0,  [12:12], "true", "false";
    knockEverIndicator           =bits,   U32,      0,  [13:13], "true", "false";
    knockNowIndicator            =bits,    U32,      0,  [14:14], "true", "false";
    brakePedalIndicator          =bits,  U32,      0,  [15:15], "true", "false";
    toothLogReady                =bits,  U32,      0,  [16:16], "true", "false";
    acSwitchIndicator            =bits,   U32,      0,  [17:17], "true", "false";
    ind_tps_error                = bits,    U32,      0,  [18:18], "true", "false";
    ind_clt_error                = bits,    U32,      0,  [19:19], "true", "false";
    ind_map_error                = bits,    U32,      0,  [20:20], "true", "false";
    ind_iat_error                = bits,    U32,      0,  [21:21], "true", "false";
	dbwSystemError                = bits,    U32,      0,  [22:22], "true", "false";
    ind_isTriggerError           = bits, U32,      0,  [23:23], "true", "false";
    ind_hasFatalError            = bits,    U32,      0,  [24:24], "true", "false";
	ind_isWarnNow                = bits,    U32,      0,  [25:25], "true", "false";
    launchTriggered              = bits,    U32,      0,  [26:26], "true", "false";
	rpmHardCut                   = bits,    U32,      0,  [27:27], "true", "false";

; RPM, vss
    RPMValue                     = scalar,  U16,      4,      "RPM",    1,   0.00000
    rpmAcceleration              = scalar,  S16,      6,     "dRpm",{1/100},         0
    speedToRpmRatio              = scalar,  S16,      8,    "value",{1/100},         0
    vehicleSpeedKph              = scalar,  U08,     10,      "kph",    1,       0.0

; temperatures
    internalMcuTemperature       = scalar,S08, 11,    "deg C",    1,         0
#if CELSIUS
    coolant                      = scalar,  S16,     12,    "deg C",{1/100},       0.0
#else
    coolant                      = scalar,  S16,     12,  "deg F",{9/(5 * 100)},  17.77777
#endif
#if CELSIUS
    intake                       = scalar,  S16,     14,    "deg C",{1/100},       0.0
#else
    intake                       = scalar,  S16,     14,  "deg F",{9/(5 * 100)},  17.77777
#endif
; todo: aux1
; todo: aux2
      

; throttle, pedal
    TPSValue                     = scalar,  S16,     20,        "%",{1/100},         0
    throttlePedalPosition        = scalar,S16, 22,        "%",{1/100},         0
    tpsADC                       = scalar,  U16,     24,      "ADC",    1,       0.0;

; air flow/mass measurments
    MAFValue                     = scalar,  U16,     26,        "V",,{1/1000},,         0
    massAirFlowValue             = scalar,  U16,     28,     "Kg/h", 0.01,         0
    MAPValue                     = scalar,  U16,     30,     "kPa",{1/30},       0.0
    baroPressure                 = scalar,  U16,     32,     "kPa",{1/30},       0.0
    AFRValue                     = scalar,  U16,     34,      "AFR",,{1/1000},,       0.0
    engineLoad                   = scalar,  U16,     36,        "%",{1/100},       0.0 ; Blend of MAP and TPS, depends on algorithm

; misc sensors
    VBatt                        = scalar,	 U16,     38,        "V",,{1/1000},,       0.0
      
	oilPressure                  = scalar,  U16,     40,     "kPa",{1/30},       0.0
    vvtPosition                  = scalar,  U16,     42,      "deg",{1/50},         0

      ; 10 bit TPS ADC value (from 0 to 1023 in 5v scale)
      ;tpsADC2         = scalar,  U16,    44,             "ADC",            1,       0.0;

; fuel math
    chargeAirMass                = scalar,  U16,     44,        "g",0.001,         0
    crankingFuelMs               = scalar,  U16,     46,     "ms",{1/300},     0.0
    currentTargetAfr             = scalar,  U16,     48,    "ratio",,{1/1000},,         0
    baseFuel                     = scalar,  U16,     50,     "ms",{1/300},       0
    fuelRunning                  = scalar,  U16,     52,     "ms",{1/300},       0
    actualLastInjection          = scalar,U16,     54,     "ms",{1/300},     0.0
    injectorDutyCycle            = scalar,  U08,     56,        "%",  0.5,         0
    veValue                      = scalar,  U08,     57,    "ratio",  0.5,         0
    injectionOffset              = scalar,  S16,     58,      "deg",{1/50},         0
    tCharge                      = scalar,  U16,     60,    "deg C",{1/100},       0.0

; Corrections
    injectorLagMs                = scalar,  U16,     62,     "ms",{1/300},       0.0
    iatCorrection                = scalar,  S16,     64,        "%",{1/100},         0
    cltCorrection                = scalar,  S16,     66,        "%",{1/100},         0
    baroCorrection               = scalar,  S16,     68,        "%",{1/100},         0
    fuelPidCorrection            = scalar,  S16,     70,     "ms",{1/300},         0

; Wall model AE
    wallFuelAmount               = scalar,  U16,     72,     "ms",{1/300},         0
    wallFuelCorrection           = scalar, S16,     74,       "ms",0.001,         0

; TPS/load AE
    engineLoadDelta              = scalar, S16,     76,    "value",{1/100},         0
    deltaTps                     = scalar, S16,     78,    "ratio",{1/100},         0
    engineLoadAccelExtra         = scalar, S16,    80,    "value",{1/100},         0
    tpsAccelFuel                 = scalar, U16,     82,     "ms",{1/300},         0

; Ignition
    ignitionAdvance = scalar,  S16,     84,    "deg",{1/50},       0.0
    sparkDwellValue = scalar,  U16,     86,     "ms",{1/300},       0.0
    coilDutyCycle   = scalar,  S16,     88,      "%",{1/100},         0

; Idle & ETB
    idleAirValvePosition=scalar,S16,    90,      "%",{1/100},         0
    etbTarget       = scalar,  S16,     92,      "%",{1/100},         0
    etb1DutyCycle   = scalar,  S16,     94,      "%",{1/100},         0
    etb1Error       = scalar,  S16,     96,      "%",{1/100},         0

; Fuel system
    fuelTankLevel   = scalar,  S16,     98, "amount",{1/100},         0
    fuelConsumptionPerHour=scalar,F32, 100,    "kPa",      1,      0.0

; Knock
    knockCount      = scalar,  U32,    104,"counter",      1,         0
    knockLevel      = scalar,  F32,    108,  "Volts",      1,         0

; Mode, firmware, protocol, run time
    timeSeconds     = scalar,  U32,    112,    "sec",      1,       0.0
    engineMode      = scalar,  U32,    116,     "em",      1,       0.0;
    firmwareVersion = scalar,  U32,    120,"version_f",    1,         0
    firmwareTsVersion=scalar,  U32,    124,"version_p",    1,         0


	boostDuty       = scalar,  S16,    128,      "%",   0.01,         0
    vvtDuty         = scalar,  S16,    130,      "%",   0.01,         0
	tpsAdcMin       = scalar,  F32,    132,      "%",   1,            0
    tpsAdcMax       = scalar,  F32,    136,      "%",   1,            0
    tpsVoltage      = scalar,	 U16,    140,      "V",   0.001,       0.0
    mapVoltage      = scalar,	 U16,    142,      "V",   0.001,       0.0
	pedalVoltage    = scalar,	 U16,    144,      "V",   0.001,       0.0
     
    gpPwm1Duty      = scalar,  S16,    146,      "%",   0.01,         0
	heaterDuty      = scalar,  S16,    148,      "%",   0.01,         0
	wideBandState   = scalar,  U16,    150,  "error",   1,            0
	wideBandError   = scalar,  U16,    152,  "error",   1,            0
	wideBandIdent = scalar,  U16,    154,  "ident",   1,            0
	widebandUa = scalar,	 U16,    156,      "V",   0.001,       0.0
	widebandUr = scalar,	 U16,    158,      "V",   0.001,       0.0
	cltVoltage   = scalar,	 U16,    160,      "V",   0.001,       0.0
	iatVoltage   = scalar,	 U16,    162,      "V",   0.001,       0.0
    multiSparks      = scalar,  U08,     164,"counter",      1,         0



; Errors
    totalTriggerErrorCounter=scalar,U32,   228,"counter",           1,         0
      ; orderingErrorCounter 232
    warningCounter  = scalar,  U16,    236,  "count",           1,         0
    lastErrorCode   = scalar,  U16,    238,  "error",           1,         0
    recentErrorCode0= scalar,  U16,    240,  "error",           1,         0
    recentErrorCode1= scalar,  U16,    242,  "error",           1,         0
    recentErrorCode2= scalar,  U16,    244,  "error",           1,         0
    recentErrorCode3= scalar,  U16,    246,  "error",           1,         0
    recentErrorCode4= scalar,  U16,    248,  "error",           1,         0
    recentErrorCode5= scalar,  U16,    250,  "error",           1,         0
    recentErrorCode6= scalar,  U16,    252,  "error",           1,         0
    recentErrorCode7= scalar,  U16,    254,  "error",           1,         0

; Debug
    debugFloatField1= scalar,  F32,    256,    "val",           1,       0.0
    debugFloatField2= scalar,  F32,    260,    "val",           1,       0.0
    debugFloatField3= scalar,  F32,    264,    "val",           1,       0.0
    debugFloatField4= scalar,  F32,    268,    "val",           1,       0.0
    debugFloatField5= scalar,  F32,    272,    "val",           1,       0.0
    debugFloatField6= scalar,  F32,    276,    "val",           1,       0.0
    debugFloatField7= scalar,  F32,    280,    "val",           1,       0.0
    debugIntField1  = scalar,  S32,    284,    "val",           1,       0.0
    debugIntField2  = scalar,  S32,    288,    "val",           1,       0.0
    debugIntField3  = scalar,  S32,    292,    "val",           1,       0.0
    debugIntField4  = scalar,  S16,    296,    "val",           1,       0.0
    debugIntField5  = scalar,  S16,    298,    "val",           1,       0.0

; Accel
    accelerationX   = scalar,  S16,    300,      "G",        0.01,         0
    accelerationY   = scalar,  S16,    302,      "G",        0.01,         0

; egt
    egt1            = scalar,  S16,    304,  "deg C",      1,         0
    egt2            = scalar,  S16,    306,  "deg C",      1,         0
    egt3            = scalar,  S16,    308,  "deg C",      1,         0
    egt4            = scalar,  S16,    310,  "deg C",      1,         0
    egt5            = scalar,  S16,    312,  "deg C",      1,         0
    egt6            = scalar,  S16,    314,  "deg C",      1,         0
    egt7            = scalar,  S16,    316,  "deg C",      1,         0
    egt8            = scalar,  S16,    318,  "deg C",      1,         0
  
    TPS2Value       = scalar,  S16,    320,        "%",{1/100},         0

   ;   widebandUa      = scalar,	 U16,     236,      "V",   0.001,       0.0
   ;   widebandUr      = scalar,	 U16,     238,      "V",   0.001,       0.0
	
	

     vvtLoad = { (vvtLoadAxis == 0) ? MAPValue : TPSValue }
     gp1 = { (gpPwm1Load == 0) ? MAPValue : gpPwm1Load == 1 ? TPSValue : gpPwm1Load == 2 ? coolant : 0}
     gp2 = { (gpPwm3Load == 0) ? MAPValue : gpPwm2Load == 1 ? TPSValue : gpPwm2Load == 2 ? coolant : 0}
     gp3 = { (gpPwm3Load == 0) ? MAPValue : gpPwm3Load == 1 ? TPSValue : gpPwm3Load == 2 ? coolant : 0}
     gp4 = { (gpPwm4Load == 0) ? MAPValue : gpPwm4Load == 1 ? TPSValue : gpPwm4Load == 2 ? coolant : 0}
  ;gpPwm1Load = { fuel2Algorithm == 0 ? MAPValue : fuel2Algorithm == 1 ? tps : fuel2Algorithm == 2 ? 0 : 0 }

;
; see TunerStudioOutputChannels struct
;

; todo: generate this section programatically

	LM_ALPHA_N = {1},
	LM_SPEED_DENSITY = {3},


    egoCorrection   = { 100 }
    time            = { timeNow }
;      engineLoad      = { fuleAlgorithm == 0 ? MAF : TPS }

[PcVariables]
  
    calibrateMode = bits,   U08,   [0:0], "Set", "Calibrate"
    algorithmUnits = bits,    U08,   [0:1], "KPA",   "% TPS",   "CLT TEMP", "INVALID"
    troubleList  = bits,   U08,   [0:7], "Ok", "Electronic Throttle out of range", "MAP Sensor out of range", "IAT Sensor out of range", "CLT Sensor out of range", "TPS Voltage too low", "TPS Voltage too high", "Crank Sensor error", "Cam Position sensor out of range", "Oil Pressure sensor out of range", "System Voltage out of range", "Processor error", "Invalid TPS Setting", "Pin already used", "Pin already used" 
    boostTableLabels = bits,    U08,   [0:1], "Duty Cycle %", "kPa"
    vvtLoadUnits = bits,    U08,   [0:1], "kPa", "%", "INVALID", "INVALID"
; These are inverted (false = "Yes") so that they default to enabled
	enableLogDebugChannels = bits, U08, [0:0], "Yes", "No"
	enableLogErrorList = bits, U08, [0:0], "Yes", "No"
    wideBandStateList = bits,   U08,   [0:7], "Idle", "Calibration", "Preheat", "Heating", "Ready","Overheat", "Error"
    wideBandErrorList = bits,   U08,   [0:7], "Heater Malfunction", "Overheat", "Wrong Ident", "Wrong Init","Diabled"
   
;                                                 0                    1                  2              3                     4                        5                6             7                8           9            10          11        12           13             14          15            16                17             18                19            20            21           22              23         24           25            26           27         28        29       30     31     32     33     34       35       36      37
;												 Alternator       TPS Acceleration    Warmup-Pid       Idle              Engine Load Acc        Trigger Counters  
    debugFieldF1List = bits,   U08,   [0:7], "Controller Output", "From TPS",          "",         "Controller Output",        "",         "Channel 1 Rise Counter",    "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "Open Loop Duty",     ""      
    debugFieldF2List = bits,   U08,   [0:7], "I-Term",            "To TPS",            "",         "",                         "",         "Channel 2 Rise Counter",    "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "Closed Loop Duty",     "" 
    debugFieldF3List = bits,   U08,   [0:7], "Previous Error",    "Current TPS<>TPS",  "",         "",                         "",         "Channel 3 Rise Counter",   "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 
    debugFieldF4List = bits,   U08,   [0:7], "I Gain",            "Extra Fuel",        "",         "",                         "",                 "",                 "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 
    debugFieldF5List = bits,   U08,   [0:7], "D Gain",            "",                   "",        "",                         "",                 "",                  "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 
    debugFieldF6List = bits,   U08,   [0:7], "D Term",            "",                   "",        "",                         "",                 "",                  "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 
    debugFieldF7List = bits,   U08,   [0:7], "Max-Value",         "",                   "",        "",                         "",                 "",                  "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 
   
   
    debugFieldI1List = bits,   U08,   [0:7], "P-Gain",           "",                    "",        "",                         "",    "Channel 2 Fall Counter",          "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "SPI Counter",    "",    "",    "",      "",      "",     "" 
    debugFieldI2List = bits,   U08,   [0:7], "Offset",           "",                    "",        "",                         "",    "Channel 3 Fall Counter",          "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "Latest Transmit",    "",    "",    "",      "",      "",     "" 
    debugFieldI3List = bits,   U08,   [0:7], "",                 "",                    "",        "",                         "",           "",                         "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "Latest Received",    "",    "",    "",      "",      "",     "" 
    debugFieldI4List = bits,   U08,   [0:7], "",                 "",                    "",        "",                         "",           "",                         "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "Init Count",    "",    "",    "",      "",      "",     "" 
    debugFieldI5List = bits,   U08,   [0:7], "",                 "",                    "",        "",                         "",           "",                         "",           "",            "",           "",          "",          "",      "",          "",         "",            "",           "",             "",              "",                "",           "",          "",           "",             "",        "",          "",           "",          "",         "",       "",     "",     "",    "",    "",    "",      "",      "",     "" 

    wueAfrTargetOffset = array, S16, [ 16], ":1",   0.1, 0.0, -3.0, 3.0, 1;
    wueAnalRecommend   = array, U08, [ 16], "%",  100.00, 0.0, 100, 255.00, 0

[ConstantsExtensions]
    defaultValue = wueAfrTargetOffset, -1.5 -1.4 -1.15 -0.95 -0.775 -0.65 -0.5625 -0.5 -0.4375 -0.375 -0.3125 -0.25 -0.1875 -0.125 -0.0625 0
    maintainConstantValue = tpsMin,{ calibrateMode ? tpsAdcMin : tpsMin}    
    maintainConstantValue = tpsMax,{ calibrateMode ? tpsAdcMax : tpsMax}  
   			
    defaultValue = is_enabled_spi_1, 1
    defaultValue = is_enabled_spi_2, 1 
    defaultValue = is_enabled_spi_3, 0 
    defaultValue = isCJ125Enabled, 1
    defaultValue = map_sensor_type, 0
	defaultValue = etb_use_two_wires, 1

	readOnly = is_enabled_spi_1
	readOnly = is_enabled_spi_2
    readOnly = is_enabled_spi_3

	readOnly = spi1mosiPin
	readOnly = spi1misoPin
	readOnly = spi1sckPin
	readOnly = spi2mosiPin
	readOnly = spi2misoPin
	readOnly = spi2sckPin
	readOnly = spi3mosiPin
	readOnly = spi3misoPin
	readOnly = spi3sckPin

    readOnly = map_sensor_type
	readOnly = isCJ125Enabled
	readOnly = cj125ModePin
	readOnly = cj125ModePinMode
    readOnly = cj125CsPin
	readOnly = cj125CsPinMode
	readOnly = wboHeaterPin
	readOnly = cj125ua
	readOnly = cj125ur
	readOnly = cj125isUaDivided
	readOnly = cj125isUrDivided
    readOnly = tle8888_cs
	readOnly = tle8888_csPinMode
	readOnly = tle8888spiDevice
	readOnly = cj125SpiDevice
	readOnly = useTLE8888_hall_mode
	readOnly = spi1mosiPin
	readOnly = spi1misoPin
	readOnly = spi1sckPin
	readOnly = spi2mosiPin
	readOnly = spi2misoPin
	readOnly = spi2sckPin
	readOnly = spi3mosiPin
	readOnly = spi3misoPin
	readOnly = spi3sckPin
	
	readOnly = is_enabled_spi_1
	readOnly = is_enabled_spi_2
	readOnly = is_enabled_spi_3

	readOnly = etb_use_two_wires
 	readOnly = etbIo1_directionPin1
	readOnly = etbIo1_directionPin2

    readOnly = canTxPin
	readOnly = canRxPin
   
[CurveEditor]
;	xAxis       =  leftValue, rightValue, step
;	yAxis       =  bottomValue, topValue, step


	curve = knockThresholdCurve, "Engine knock threshold RPM based"
      columnLabel = "RPM", "Threshold"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  8, 10
      xBins       = knockNoiseRpmBins, RPMValue
      yBins       = knockNoise
	  suppressGraph = true
      showTextValues = true

	curve = narrowToWideOxygenCurve, "Narrow to Wideband approximation"
      columnLabel = "Voltage", "AFR"
      xAxis       =  0, 6, 10
      yAxis       =  0,  28, 10
      xBins       = narrowToWideOxygenBins
      yBins       = narrowToWideOxygen
      suppressGraph = true
      showTextValues = true

   curve = fsioCurve1, ""
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -155,  150, 10
      xBins       = fsioCurve1Bins
      yBins       = fsioCurve1
      
   curve = fsioCurve2, ""
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -150,  150, 10
      xBins       = fsioCurve2Bins
      yBins       = fsioCurve2

   curve = fsioCurve3, ""
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = fsioCurve3Bins
      yBins       = fsioCurve3

   curve = fsioCurve4, ""
      columnLabel = "X", "Y"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = fsioCurve4Bins
      yBins       = fsioCurve4

   curve = mapAccelTaper, "Engine Load Acceleration Enrichment Taper"
      columnLabel = "Distance", "%"
      xAxis       =  0, 128, 10
      yAxis       = -5,  5, 10
      xBins       = mapAccelTaperBins
      yBins       = mapAccelTaperMult

	curve = dwellCorrection, "Dwell time RPM based"
      columnLabel = "RPM", "Dwell"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  30, 10
      xBins       = sparkDwellRpmBins, RPMValue
      yBins       = sparkDwellValues
       suppressGraph = true
      showTextValues = true
    
curve = map_samplingAngleCurve, "MAP Sampling Start Angle"
    columnLabel = "RPM", "Angle"
    xAxis       =  0, 8000, 10
    yAxis       =  0,  180, 10
    xBins       = mapsampling_samplingAngleBins, RPMValue
    yBins       = mapsampling_samplingAngle
	gauge       = MAPGauge
	  
   
curve = map_samplingWindowCurve, "MAP Sampling Duration"
    columnLabel = "RPM", "Window"
    xAxis       =  0, 8000, 10
    yAxis       =  0,  180, 10
    xBins       = mapsampling_samplingWindowBins, RPMValue
    yBins       = mapsampling_samplingWindow
	gauge       = MAPGauge
	
curve = injectorsDeadTime, "Injector Dead Time"
    columnLabel = "Voltage", "Dead Time"
    xAxis       =  8, 21, 10
    yAxis       = -3,  3, 10
    xBins       = injector_battLagCorrBins, VBatt
    yBins       = injector_battLagCorr
    suppressGraph = true
    showTextValues = true
	  	  
      
curve = mafDecodingCurve, "MAF sensor"
    columnLabel = "Voltage", "kg/hour"
    xAxis       =  -1, 6, 10
    yAxis       = -30,  1300, 10
    xBins       = mafDecodingBins, MAFValue
    yBins       = mafDecoding
	gauge       = MAFGauge

curve = afterstartHoldTimeCurve, "AfterStart Hold Time"
    columnLabel = "Coolant Temp", "Seconds"
#if CELSIUS
    xAxis       =  -40, 120, 10
#else
    xAxis       =  -40, 250, 10
#endif
    yAxis       =  0,  50, 11
    xBins       = afterstartHoldTimeBins, coolant
    yBins       = afterstartHoldTime
	suppressGraph = true
    showTextValues = true


curve = afterstartDecayCurve, "AfterStart Decay Time"
    columnLabel = "Coolant Temp", "Seconds"
#if CELSIUS
    xAxis       =  -40, 120, 10
#else
    xAxis       =  -40, 250, 10
#endif
    yAxis       =  0,  50, 11
    xBins       = afterstartDecayTimeBins, coolant
    yBins       = afterstartDecayTime
	suppressGraph = true
    showTextValues = true

  curve = afterstartEnrichCurve, "AfterStart Enrichment     Addition To Normal Fueling In %"
    columnLabel = "Coolant Temp", "%"
#if CELSIUS
    xAxis       =  -40, 120, 10
#else
    xAxis       =  -40, 250, 10
#endif
    yAxis       =  0,  2, 11
    xBins       = afterstartEnrichBins, coolant
    yBins       = afterstartEnrich
	suppressGraph = true
    showTextValues = true

   curve = iatFuelCorrCurve, "IAT Warmup Correction     Correction +/- In % To Normal Fueling"
      columnLabel = "Intake Air Temp", "% Trim"
#if CELSIUS
      xAxis       =  -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0,  2, 11
      xBins       = iatFuelCorrBins, intake
      yBins       = iatFuelCorr
	   suppressGraph = true
      showTextValues = true
	
	curve = cltTimingCorrCurve, "Warmup Timing Correction"
      columnLabel = "Coolant", "Degrees"
#if CELSIUS
      xAxis       =  -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0,  50, 10
      xBins       = cltTimingBins, coolant
      yBins       = cltTimingExtra
	   suppressGraph = true
      showTextValues = true

	curve = cltFuelCorrCurve, "Warmup Enrichment    Correction +/- In % To Normal Fueling"
      columnLabel = "Coolant", "% Trim"
	  #if CELSIUS
      xAxis       =  -40, 100, 10
#else
      xAxis       =  -40, 210, 10
#endif
      yAxis       =  0,  3, 10
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
	   showTextValues = true
      suppressGraph = true

	curve = crankingCltCurve, "Cranking Enrichment    Addition To Normal Fueling In %"
      columnLabel = "Coolant", "%"
#if CELSIUS
      xAxis       =  -40, 100, 10
#else
      xAxis       =  -40, 210, 10
#endif
      yAxis       =  0,  3, 10
      xBins       = crankingFuelBins, coolant
      yBins       = crankingFuelCoef
	   showTextValues = true
       suppressGraph = true

	curve = etbTpsBiasCurve, "Feed Forward"
      columnLabel = "TPS Position", "Duty Cycle"
      xAxis       =  0, 100, 10
      yAxis       =  0,  100, 10
      xBins       = etbBiasBins, TPSValue
      yBins       = etbBiasValues
	   showTextValues = true
      suppressGraph = true




	curve = crankingTpsCurve, "Cranking TPS Correction"
      columnLabel = "TPS", "% Trim"
      xAxis       =  0, 100, 10
      yAxis       =  0,  3, 10
      xBins       = crankingTpsBins, TPSValue
      yBins       = crankingTpsCoef
	   suppressGraph = true
      showTextValues = true

	curve = crankingDurationCurve, "First Crank Enrichment     Addition To Cranking Enrichment in %"
      columnLabel = "Engine Cycle", "%"
      xAxis       =  0, 1000, 10
      yAxis       =  0,  3, 10
      xBins       = crankingCycleBins
      yBins       = crankingCycleCoef
	   showTextValues = true
      suppressGraph = true

	curve = cltIdleCurve, "Warmup Idle Correction"
      columnLabel = "Coolant", "% Trim"
#if CELSIUS
      xAxis       = -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0,  3, 10
      xBins       = cltIdleCorrBins, coolant
      yBins       = cltIdleCorr
	   suppressGraph = true
      showTextValues = true

	curve = iacCoastingCurve, "Coasting IAC Position for Auto-Idle"
      columnLabel = "Coolant", "%"
#if CELSIUS
      xAxis       = -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0,  100, 10
      xBins       = iacCoastingBins, coolant
      yBins       = iacCoasting
      gauge       = idleAirValvePositionGauge

	curve = cltCrankingCurve, "Cranking Idle Air Correction"
      columnLabel = "Coolant", "% Trim"
#if CELSIUS
      xAxis       = -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0,  3, 10
      xBins       = cltCrankingCorrBins, coolant
      yBins       = cltCrankingCorr
	   suppressGraph = true
      showTextValues = true

	curve = cltIdleRPMCurve, "Idle Target RPM"
      columnLabel = "Coolant", "RPM"
#if CELSIUS
      xAxis       = -40, 120, 10
#else
      xAxis       =  -40, 250, 10
#endif
      yAxis       =  0, 8000, 10
      xBins       = cltIdleRpmBins, coolant
      yBins       = cltIdleRpm, RPMValue
	   suppressGraph = true
      showTextValues = true

	curve = idleAdvanceCurve, "Idle Advance Angle"
      columnLabel = "RPM", "degrees"
      xAxis       = 0, 8000, 10
      yAxis       = -100, 100, 10
      xBins       = idleAdvanceBins, RPMValue
      yBins       = idleAdvance
	   suppressGraph = true
      showTextValues = true

	curve = idleVeCurve, "Idle Fuel Table"
      columnLabel = "RPM", "%"
      xAxis       = 0, 8000, 10
      yAxis       = 0, 250, 10
      xBins       = idleVeBins, RPMValue
      yBins       = idleVe
      suppressGraph = true
      showTextValues = true
    
	curve = crankingAdvanceCurve, "Cranking Advance Angle"
      columnLabel = "RPM", "Degrees"
      xAxis       = 0, 8000, 10
      yAxis       = -100, 100, 10
      xBins       = crankingAdvanceBins, RPMValue
      yBins       = crankingAdvance
       suppressGraph = true
      showTextValues = true



    curve = wueAfrTargetOffsetCurve, "AFR Target Temperature Adjustment"
      columnLabel = "Coolant", "AFR Offset"
#if CELSIUS
      xAxis       = -40, 200, 9
#else
      xAxis       = -40, 400, 9
#endif
      yAxis       =   -3,  1, 5
      xBins       = cltFuelCorrBins, coolant
      yBins       = wueAfrTargetOffset
       suppressGraph = true
      showTextValues = true

    curve = wueAnalyzer_warmup_curve, "Warmup Enrichment"
      columnLabel = "Coolant", "Current WUE", "Coolant", "Corrected"
#if CELSIUS
      xAxis       = -40, 200, 9
#else
      xAxis       = -40, 400, 9
#endif
      yAxis       =   90,  500, 6
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
      yBins       = wueAnalRecommend
      suppressGraph = true
      showTextValues = true
          
      lineLabel   = "Warmup Correction"
      lineLabel   = "Recommended WUE"

[TableEditor]
   ;       table_id,    map3d_id,    "title",      page

   


  ; table = fuelTableMAFTbl,  fuelTableMAFMap,  "Fuel Table",   1
 ;  	  topicHelp = "fuelHelp"
      ;       constant, variable
;	  xyLabels = "RPM", "LOAD"
;      xBins       = fuelRpmBins,  RPMValue
;      yBins       = fuelLoadBins,  MAFValue
;      zBins       = fuelTable
;      gridHeight  = 2.0
 ;     gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
 ;     upDownLabel = "(RICHER)", "(LEANER)"

 ;  table = fuelTableTPSTbl,  fuelTableTPSMap,  "Fuel Table",   1
 ;  		topicHelp = "fuelHelp"
      ;       constant, variable
;	  xyLabels = "RPM", "LOAD"
;      xBins       = fuelRpmBins,  RPMValue
;      yBins       = fuelLoadBins,  TPSValue
;      zBins       = fuelTable
;      gridHeight  = 2.0
;      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
 ;     upDownLabel = "(RICHER)", "(LEANER)"

   table = fuelTableTbl,  fuelTableMap,  "Fuel Table",   1
   topicHelp = "fuelHelp"
      ;       constant, variable
	  xyLabels = "RPM", "LOAD"
      xBins       = fuelRpmBins,  RPMValue
      yBins       = fuelLoadBins,  MAPValue
      zBins       = fuelTable
      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

table = fuelTable2Tbl,  fuelTable2Map,  "Fuel Table",   1
   topicHelp = "fuelHelp"
      ;       constant, variable
	  xyLabels = "RPM", "LOAD"
      xBins       = fuel2RpmBins,  RPMValue
      yBins       = fuel2LoadBins,  MAPValue
      zBins       = fuel2Table
      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"


 ;table = veTableTbl,  veTableMap,  "Fuel Table",   1
      ;       constant, variable
;	   xyLabels = "RPM", "LOAD"
;      xBins       = veRpmBins,  RPMValue
#if tuneByTPS
 ;     yBins       = ignitionTpsBins,  TPSValue
#else
 ;     yBins       = veLoadBins,  MAPValue
#endif
 ;     zBins       = veTable
;      gridHeight  = 2.0
 ;     gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
 ;     upDownLabel = "(RICHER)", "(LEANER)"

  table = ignitionTableTbl,  ignitionTableMap,  "Ignition Table",   1
      ;       constant, variable
	   xyLabels = "RPM", "LOAD"
      xBins       = ignitionRpmBins,  RPMValue
#if   FA_PLAIN_MAF
      yBins       = ignitionLoadBins,  MAFValue
#elif FA_TPS
      yBins       = ignitionLoadBins,  TPSValue
#else
      yBins       = ignitionLoadBins,  engineLoad
#endif

      zBins       = ignitionTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"


   table = tpsTpsAccelTbl,  tpsTpsAccelMap,  "TPS/TPS Acceleration Enrichment(ms)",   1
   	topicHelp = "tpstpsHelp"
      xBins       = tpsTpsAccelFromRpmBins,  TPSValue
      yBins       = tpsTpsAccelToRpmBins,  TPSValue
      zBins       = tpsTpsAccelTable

       table = boostTableTbl,  boostMapOpen,  "",   1
	    xyLabels = "RPM", "KPA"
      xBins       = boostRpmBins,  RPMValue
      yBins       = boostMapBins,  MAPValue
      zBins       = boostTableOpenLoop

	table = boostTable2Tbl,  boostMapClosed,  "",   1
	 xyLabels = "RPM", "% TPS"
      xBins       = boostRpmBins,  RPMValue
      yBins       = boostTpsBins,  TPSValue
      zBins       = boostTableClosedLoop

	table = vvtTableTbl,  vvtMap,  "",   1
	 xyLabels = "RPM", ""
     xBins       = vvtRpmBins,  RPMValue
      yBins       = vvtLoadBins,  vvtLoad
      zBins       = vvtTable1
    
     table = gpPwmTable1Tbl,  gpPwm1Map,  "",   1
	  xyLabels = "RPM", ""
      xBins       = gpPwm1RpmBins,  RPMValue
      yBins       = gpPwm1LoadBins,  gp1
      zBins       = gpPwmTable1

	    table = gpPwmTable2Tbl,  gpPwm2Map,  "",   1
		 xyLabels = "RPM", ""
      xBins       = gpPwm2RpmBins,  RPMValue
      yBins       = gpPwm2LoadBins,  gp2
      zBins       = gpPwmTable2

	    table = gpPwmTable3Tbl,  gpPwm3Map,  "",   1
		 xyLabels = "RPM", ""
      xBins       = gpPwm3RpmBins,  RPMValue
      yBins       = gpPwm3LoadBins,  gp3
      zBins       = gpPwmTable3

	    table = gpPwmTable4Tbl,  gpPwm4Map,  "",   1
		 xyLabels = "RPM", ""
      xBins       = gpPwm4RpmBins,  RPMValue
      yBins       = gpPwm4LoadBins,  gp4
      zBins       = gpPwmTable4


   table = fsioTable1Tbl,  fsioTable1Map,  "",   1
      xBins       = fsioTable1RpmBins,  RPMValue
      yBins       = fsioTable1LoadBins,  engineLoad 
      zBins       = fsioTable1

   table = fsioTable2Tbl,  fsioTable2Map,  "",   1
      xBins       = fsioTable2RpmBins,  RPMValue
      yBins       = fsioTable2LoadBins,  engineLoad 
      zBins       = fsioTable2

   table = fsioTable3Tbl,  fsioTable3Map,  "",   1
      xBins       = fsioTable3RpmBins,  RPMValue
      yBins       = fsioTable3LoadBins,  engineLoad 
      zBins       = fsioTable3

   table = fsioTable4Tbl,  fsioTable4Map,  "",   1
      xBins       = fsioTable4RpmBins,  RPMValue
      yBins       = fsioTable4LoadBins,  engineLoad 
      zBins       = fsioTable4

   table = baroCorrTbl,  baroCorrMap,  "Baro Correction",   1
      ;       constant, variable
      xBins       = baroCorrRpmBins,  RPMValue
      yBins       = baroCorrPressureBins,  baroPressure
      zBins       = baroCorrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

 
	
   ;table = ignitionTpsTableTbl,  ignitionTableMap,  "Ignition TPS Table",   1
      ;       constant, variable
      ; Currently we share ignitionRpmBins between two advance tables... Is it ok?
    ;  xBins       = ignitionRpmBins,  RPMValue
    ;  yBins       = ignitionTpsBins,  TPSValue

   ;   zBins       = ignitionTpsTable
   ;   gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
   ;   upDownLabel = "(RICHER)", "(LEANER)"
	
   table = ignitionIatCorrTableTbl,  ignitionIatCorrTableMap,  "Ignition Intake Air Temp Correction",   1
      ;       constant, variable
	   xyLabels = "RPM", "IAT"
      xBins       = ignitionIatCorrRpmBins,  RPMValue
      yBins       = ignitionIatCorrLoadBins,  intake
      zBins       = ignitionIatCorrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

  

   table = injPhaseTableTbl,  injPhaseTableMap,  "Injection Phase",   1
   		topicHelp = "fuelHelp"
      ;       constant, variable
	   xyLabels = "RPM", "LOAD"
      xBins       = injPhaseRpmBins,  RPMValue
      yBins       = injPhaseLoadBins,  engineLoad
      zBins       = injectionPhase
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(Later)", "(Sooner)"

   table = pedalToTpsTbl,  pedalToTpsMap,  "Throttle Target Position",   1
      ;       constant, variable
	   xyLabels = "RPM", "% TPS"
      xBins       = pedalToTpsRpmBins,  RPMValue
      yBins       = pedalToTpsPedalBins,  throttlePedalPosition
      zBins       = pedalToTpsTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(Later)", "(Sooner)"


   table = afrTableTbl,  afrTableMap,  "Target AFR Table",   1
      ;       constant, variable
	   xyLabels = "RPM", "LOAD"
      xBins       = afrRpmBins,  RPMValue
      yBins       = afrLoadBins,  MAPValue
      zBins       = afrTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

   table = iacPidMultTbl,  iacPidMultMap,  "IAC PID Multiplier Table",   1
      ;       constant, variable
	   xyLabels = "RPM", "LOAD"
      xBins       = iacPidMultRpmBins,  RPMValue
      yBins       = iacPidMultLoadBins,  engineLoad
      zBins       = iacPidMultTable
;      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(Later)", "(Sooner)"

[GaugeConfigurations]


gaugeCategory = ECU Status
   warningCounterGauge = warningCounter, "Warning count", "",     0,   100,     0,    0,    100,  100,   0,   0
   lastErrorCodeGauge = lastErrorCode, "Last error", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   triggerErrorsCounterGauge = totalTriggerErrorCounter, "Trigger error count", "count",     0,   15000,     0,    0,    6000,  6000,   0,   0
   recentErrorCode0Gauge = recentErrorCode0, "Error#1", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode1Gauge = recentErrorCode1, "Error#2", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode2Gauge = recentErrorCode2, "Error#3", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode3Gauge = recentErrorCode3, "Error#4", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode4Gauge = recentErrorCode4, "Error#5", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode5Gauge = recentErrorCode5, "Error#6", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode6Gauge = recentErrorCode6, "Error#7", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   recentErrorCode7Gauge = recentErrorCode7, "Error#8", "",     0,  18000,     0,    0,   18000, 18000,   0,   0
   firmwareVersionGauge  = firmwareVersion , "ECU Software Version", "%",     0,   100,     0,    0,    100,  100,   0,   0
   timeSecondsGauge     =   timeSeconds, "Uptime", "sec",     0,   100,     0,    0,    100,  100,   0,   0

gaugeCategory = Debug  
  debugF1Gauge = debugFloatField1, {bitStringValue( debugFieldF1List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF2Gauge = debugFloatField2, {bitStringValue( debugFieldF2List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF3Gauge = debugFloatField3, {bitStringValue( debugFieldF3List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF4Gauge = debugFloatField4, {bitStringValue( debugFieldF4List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF5Gauge = debugFloatField5, {bitStringValue( debugFieldF5List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugF6Gauge = debugFloatField6, {bitStringValue( debugFieldF6List,  debugMode )}, "",  -100,   100,     0,    0,    100,  100,   4,   4
  debugF7Gauge = debugFloatField7, {bitStringValue( debugFieldF7List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   4,   4
  debugI1Gauge = debugIntField1,   {bitStringValue( debugFieldI1List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI2Gauge = debugIntField2,   {bitStringValue( debugFieldI2List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI3Gauge = debugIntField3,   {bitStringValue( debugFieldI3List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI4Gauge = debugIntField4,   {bitStringValue( debugFieldI4List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0
  debugI5Gauge = debugIntField5,   {bitStringValue( debugFieldI5List,  debugMode )}, "",     0,   100,     0,    0,    100,  100,   0,   0


gaugeCategory = Sensors
   RPMGauge        = RPMValue,           "RPM - engine speed",       "RPM",       0,   15000,     200,    500,    6000,  6000,   0,   0
#if CELSIUS
   CLTGauge          = coolant,       "Coolant temp",        "deg C",      -40,    140,     -15,      1,      95,   110,   1,   1
   IATGauge          = intake,     "Intake air temp",        "deg C",      -40,    140,     -15,      1,      95,   110,   1,   1
#else
   CLTGauge          = coolant,       "Coolant temp",        "deg F",      -40,    285,       5,     35,     205,   230,   1,   1
   IATGauge          = intake,     "Intake air temp",        "deg F",      -40,    285,       5,     35,     205,   230,  1,   1
#endif
   afr1Gauge         = AFRValue,       "Air fuel ratio",         "",   10,   19.4,    12,     13,      15,    16,   2,   2
   MAPGauge     	 = MAPValue,       "MAP",                 "kPa",    0,    355,     5,     10,      200,   500,   2,  2	
;   MapBarGauge       = map_bar,         "Boost Pressure BAR",  "Bar",  -1,     3,      -1,     -1,     2.5,  2.7,    2,   2
   VBattGauge        = VBatt,           "Battery voltage",       "V",   8,     21,      9,     10,      17,    19,   1,   1
  
;Name                 Var                    Title           Units       Lo     Hi      LoD     LoW      HiW   HiD   vd   ld

gaugeCategory = Other Sensors
   massAirFlowValueGa = massAirFlowValue,"Mass air flow",    "kg/hr",   0,     50,   -999,   -999,     999,   999,   1,   1
   VSSGauge          = vehicleSpeedKph,     "Vehicle speed",         "kmh",        0,    200,       0,      1,       3,     4,   1,   1
   atmPresCGauge     = baroPressure,          "Barometric pressure",       "kPa",        0,   1024,       0,      0,       0,     0,   0,   0
   vvtPositionGauge = vvtPosition, "VVT position", "deg",     0,   100,     0,    0,    720,  720,   0,   0
   OilPressGauge   	 = oilPressure,   "Oil Pressure",       "kPa",        0,    750,      35,     75,     550,   700,   0,   0	
   idleAirValvePositionGauge = idleAirValvePosition, "Idle position", "%",     0,   100,     0,    0,    100,  100,   1,   1
   BoostDutyGauge    = boostDuty, "Boost Duty",              "%",  0,    355,     5,     10,      200,   230,   2,  2	
   VVTDutyGauge    = vvtDuty, "VVT Duty",              "%",  0,    355,     5,     10,      200,   230,   2,  2	
   gpPwm1DutyGauge    = gpPwm1Duty, "GP PWM 1 Duty",              "%",  0,    355,     5,     10,      200,   230,   2,  2	
   knockCountGauge   = knockCount,"Knock count",           "Count",        0,    120,      10,     10,     100,   100,   1,   1
   knockLevelGauge   = knockLevel,"Knock level",           "Volts",        0,      7,      10,     10,     100,   100,   1,   2
   fuelTankLevelGauge   = fuelTankLevel,"Fuel level",           "x",        0,      7,      10,     10,     100,   100,   1,   2
   multiSparkGauge = multiSparks, "MultiSparks",     "Count",        0,    120,      10,     10,     100,   100,   1,   1

gaugeCategory = Sensor Voltage
   tpsVoltageGauge      = tpsVoltage,	 "TPS Volts",    "V",        0,      7,      10,     10,     100,   100,   1,   2
   mapVoltageGauge      = mapVoltage, 	"MAP Volts",    "V",        0,      7,      10,     10,     100,   100,   1,   2
   MAFGauge			   = MAFValue,        "MAF Volts",         "V",   0,      5,      0,      1,       3,     4,   1,   1
   pedalVoltageGauge    = pedalVoltage, "Throttle Pedal Volts",     "V",        0,      7,      10,     10,     100,   100,   1,   2
   cltVoltsGauge    = cltVoltage, "CLT Sensor Volts",     "V",        0,      7,      10,     10,     100,   100,   1,   2
   iatVoltsGauge    = iatVoltage, "IAT Sensor Volts",     "V",        0,      7,      10,     10,     100,   100,   1,   2



gaugeCategory = Ignition
   ignadvGauge = ignitionAdvance,       "Ignition timing",   "degrees",     -100,    100,    -999,   -999,     999,   999,   1, 1
   dwellGauge        = sparkDwellValue,           "Dwell",      "mSec",        0,     10,     0.5,    1.0,     6.0,   8.0,   1, 1
   coilDutyCycleGauge = coilDutyCycle,       "dwell: coil duty cycle",      "perc",        -11,   11,     1.0,    1.2,      100,    100,   3, 1



gaugeCategory = Acceleration Enrichment
   engineLoadDeltaGauge = engineLoadDelta,"AE: load change","value",      0,    120,      10,     10,     100,   100,   1,   1
   engineLoadAccelExtraGauge = engineLoadAccelExtra,"AE: load extra","value",      0,    120,      10,     10,     100,   100,   1,   1
   deltaTpsGauge     = deltaTps,                "AE: TPS change",            "",        0,    120,      10,     10,     100,   100,   1,   1
   tpsAccelFuelGauge = tpsAccelFuel,"AE: TPS enrich",             "ms",        0,    120,      10,     10,     100,   100,   1,   1
   wallFuelAmountGauge = wallFuelAmount, "AE: wall amount", "ms",     0,   100,     0,    0,    100,  100,   0,   0
   wallFuelCorrectionGauge = wallFuelCorrection, "AE: wall correction extra", "ms",     0,   100,     0,    0,    100,  100,   0,   0

gaugeCategory = Fueling
   ;Name               Var            Title                 Units        Lo      Hi      LoD    LoW       HiW   HiD    vd  ld
#if CELSIUS
   tChargeGauge          = tCharge,     "fuel: Estimated charge temperature",        "deg C",      -40,    140,     -15,      1,      95,   110,   1,   1
#else
   tChargeGauge          = tCharge,     "fuel: Estimated charge temperature",        "deg F",      -40,    285,       5,     35,     205,   230,  1,   1
#endif
   baroCorrectionGauge  = baroCorrection,"fuel: Barometric pressure correction",           "ratio",        0.5,    1.5,      0.6,     0.7,     1.3,   1.4,   1,   1
   crankingFuelGauge = crankingFuelMs,   "fuel: cranking",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   iatCorrectionGauge = iatCorrection, "fuel: IAT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   cltCorrectionGauge = cltCorrection, "fuel: CLT correction", "mult",     0,   3,     0,    0,    3,  3,   2,   2
   injectorDutyCycleGauge=injectorDutyCycle, "fuel: injector duty cycle","%",      0,    120,      10,     10,     100,   100,   1,   1
   actualLastInjectionGauge   = actualLastInjection,     "fuel: Last injection", "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   veValueGauge      = veValue,                 "fuel: VE",            "",        0,    120,      10,     10,     100,   100,   1,   1
   
   injectorLagMsGauge = injectorLagMs,          "fuel: injector lag",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelRunningGauge     = fuelRunning,          "fuel: running",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   baseFuelGauge     = baseFuel,                "fuel: base",      "mSec",        0,   25.5,     1.0,    1.2,      20,    25,   3, 1
   fuelPidCorrectionGauge = fuelPidCorrection,  "fuel: Short-term closed loop correction",      "mSec",        -11,   11,     1.0,    1.2,      20,    25,   3, 1

gaugeCategory = Throttle Body (incl. ETB)
   pedalPositionGauge = throttlePedalPosition, "Throttle pedal position",        "%",    0,    120,      0,     0,     100,   100,   1,   1
   tpsADCGauge       = tpsADC,           "tps1 ADC",        "ADC",        0,   1024,       0,      0,       0,     0,   0,   0
   TPSGauge			 = TPSValue,      "Throttle position",    "%",        0,    100,       0,      0,     100,   100,   1,   1

   etbTargetGauge     = etbTarget,     "ETB position target", "%",    0,    100,    0,     0,     100,   100,   1,   1
   etbErrorGauge      = etb1Error,     "ETB position error",  "%",    -20,  20,    -10,   -5,    5,    10,  2, 0
   etbDutyCycleGauge  = etb1DutyCycle, "ETB duty cycle",      "%",    -100, 100,   -75,   -50,   50,   75,  0, 0
  ; etbMagnitudeGauge = etbErrorMagnitude,     "ETB Error Magnitude",  "%",    -20,  20,    -10,   -5,    5,    10,  2, 0  
        TpsMinGauge   = tpsAdcMin "Etb-Tps Min",        "ADC",        0,   1024,       0,      0,       0,     0,   0,   0
   TpsMaxGauge   = tpsAdcMax "Etb-Tps Max",        "ADC",        0,   1024,       0,      0,       0,     0,   0,   0


gaugeCategory = Wideband Sensor (LSU)
    lsuDutyGauge     = heaterDuty,      "LSU Duty",      "%",    -100, 100,   -75,   -50,   50,   75,  0, 0
	lsuStateGauge    = wideBandState,   "LSU State",      "",    -100, 100,   -75,   -50,   50,   75,  0, 0
	lsuErrorGauge    = wideBandError,   "LSU Diag",       "",    -100, 100,   -75,   -50,   50,   75,  0, 0
    lsuIdentGauge    = wideBandIdent,   "LSU Ident",      "",    -100, 100,   -75,   -50,   50,   75,  0, 0
    widebandUaGauge  = widebandUa,      "LSU Ua",    "volts",        0,      7,      10,     10,     100,   100,   1,   2
    widebandUrGauge  = widebandUr,      "LSU Ur",    "volts",        0,      7,      10,     10,     100,   100,   1,   2
	

[WueAnalyze]
    
;                    wueCurveName, afrTempCompensationCurve, lambdaTargetTableName, lambdaChannel, coolantTempChannel, egoCorrectionChannel, wueChannel, activeCondition
     wueAnalyzeMap = wueAnalyzer_warmup_curve, wueAfrTargetOffsetCurve, afrTableTbl, AFRValue, coolant, cltCorrection, egoCorrection

     lambdaTargetTables = afrTableTbl, afrTSCustom

     wuePercentOffset = 0 ; for working with 0 based enrichment set to 100
     option = disableLiveUpdates
     option = burnOnSend

;     filter = std_DeadLambda ; Auto build

     filter = decelFilterMap,"After Start Enrich", engine,         &     , 4 ,       , false
     filter = accelFilterTp, "TP Accel Enrich"   , engine,         &     , 16,       , false
     filter = decelFilterTp, "TP Decel Enrich"   , engine,         &     , 32,       , false
     filter = accelFilterMap,"MAP Accel Enrich"  , engine,         &     , 64,       , false
     filter = decelFilterMap,"MAP Decel Enrich"  , engine,         &     , 128,      , false
     ; this works, just another way to skin a cat
     ;filter = decelFilter, "Decel Flag" , tpsaccden,         >       , 0,        , false
     filter = overrunFilter, "Overrun"    , pulseWidth1,  =       , 0,            , false
     filter = highThrottle, "High Throttle"    , throttle,  >       , 15,         , true
     filter = lowRpm,       "Low RPM"    ,       rpm,       <       , 300,        , false
     filter = std_Custom ; Standard Custom Expression Filter.

   
[FrontPage]
   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   ; currently a minimum of 6 gauges must be on the dash, this appears to be an old not needed limitation. next release 1 will work.
   gauge1 = RPMGauge
   gauge2 = CLTGauge
   gauge3 = TPSGauge
   gauge4 = MAFGauge
   gauge5 = afr1Gauge
   gauge6 = VBattGauge
   gauge7 = dwellGauge
   gauge8 = ignadvGauge
   


;         =   expression,            off-label,            on-label,            off-bg, off-fg, on-bg, on-fg
	; important status
    indicator = { ind_hasFatalError }, "",   "Config Error",   green, black, red,   black
    indicator = { firmwareTsVersion == fileVersion }, "WRONG VERSION",   "Version Ok",   red, black, green,   black
    indicator = { ind_isWarnNow }, "",   "Warning",   green, black, red,   black
    indicator = { launchTriggered}, "Launch Off",   "Launch Triggered",   white, black, green,   black
	indicator = { rpmHardCut}, "",   "RPM Cut",   white, black, green,   black
	indicator = { dbwSystemError}, "",   "Electronic Throttle Error",   white, black, green,   black
    indicator = { ind_check_engine }, "Ok",      "Check Engine",       green,  black,  red, black
    indicator = { isIgnitionEnabledIndicator}, "Ignition Off",   "Ignition Ok",   red, black, green,   black
    indicator = { ind_injection_enabled}, "Injection Off",   "Injection Ok",   red, black, green,   black
    indicator = { ind_isTriggerError}, "Trigger Ok",      "Trigger Error",       green,  black,  red, black
    indicator = { lastErrorCode }, "No Error Code", {bitStringValue(troubleList, lastErrorCode)},   green, black, red, black {ind_isWarnNow == 1}
    indicator = { recentErrorCode1 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode1)},   green, black, red, black 
	indicator = { recentErrorCode2 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode2)},   green, black, red, black 
    indicator = { recentErrorCode3 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode3)},   green, black, red, black 
    indicator = { recentErrorCode4 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode4)},   green, black, red, black 
    indicator = { recentErrorCode5 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode5)},   green, black, red, black 
    indicator = { recentErrorCode6 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode6)},   green, black, red, black 
    indicator = { recentErrorCode7 }, "No Error Code", {bitStringValue(troubleList, recentErrorCode7)},   green, black, red, black 
    indicator = { wideBandState }, "Init", {bitStringValue(wideBandStateList, wideBandState)},   green, black, red, black 
    indicator = { wideBandError }, "No Error", {bitStringValue(wideBandErrorList, wideBandError)},   green, black, red, black 


	; minor info	
    indicator = { ind_fan}, "Fan Off",   "Fan On",   white, black, green,   black
    indicator = { isCylinderCleanupActivated}, "Cyl Cleanup Off",   "Cyl Cleanup On",   white, black, green,   black    
    indicator = { needBurn }, "Config Ok",  "Unsaved Changes",   white, black, yellow,   black
    indicator = { hasSdCard}, "No SD",   "with SD",   white, black, green,   black
    indicator = { ind_fuel_pump}, "Fuel Pump Off",   "Fuel Pump On",   white, black, green,   black
    indicator = { clutchUpState }, "Clutch Off",   "Clutch On",   white, black, red,   black
    indicator = { clutchDownState }, "Clutch",   "Clutch Down",   white, black, yellow,   black
    indicator = { brakePedalIndicator }, "Brake Off", "Brake On",   white, black, red,   black
    indicator = { acSwitchIndicator }, "AC on",   "AC off",   yellow, black, white,   black
    
    ; error codes
    indicator = { ind_tps_error}, "Tps Ok",   "Tps Error",   white, black, red,   black
    indicator = { ind_clt_error}, "Clt Ok",   "Clt Error",   white, black, red,   black
    indicator = { ind_iat_error}, "Iat Ok",   "Iat Error",   white, black, red,   black
    indicator = { ind_map_error}, "Map Ok",   "Map Error",   white, black, red,   black

    indicator = { knockEverIndicator }, "",   "Knock Recently",   white, black, red,   black
    indicator = { knockNowIndicator }, "No Knock",   "Knock NOW",   white, black, red,   black
   

[Datalog]
   ;       Channel          Label          Type    Format
   entry = time,            "Time",        float,  "%.3f"
   entry = RPMValue,        "RPM",         int,    "%d"
   entry = firmwareVersion, "firmware",     int,    "%d"
   entry = coolant,         "CLT",         float,  "%.2f"
   entry = intake,          "IAT",         float,  "%.2f"
   entry = oilPressure,		"Oil Press",   float,  "%.1f"
   entry = TPSValue,             "TPS",         float,  "%.2f"
   entry = MAFValue,             "MAF",         float,  "%.2f"
   entry = MAPValue,        "MAP",         float,  "%.1f"
   entry = AFRValue,       "Air/Fuel Ratio",         float,  "%.2f"
   entry = VBatt,           "VBatt",       float,  "%.2f"
   entry = engineLoad,	    "Engine Load", 	   float,  "%.1f"
   entry = ignitionAdvance,	"timing",	   float,  "%.2f"
   entry = knockLevel,	    "knock: current level", 	   float,  "%.2f"
   entry = knockCount,		"knock: counter",	   int,    "%d"
   entry = vehicleSpeedKph,	"Vehicle Speed",	   float,  "%.2f"
   entry = speedToRpmRatio, "s2rpm",	   float,  "%.3f"
   entry = rpmAcceleration, "dRPM",        float,  "%.3f"
   entry = massAirFlowValue,"air flow",    float,  "%.3f"
   entry = chargeAirMass,   "air mass",    float,  "%.3f"
   entry = throttlePedalPosition,   "Throttle pedal position",       float,  "%.3f"
   entry = totalTriggerErrorCounter, "trg err",int,    "%d"
   entry = idleAirValvePosition, "Idle Air Valve", float,  "%.3f"


   entry = injectorLagMs,   "fuel: injector lag", float,  "%.3f"
   entry = fuelRunning,     "fuel: running", float,  "%.3f"
   entry = actualLastInjection,     "fuel: Last injection", float,  "%.3f"
   entry = baseFuel,	    "fuel: base",  float,  "%.2f"
   entry = fuelPidCorrection,"fuel: Short-term closed loop correction",  float,  "%.2f"
   entry = veValue,         "fuel: VE",    float,  "%.3f"
   entry = injectorDutyCycle,"fuel: injector duty cycle",float,"%.3f"
   entry = coilDutyCycle,	"dwell: coil duty cycle",	float,"%.3f"
   entry = currentTargetAfr,"fuel: target AFR",	float,"%.3f"

   ;entry = accelerationX,	"Acceleration: X",	float,"%.2f", { LIS302DLCsPin != 0 }
   ;entry = accelerationY,	"Acceleration: Y",	float,"%.2f", { LIS302DLCsPin != 0 }
  ; entry = egt1,	        "EGT1",	float,"%.1f", { max31855_cs1 != 0}
   ;entry = egt2,	        "EGT2",	float,"%.1f", { max31855_cs2 != 0}
   ;entry = egt3,	        "EGT3",	float,"%.1f", { max31855_cs3 != 0}
   ;entry = egt4,	        "EGT4",	float,"%.1f", { max31855_cs4 != 0}
   ;entry = egt5,	        "EGT5",	float,"%.1f", { max31855_cs5 != 0}
   ;entry = egt6,	        "EGT6",	float,"%.1f", { max31855_cs6 != 0}
   ;entry = egt7,	        "EGT7",	float,"%.1f", { max31855_cs7 != 0}
   ;entry = egt8,	        "EGT8",	float,"%.1f", { max31855_cs8 != 0}

   entry = engineLoadAccelExtra, "fuel: engine load acceleration extra fuel",float,  "%.3f"
   entry = engineLoadDelta, "fuel: load change",float,  "%.3f"

   entry = deltaTps,		"fuel: TPS change",float,  "%.3f"
   entry = tpsAccelFuel,    "fuel: TPS acceleration extra fuel ms",    float,  "%.3f"

   entry = wallFuelCorrection,"fuel: wall corr ms",	float,   "%.3f"
   entry = wallFuelAmount, "fuel: wall amount",	float,   "%.3f"
   
   entry = baroCorrection,  "fuel: Barometric pressure correction",float,"%.3f"
   entry = iatCorrection,   "fuel: IAT correction",	float,   "%.3f"
   entry = cltCorrection,	"fuel: CLT correction", float,"%.3f"

   entry = sparkDwellValue,	"dwell: coil charge time", float,"%.3f"
   entry = vvtPosition, "VVT position", float,"%.2f"
   entry = injectionOffset, "injOffset"  , float, "%.2F"

; is there a way to log parameter?   entry = debugMode,   "debugMode",int,"%d"
; Alternator_PID: alternator duty cycle
; DBG_TPS_ACCEL: from TPS 
   entry = debugFloatField1,   "debug f1",float,"%.4f", { !enableLogDebugChannels }

; Alternator_PID: current integration term
; DBG_TPS_ACCEL: to TPS
   entry = debugFloatField2,   "debug f2: iTerm",float,"%.4f", { !enableLogDebugChannels }
   
; Alternator_PID: previous error
; DBG_TPS_ACCEL: tps<>tps table value
   entry = debugFloatField3,   "debug f3: prevError",float,"%.4f", { !enableLogDebugChannels }
   
; Alternator_PID: I setting
; DBG_TPS_ACCEL: extra fuel   
   entry = debugFloatField4,   "debug f4: iParam",float,"%.4f", { !enableLogDebugChannels }

; Alternator_PID: D setting
   entry = debugFloatField5,   "debug f5: dParam",float,"%.4f", { !enableLogDebugChannels }

; Alternator_PID: dTerm
   entry = debugFloatField6,   "debug f6: dTerm",float,"%.4f", { !enableLogDebugChannels }
   
   entry = debugFloatField7,   "debug f7",float,"%.4f", { !enableLogDebugChannels }


; Alternator_PID: P setting
   entry = debugIntField1,   "debug i1: pParam",int,"%d", { !enableLogDebugChannels }

; Alternator_PID: offset setting
   entry = debugIntField2,   "debug i2: offset",int,"%d", { !enableLogDebugChannels }
   
; Alternator_PID: PID reset counter   
   entry = debugIntField3,   "debug i3",int,"%d", { !enableLogDebugChannels }

   entry = debugIntField4,   "debug i4",int,"%d", { !enableLogDebugChannels }

   entry = debugIntField5,   "debug i5",int,"%d", { !enableLogDebugChannels }


   entry = engineMode,   "Engine Mode",int,"%d"
   entry = warningCounter,   "warning: counter",int,"%d"
   entry = lastErrorCode,   "warning: last",int,"%d"
   entry = recentErrorCode0,   "error 0",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode1,   "error 1",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode2,   "error 2",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode3,   "error 3",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode4,   "error 4",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode5,   "error 5",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode6,   "error 6",int,"%d", { !enableLogErrorList }
   entry = recentErrorCode7,   "error 7",int,"%d", { !enableLogErrorList }
   entry = internalMcuTemperature,   "CPU Temperature",float,"%.2f"
   
   entry = tCharge, "tCharge",float,"%.3f"
   
   entry = clutchUpState,   "clutch: up",int,"%d"
   entry = clutchDownState,   "clutch: down",int,"%d"
   entry = brakePedalIndicator,   "brake: down",int,"%d"
   entry = acSwitchIndicator,   "AC switch",int,"%d"
   entry = ind_fan, "radiator fan",int,"%d"

; Electronic throttle body
   entry = etb1Error,      "ETB Error", float, "%.3f"
   entry = etb1DutyCycle,  "ETB Duty", float, "%.3f"
   entry = etbTarget,      "ETB Target", float, "%.3f"
   ; entry = etbErrorMagnitude,      "ETB Magnitude", float, "%.3f"
  
;     tpsADC          = U16,    "ADC",
;     alignmet        = U16,    "al",
;     atmPres         = F32,    "pres",
;	  crankingFuel    = F32,    "ms",
;     tCharge         = F32,    "T",
;     sparkDwell      = F32,    "MAP",
;     warmUpEnrich    = F32,    "%",

[Menu]

menuDialog = main
	menu = "&Base &Engine"
		subMenu = engineChars,				"Base Engine Settings"
		subMenu = triggerConfiguration,		"Trigger Setup"
		subMenu = std_separator
		subMenu = energySystems,			"Battery and alternator"
		subMenu = updateFirmware,      "Firmware Update"
			
	menu = "Fuel"
		# basic
		subMenu = injectionSettings,	  "Fuel Main"
		subMenu = testInjectors,          "Injector Test"
		subMenu = std_separator
		groupMenu = "Injector Settings"
		groupChildMenu = injectionDeadTime,		"Injector Dead Time", 0, {isInjectionEnabled == 1}
		groupChildMenu = injPhaseTableTbl,         "Injection Phase", 0, {isInjectionEnabled == 1}
		subMenu = std_separator
		subMenu = afrTableTbl,				"Target AFR", 0, {isInjectionEnabled == 1 && fuelAlgorithm == LM_SPEED_DENSITY}
	;	subMenu = fuelClosedLoopDialog, 	"Closed Loop", 0, {isInjectionEnabled == 1}
		subMenu = std_separator
        
		

		# Corrections
	groupMenu = "Cranking Enrichment"
	    groupChildMenu = crankingDurationCurve,	   "First Crank Enrichment"
		groupChildMenu = crankingCltCurve,			"Cranking Enrichment"
		groupMenu = "AfterStart Enrichment"
		groupChildMenu = afterstartEnrichCurve,			"AfterStart Enrichment", 0, {isInjectionEnabled == 1}
        groupChildMenu = afterstartHoldTimeCurve,			"AfterStart Hold Time", 0, {isInjectionEnabled == 1}
        groupChildMenu = afterstartDecayCurve,			"AfterStart Decay Time", 0, {isInjectionEnabled == 1}
		groupMenu = "Warmup Enrichment"
		groupChildMenu = cltFuelCorrCurve,			"Warmup Enrichment", 0, {isInjectionEnabled == 1}
		groupChildMenu = iatFuelCorrCurve,			"Intake Air Temp Enrichment", 0, {isInjectionEnabled == 1}
		groupChildMenu = baroCorrTbl,				"Baro Trim", 0, {isInjectionEnabled == 1 && fuelAlgorithm == LM_SPEED_DENSITY}
		groupChildMenu = crankingTpsCurve,			"TPS Correction"
		# Accel enrichment

		groupMenu = "Accel Enrichments"
		groupChildMenu = EngineLoadAccelPanel,        "Engine Load Based", 0, {isInjectionEnabled == 1}
		groupChildMenu = TpsAccelPanel,               "TPS Based", 0, {isInjectionEnabled == 1}
		groupChildMenu = tpsTpsAccelTbl, 		"Tps/Tps Based", 0, {isInjectionEnabled == 1}
		groupChildMenu = mapAccelTaper,			"Engine Load AE Taper", 0, {isInjectionEnabled == 1}
        subMenu = std_separator
        subMenu = tChargeSettings,			"Charge Temp Correction", 0, {isInjectionEnabled == 1}
		subMenu = std_separator
        subMenu = coastingFuelCutControl, 	"Deceleration fuel cutoff (DFCO)", 0, {isInjectionEnabled == 1}
        subMenu = std_separator
	    subMenu = WallWettingAccelPanel, "Wall Wetting", 0, {isInjectionEnabled == 1}
# Fuel table/VE Table
subMenu = std_separator

     ;   subMenu = stagingTableDialog,       "Staged Injection"
		subMenu = std_separator
		;subMenu = veTableDialog,			"Fuel Table Main", 0, {isInjectionEnabled == 1 && fuelAlgorithm == LM_SPEED_DENSITY}
		subMenu = fuelTableDialog,			"Fuel Table", 0, {isInjectionEnabled == 1 }; && fuelAlgorithm != LM_SPEED_DENSITY}
		subMenu = std_separator
        
	menu = "Ignition"
		subMenu = ignitionSettings,			"Ignition Main"
        subMenu = std_separator
		subMenu = testSpark,                "Test Ignition Outputs"
		subMenu = std_separator
		subMenu = dwellSettings,			"Coil Dwell Time", 0, {isIgnitionEnabled == 1}
		subMenu = std_separator
	    subMenu = multisparkSettings,		"Multispark", 0, {isIgnitionEnabled == 1}
	    subMenu = crankingAdvanceCurve,		"Cranking Ignition Table", 0, {useSeparateAdvanceForCranking == 1}
		subMenu = std_separator
		groupMenu = "Corrections"
		groupChildMenu = cltTimingCorrCurve,		"Coolant Correction", 0, {isIgnitionEnabled == 1}
		groupChildMenu = ignitionIatCorrTableTbl,	"IAT Correction", 0, {isIgnitionEnabled == 1}
		subMenu = ignitionTableTbl,			"Ignition Table Main", 0, {isIgnitionEnabled == 1 && useTPSAdvanceTable == 0}


	menu = "&Cranking/Idle"
		subMenu = idleSettingsDialog,			"Idle Settings"
		subMenu = std_separator	
		groupMenu = "Idle Corrections"
		groupChildMenu = cltIdleRPMCurve,			"Idle Target RPM"
		groupChildMenu = idleVeCurve,              "Idle VE Table", 0, {useSeparateVeForIdle == 1}
		groupChildMenu = idleAdvanceCurve,			"Idle Ignition Table", 0, {useSeparateAdvanceForIdle == 1}
		groupChildMenu = idleTimingPidCorrDialog,	"Closed-loop Idle Timing", {useIdleTimingPidControl == 1}
		groupChildMenu = cltIdleCurve,				"Idle Valve Correction"
		groupChildMenu = iacCoastingCurve,			"Coasting IAC Position for Auto-Idle", 0, {useIacTableForCoasting == 1}
        subMenu = crankingIgnition, "Cranking Ignition Settings"
	    subMenu =crankingFuel,        "Cranking Fuel Settings"
	
		
	

	
	menu = "&Inputs"
		
		subMenu = triggerInputs,			"Trigger Inputs"
		subMenu = DigitalInputs,		    "Digital Inputs"
		subMenu = std_separator
		subMenu = std_separator

		
		# TPS/Pedal
		subMenu = tpsSensor,				"TPS"
		subMenu = pedalSensor,				"Accelerator Pedal"
		subMenu = std_separator

  
		subMenu = cltSensor,				"Coolant Temp Sensor"
		subMenu = iatSensor,				"Intake Air Temp Sensor"
		 subMenu = auxTempSensor1Sensor,	"GP-Temp Sensor 1"
		subMenu = auxTempSensor2Sensor,		"GP-Temp Sensor 2"
		subMenu = std_separator

		# MAP/Baro
		subMenu = mapSensor,				"MAP Sensor"
		subMenu = mapCurves,				"MAP Sampling"
		subMenu = baroSettings,				"Baro Sensor"
        subMenu = oilPressureSensor,		"Oil pressure"
	    subMenu = std_separator
		# MAF
		subMenu = mafSettings,				"MAF Sensor"
		subMenu = mafDecodingCurve,			"MAF Linearization", 0, {mafAdcChannel != 16}
		subMenu = std_separator

		# O2 sensor(s)
		subMenu = egoSettings,				"EGO Sensor"
		subMenu = narrowToWideOxygenCurve,	"Narrow to Wideband approximation"
		subMenu = cj125,			"Wideband Sensor"
		subMenu = std_separator
	    subMenu = speedSensor,                "Speed Sensor"
			subMenu = std_separator
			subMenu = fsioInputsDialog,        	"FSIO Inputs"
		
		menu = "&Outputs" 
                  
		subMenu = std_separator
		subMenu = canBus,                   "CAN-Bus Settings"
		subMenu = std_separator
	    subMenu = boostDialog,          "Boost Control"
		subMenu = boostPidDialog,        "Closed Loop Boost",    { boostType == 1 }
		subMenu = std_separator
		subMenu = vvtDialog,			"VVT Settings"
		subMenu = std_separator
		subMenu = gpPwm1Left,           "Gp Pwm 1 Settings"
        subMenu = gpPwm1Map,             "Gp Pwm 1 Map"
		subMenu = std_separator
		subMenu = gpPwm2Left,           "Gp Pwm 2 Settings"
        subMenu = gpPwm2Map,             "Gp Pwm 2 Map"
		subMenu = std_separator
		subMenu = gpPwm3Left,           "Gp Pwm 3 Settings"
        subMenu = gpPwm3Map,             "Gp Pwm 3 Map"
	    subMenu = std_separator
		subMenu = gpPwm4Left,           "Gp Pwm 4 Settings"
        subMenu = gpPwm4Map,             "Gp Pwm 4 Map"
	    subMenu = std_separator	
        subMenu = smLaunchControl,			"Launch Control"
	;	subMenu = std_separator	
	;	subMenu = smRollingLaunch,			"Rolling Launch"
	;	subMenu = std_separator	
	;	subMenu = antiLag,        			"Antilag Setup"
	    subMenu = std_separator
	;	groupMenu = "Flex Logic"
	;	groupChildMenu = fsioOutputsDialog,        "FSIO Outputs"
	;	groupChildMenu = fsioFormulas,				"FSIO Formulas"
	;	groupChildMenu = fsioCurve2,			    "FSIO Curve #2"
	;	groupChildMenu = fsioCurve3,			    "FSIO Curve #3"
	;	groupChildMenu = fsioCurve4,			    "FSIO Curve #4"
        subMenu = fuelPump,					"Fuel Pump"
		subMenu = fanSetting,				"Fan"
		subMenu = tachSettings,				"Tachometer"

	# Digital outputs


    menu = "&E-Throttle"

        subMenu = etbDialog,				"Electronic Throttle Setup" 
		subMenu = std_separator
		subMenu = pedalToTpsTbl,			"Throttle Target Map"

	menu = "&Controller"
	    subMenu = connection,            	"Connection"
		subMenu = std_separator
		subMenu = ecuStimulator,			"Trigger Simulator"
		subMenu = std_separator
		subMenu = debugging                 "Debug Mode"
		subMenu = std_separator
		subMenu = spiFunction,				"SPI"
		subMenu = std_separator
		subMenu = std_separator
		subMenu = allPins1,					"Full pinout 1/2" 
		subMenu = allPins2,					"Full pinout 2/2" 
		subMenu = std_separator

menu = "Tools"
       subMenu = driveByWireCal, "Calibrate ETB TPS"
	subMenu = driveByWirePedal, "Calibrate Throttle Pedal"
subMenu = analogInputSettings, "Analog Input Settings"
subMenu = frpmTableBins, "RPM axis edit"
subMenu = floadTableBins, "Load axis edit"
subMenu = IrpmTableBins, "RPM Bins for Ignition Tables"       
subMenu = IloadTableBins, "LOAD Bins for Ignition Tables"    

[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition 
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

;
; see TS_IO_TEST_COMMAND in firmware code
;
cmd_erase_fault_codes        = "w\x00\x11\x00\x01"
cmd_test_spk1  = "w\x00\x12\x00\x01"
cmd_test_spk2  = "w\x00\x12\x00\x02"
cmd_test_spk3  = "w\x00\x12\x00\x03"
cmd_test_spk4  = "w\x00\x12\x00\x04"
cmd_test_spk5  = "w\x00\x12\x00\x05"
cmd_test_spk6  = "w\x00\x12\x00\x06"
cmd_test_spk7  = "w\x00\x12\x00\x07"
cmd_test_spk8  = "w\x00\x12\x00\x08"
cmd_test_spk9  = "w\x00\x12\x00\x09"
cmd_test_spk10 = "w\x00\x12\x00\x0a"
cmd_test_spk11 = "w\x00\x12\x00\x0b"
cmd_test_spk12 = "w\x00\x12\x00\x0c"
cmd_test_spk13 = "w\x00\x12\x00\x0d"
cmd_test_spk14 = "w\x00\x12\x00\x0e"
cmd_test_spk15 = "w\x00\x12\x00\x0f"
cmd_test_spk16 = "w\x00\x12\x00\x10"
		
		
cmd_test_inj1  = "w\x00\x13\x00\x01"
cmd_test_inj2  = "w\x00\x13\x00\x02"
cmd_test_inj3  = "w\x00\x13\x00\x03"
cmd_test_inj4  = "w\x00\x13\x00\x04"
cmd_test_inj5  = "w\x00\x13\x00\x05"
cmd_test_inj6  = "w\x00\x13\x00\x06"
cmd_test_inj7  = "w\x00\x13\x00\x07"
cmd_test_inj8  = "w\x00\x13\x00\x08"
cmd_test_inj9  = "w\x00\x13\x00\x09"
cmd_test_inj10 = "w\x00\x13\x00\x0a"
cmd_test_inj11 = "w\x00\x13\x00\x0b"
cmd_test_inj12 = "w\x00\x13\x00\x0c"
cmd_test_inj13 = "w\x00\x13\x00\x0d"
cmd_test_inj14 = "w\x00\x13\x00\x0e"
cmd_test_inj15 = "w\x00\x13\x00\x0f"
cmd_test_inj16 = "w\x00\x13\x00\x10"

; 		
cmd_test_fuel_pump           = "w\x00\x14\x00\x01"
cmd_calibrate_tps_1_closed   = "w\x00\x14\x00\x02"
cmd_calibrate_tps_1_wot      = "w\x00\x14\x00\x03"
cmd_calibrate_tps_2_closed   = "w\x00\x14\x00\x04"
cmd_calibrate_tps_2_wot      = "w\x00\x14\x00\x05"
cmd_calibrate_pedal_up       = "w\x00\x14\x00\x06"
cmd_calibrate_pedal_down     = "w\x00\x14\x00\x07"
cmd_tle8888_init     		 = "w\x00\x14\x00\x08"
cmd_test_ac_relay     		 = "w\x00\x14\x00\x09"
cmd_write_config     		 = "w\x00\x14\x00\x0A"

cmd_test_radiator_fan        = "w\x00\x15\x00\x01"
cmd_test_check_engine_light  = "w\x00\x16\x00\x01"
cmd_test_idle_valve          = "w\x00\x17\x00\x01"
cmd_calibrate_cj125          = "w\x00\x18\x00\x01"
cmd_calibrate_etb_tps        = "w\x00\x19\x00\x01"
cmd_call_from_pit            = "w\x00\x20\x34\x56"
cmd_stop_engine              = "w\x00\x79\x00\x00"

; reboot ECU
cmd_reset_controller         = "w\x00\xbb\x00\x00"
; jump to DFU mode
cmd_dfu         			 = "w\x00\xba\x00\x00"

; See 'executeTSCommand' in firmware source code
; MIATA_NA6_MAP = 41
cmd_set_engine_type_Miata_NA6_MAP			= "w\x00\x30\x00\x29"
; MIATA_NA6_VAF = 57
cmd_set_engine_type_Miata_NA6_VAF			= "w\x00\x30\x00\x39"
; MAZDA_MIATA_2003 = 47
cmd_set_engine_type_Miata_NA2 				= "w\x00\x30\x00\x2F"
; ETB_BENCH_ENGINE = 58
cmd_set_engine_type_etb_test				= "w\x00\x30\x00\x3A"
; ETB_BENCH_ENGINE = 59
cmd_set_engine_type_8888_test				= "w\x00\x30\x00\x3B"
cmd_set_engine_type_default					= "w\x00\x31\x00\x00"
		
[UserDefined]
dialog = limits, "Limits"
		field = "RPM Hard Limit",         	    		rpmHardLimit
		field = "Boost Cut Pressure",					boostCutPressure


	dialog = baseEngineConfig, "Engine Configuration"
;		field = "Engine Preset",						engineType
		field = "Number of Cylinders",					cylindersCount
		field = "Engine Displacement",         			displacement
		field = "Firing Order",							firingOrder
		 field = "Fuel Equation Mode",						fuelAlgorithm
		 field = ""
		 field = "Cranking RPM limit",                	cranking_rpm
		  field = ""
        commandButton = "Update Firmware",                         cmd_dfu
		 commandButton = "Reset Controller",                         cmd_reset_controller 
#if tuneByTPS
		field = "Use TPS instead of Load for VE table",	useTPSBasedVeTable, {isInjectionEnabled == 1 && fuelAlgorithm == LM_SPEED_DENSITY}
#else
		field = "#Enabled for TPS-Based 'VE Autotune Mode' in Project Settings"
		field = "Use TPS instead of Load for VE table",	useTPSBasedVeTable, {0}
#endif

;			Engine->Base Engine Settings
	dialog = engineChars, "Base Engine Settings"
		panel = baseEngineConfig
		panel = limits



	dialog = triggerConfiguration,	"Settings Trigger"
		field = "Trigger type",							trigger_type
		field = "Operation mode / speed",				ambiguousOperationMode
		field = "Only select with cam-sensor if it's needed for sync"
		field = "If used for VVT, select without cam-sensor"
		field = "use only rising edge",					useOnlyRisingEdgeForTrigger    
	    field = "!Reminder that 4-stroke cycle is 720 degrees"
	    field = "Trigger Angle Offset",         		globalTriggerAngleOffset
		field = "#Custom Trigger"
		field = "total Tooth Count",					trigger_customTotalToothCount, {trigger_type == 0}
		field = "skipped Tooth Count",					trigger_customSkippedToothCount, {trigger_type == 0}
        field = "Enable noise filtering",				useNoiselessTriggerDecoder, {trigger_type == 8 || trigger_type == 9}
        field = "Do not print messages in case of sync error",  silentTriggerError

dialog = batteryDialog, "Battery Settings",	yAxis
	    field = "#Use a Multimeter To Set Correction"
		field = "Battery Voltage Correction",	vbattDividerCoeff

	dialog = alternator, "Alternator Settings",	yAxis
		field = "Enabled",								isAlternatorControlEnabled
		field = "On/Off Mode",					onOffAlternatorLogic, {isAlternatorControlEnabled == 1}
		field = "Target",								targetVBatt, {isAlternatorControlEnabled == 1}
		field = "Output",									alternatorControlPin, {isAlternatorControlEnabled == 1}
		field = "Output Mode",								alternatorControlPinMode, {isAlternatorControlEnabled == 1}
		field = "PWM frequency",						alternatorPwmFrequency, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Off Above TPS",						alternatorOffAboveTps, {isAlternatorControlEnabled == 1}
		field = "#PID Settings"
		field = "control period",						alternatorControl_periodMs, {isAlternatorControlEnabled == 1}
		field = "#PID control"
		field = "Offset",								alternatorControl_offset, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "P Gain",								alternatorControl_pFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "I Gain",								alternatorControl_iFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "D Gain",								alternatorControl_dFactor, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Min ??",									alternatorControl_minValue, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "Max ??",									alternatorControl_maxValue, {isAlternatorControlEnabled == 1 && onOffAlternatorLogic == 0}
		field = "#% duty = Pterm + Iterm + Dterm + offset%"

dialog = energySystems, "Battery and Alternator Settings",	yAxis
		panel = batteryDialog
		panel = alternator
	   
		
	

			#Fuel Settings

	dialog = injectionSettings, ""
		field = "Enabled",						isInjectionEnabled
		field = "Injector Flow",			injector_flow
		field = "Mode",							injectionMode

				
	dialog = testInjectors, "Injector Test"
	    field = ""
		 field = "For Checking Outputs"
		 field = ""
		field = "These Buttons Will Generate Some Test Pulses"
		field = ""
		commandButton = "Injector 1", cmd_test_inj1
		commandButton = "Injector 2", cmd_test_inj2
		commandButton = "Injector 3", cmd_test_inj3
		commandButton = "Injector 4", cmd_test_inj4
		commandButton = "Injector 5", cmd_test_inj5
		commandButton = "Injector 6", cmd_test_inj6
		commandButton = "Injector 7", cmd_test_inj7
		commandButton = "Injector 8", cmd_test_inj8
    

	dialog = injectionDeadTime,	"", yAxis
		panel = injectorsDeadTime,		East


	dialog = fuelClosedLoopDialog, "Fuel short-term closed-loop correction"
		field = ""
		field = "Enabled",								fuelClosedLoopCorrectionEnabled
		field = "!No correction below these value"
		field = "CLT - low threshod", 					fuelClosedLoopCltThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "RPM - low threshod", 					fuelClosedLoopRpmThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "EGO - low threshod", 					fuelClosedLoopAfrLowThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "!No correction above these value"
		field = "TPS - high threshod", 					fuelClosedLoopTpsThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "EGO - high threshod", 					fuelClosedLoopAfrHighThreshold, {fuelClosedLoopCorrectionEnabled == 1}
		field = "!PID settings"
		field = "P factor",								fuelClosedLoopPid_pFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "I factor",								fuelClosedLoopPid_iFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "D factor",								fuelClosedLoopPid_dFactor, {fuelClosedLoopCorrectionEnabled == 1}
		field = "min",									fuelClosedLoopPid_minValue, {fuelClosedLoopCorrectionEnabled == 1}
		field = "max",									fuelClosedLoopPid_maxValue, {fuelClosedLoopCorrectionEnabled == 1}




	dialog = tChargeRpmTpsSettings, "RPM+TPS Mode Settings"
	    field = "We use these coefficients to approximate air/fuel charge temperate"
	    field = "based on CLT and IAT, depending on RPM and TPM"
		field = "minRPM minTPS", tChargeMinRpmMinTps
		field = "minRPM maxTPS", tChargeMinRpmMaxTps
		field = "maxRPM minTPS", tChargeMaxRpmMinTps
		field = "maxRPM maxTPS", tChargeMaxRpmMaxTps

	dialog = tChargeGeneralSettings, ""
		field = "tCharge Mode", tChargeMode
		field = "tChange Increment Limit, deg/sec", tChargeAirIncrLimit
		field = "tChange Decrement Limit, deg/sec", tChargeAirDecrLimit
	    field = ""

	dialog = tChargeAirInterpSettings, "Air Interpolation Mode Settings"
		field = "Min tCharge Coeff.", tChargeAirCoefMin
		field = "Max tCharge Coeff.", tChargeAirCoefMax
		field = "Max Air Flow, kg/h", tChargeAirFlowMax
		
	dialog = tChargeSettings, "tCharge Settings"
		panel = tChargeGeneralSettings
		panel = tChargeRpmTpsSettings, { tChargeMode == 0}
		panel = tChargeAirInterpSettings, { tChargeMode == 1}

		
		dialog = coastingFuelCutControl, "Coasting Fuel Cutoff Settings"
		field = "Enable Coasting Fuel Cutoff",			coastingFuelCutEnabled
		field = "Cutoff Activation RPM High Limit",		coastingFuelCutRpmHigh, {coastingFuelCutEnabled == 1}
		field = "Cutoff Deactivation RPM Low Limit",	coastingFuelCutRpmLow, {coastingFuelCutEnabled == 1}
		field = "TPS Deactivation Threshold",			coastingFuelCutTps, {coastingFuelCutEnabled == 1}
		field = "CLT Activation Threshold",				coastingFuelCutClt, {coastingFuelCutEnabled == 1}
		field = "MAP Deactivation Threshold",      coastingFuelCutMap, {coastingFuelCutEnabled == 1}
	
	dialog = EngineLoadAccelPanel, "Accel Enrichment"
		field = "Accel Hold",						engineLoadAccelLength
		field = "Accel Threshold", 				engineLoadAccelEnrichmentThreshold
		field = "Accel Enrichment",	 			engineLoadAccelEnrichmentMultiplier
		field = "Decel threshold", 				engineLoadDecelEnleanmentThreshold
		field = "Decel multiplier",	 			engineLoadDecelEnleanmentMultiplier

	dialog = TpsAccelPanel, "TPS"
   		field = "Length",						tpsAccelLength
		field = "Accel Threshold", 				tpsAccelEnrichmentThreshold
		field = "Decel Threshold", 				tpsDecelEnleanmentThreshold
		field = "Decel Multiplier",	 			tpsDecelEnleanmentMultiplier
		field = "#Accelerator Pump model:"
		field = "Fraction Period",				tpsAccelFractionPeriod
		field = "Fraction Divisor",				tpsAccelFractionDivisor
		
	dialog = WallWettingAccelPanel, "Wall Wetting"
		field = "evaporation time constant",          wwaeTau
		field = "added to wall coef",                   wwaeBeta

	dialog = crankingFuel, "Fuel"
		field = "Injection Mode",						crankingInjectionMode
        field = "Fuel Source For Cranking",             useRunningMathForCranking
		field = "Base fuel pulse width", 				cranking_baseFuel, {useRunningMathForCranking == 0}
		
		field = "Duration at -40C degrees",	startOfCrankingPrimingPulse
		field = "Falloff temperature", primeInjFalloffTemperature
		field = "Enable cylinder cleanup",				isCylinderCleanupEnabled
		field = ""
		field = "Enable faster engine spin-up",			isFasterEngineSpinUpEnabled

		dialog = crankingIgnition, "Ignition Settings While Cranking"
		field = "Advance", 								crankingTimingAngle, {useSeparateAdvanceForCranking == 0}
		field = "Use separate Advance Table for cranking",	useSeparateAdvanceForCranking
		field = "Use Advance Corrections for cranking",	useAdvanceCorrectionsForCranking
        field = "Use fixed cranking dwell",         			useConstantDwellDuringCranking
        field = "Fixed Cranking Dwell",           			ignitionDwellForCrankingMs, {useConstantDwellDuringCranking == 1}
		field = "Cranking Dwell Angle", 						crankingChargeAngle, {useConstantDwellDuringCranking == 0}

;			Tuning->AccelEnrichment
	dialog = AccelEnrich,	"Accel/Decel Enrichment"
		panel = TpsAccelPanel
		panel = WallWettingAccelPanel
		panel = EngineLoadAccelPanel
		field = "Accel Enrichment RPM Max Treshold",		noAccelAfterHardLimitPeriodSecs

				
;	dialog = veTableDialog
;		panel = veTableTbl, South
				
;	dialog = veTableDialog3D, "VE Table"
;		panel = veTableMap, South


	dialog = fuelTableDialog
		panel = fuelTableTbl, South
				
	dialog = fuelTableDialog3D, "Fuel Table"
		panel = fuelTableMap, South
	


#Ignition

	dialog = ignitionSettings, ""
		field = "Enabled",						isIgnitionEnabled
		field = "Mode",							ignitionMode, {isIgnitionEnabled == 1}
		field = "Spark Edge",         	        ignitionPinMode, {isIgnitionEnabled == 1}
		field = "#Wasted spark with individual coils"
		field = "Two wire wasted",				twoWireBatchIgnition, {isIgnitionEnabled == 1 && ignitionMode == 2}
		field = "Timing Mode",					timingMode, {isIgnitionEnabled == 1}
		field = "Use TPS-based Advance Table",	useTPSAdvanceTable, {isIgnitionEnabled == 1 && fuelAlgorithm == LM_SPEED_DENSITY}
		field = "#Use fixed timing while validating with a timing gun"
		field = "Fixed Timing",				fixedTiming, {isIgnitionEnabled == 1 && timingMode == 1}

	dialog = ignitionCylExtra, "Ignition Cylinder Extra Timing"
		field = "Extra cyl #1",                       timing_offset_cylinder1
		field = "Extra cyl #2",                       timing_offset_cylinder2, {cylindersCount > 1}
		field = "Extra cyl #3",                       timing_offset_cylinder3, {cylindersCount > 2}
		field = "Extra cyl #4",                       timing_offset_cylinder4, {cylindersCount > 3}
		field = "Extra cyl #5",                       timing_offset_cylinder5, {cylindersCount > 4}
		field = "Extra cyl #6",                       timing_offset_cylinder6, {cylindersCount > 5}
		field = "Extra cyl #7",                       timing_offset_cylinder7, {cylindersCount > 6}
		field = "Extra cyl #8",                       timing_offset_cylinder8, {cylindersCount > 7}
		field = "Extra cyl #9",                       timing_offset_cylinder9, {cylindersCount > 8}
		field = "Extra cyl #10",                       timing_offset_cylinder10, {cylindersCount > 9}
		field = "Extra cyl #11",                       timing_offset_cylinder11, {cylindersCount > 10} 
		field = "Extra cyl #12",                       timing_offset_cylinder12, {cylindersCount > 11}
	
	dialog = dwellSettings, "", yAxis
		panel = dwellCorrection,	Center

		dialog = testSpark, "Ignition Coil Test"
		field = ""
		 field = "For Checking Outputs"
		 field = ""
		field = "These Buttons Will Generate Some Test Pulses"
		field = ""
		commandButton = "Spark #1", cmd_test_spk1
		commandButton = "Spark #2", cmd_test_spk2
		commandButton = "Spark #3", cmd_test_spk3
		commandButton = "Spark #4", cmd_test_spk4
		commandButton = "Spark #5", cmd_test_spk5
		commandButton = "Spark #6", cmd_test_spk6
		commandButton = "Spark #7", cmd_test_spk7
		commandButton = "Spark #8", cmd_test_spk8

#			Engine->idle Settings	

    dialog = idleSettings,""	
        field = "ETB Idle Control",						useETBforIdleControl
		field = "Idle Solenoid Mode",   	  	    idle_solenoidPinMode, {useETBforIdleControl == 0}
		field = "Idle Solenoid",					idle_solenoidPin, {useETBforIdleControl == 0}
		field = "Idle Solenoid Frequency",   			idle_solenoidFrequency, {useETBforIdleControl == 0}
		field = "ETB Idle Control Range",				etbIdleThrottleRange, {useETBforIdleControl == 1}
		field = "Idle Ignition Table",	               useSeparateAdvanceForIdle
		field = "Idle Fuel Table",		              useSeparateVeForIdle
	    field = idleIncrementalPidCic,					idleIncrementalPidCic
		field = "TPS Deactivation Threshold",			idlePidDeactivationTpsThreshold
	;	field = "Extra IAC if Throttle Pressed",						iacByTpsTaper;
	;	field = "#See Warmup idle multiplier"
		slider = "Manual Idle Position",				manIdlePosition, horizontal
		field = "For ETB Control Set To False"
		field = "Closed Loop",					idleMode
		field = "Cranking"
		field = "Cranking Idle Valve Position",					crankingIACposition
		field = "Idle Afterstart Hold Time",	afterCrankingIACtaperDuration
		field = "Override Idle Valve multiplier for cranking",	overrideCrankingIacSetting
     

	dialog = idlePidSettings, "Idle PID Control"	
		field = "#See Idle Target RPM Curve"
		field = "%/100 means % per 100 error."
		field = "100 error --> 100% duty output"
		field = "P-Gain                          % / 100rpm",idleRpmPid_pFactor
		field = "I-Gain                    % / 100rpm / sec",idleRpmPid_iFactor
		field = "D-Gain                    % / 100rpm / sec",idleRpmPid_dFactor
		field = "Offset"								    ,idleRpmPid_offset
		field = "Min"									    ,idleRpmPid_minValue
		field = "Max"									    ,idleRpmPid_maxValue
		field = "period"								    ,idleRpmPid_periodMs
		field = "RPM dead-zone for PID to deactivate"       ,idlePidRpmDeadZone
		field = "RPM max limit for PID to deactivate"       ,idlePidRpmUpperLimit
		field = "PID Extra for low RPM"                     ,pidExtraForLowRpm
		
		
	dialog = idleSettingsDialog, "", xAxis
	    panel = idleSettings
        panel = idlePidSettings, { idleMode == 0}
		
	

	dialog = idleTimingPidCorrDialog, "", xAxis
		field = "!This timing correction mode is Alpha Version"
		field = "Use Auto-PID ignition advance control",	useIdleTimingPidControl
		field = "#See Idle Target RPM Curve"
		field = "P-factor",									idleTimingPid_pFactor, {useIdleTimingPidControl == 1}
		field = "I-factor",									idleTimingPid_iFactor, {useIdleTimingPidControl == 1}
		field = "D-factor",									idleTimingPid_dFactor, {useIdleTimingPidControl == 1}
		field = "Offset",									idleTimingPid_offset, {useIdleTimingPidControl == 1}
		field = "Min Delta",								idleTimingPid_minValue, {useIdleTimingPidControl == 1}
		field = "Max Delta",								idleTimingPid_maxValue, {useIdleTimingPidControl == 1}
		field = "period",									idleTimingPid_periodMs, {useIdleTimingPidControl == 1}
		field = "#See RPM dead zone to deactivate IAC pid"
		field = "RPM working zone for timing pid",			idleTimingPidWorkZone, {useIdleTimingPidControl == 1}
		field = "RPM working zone falloff",					idlePidFalloffDeltaRpm, {useIdleTimingPidControl == 1}
		field = "RPM dead zone to deactivate timing pid",	idleTimingPidDeadZone, {useIdleTimingPidControl == 1}

#			Cranking->Cranking Settings
	

	
		
	
		
	
	
	dialog = postCrankingEnrichment, "Post-cranking short-time fuel enrichment (NOT IMPLEMENTED #331)"
		field = "Post-Cranking factor", 				postCrankingFactor
		field = "Duration", 				postCrankingDurationSec
		
	


#			Sensors->AUX2 Thermistor Sensor Setting		

	dialog = auxTempSensor1Sensor,	"aux1 Thermistor Settings"
		field = "Input",			auxTempSensor1_adcChannel
		field = "Bias Resistor",       		auxTempSensor1_bias_resistor, {auxTempSensor1_adcChannel != 16}

		field = "#Here is three pairs of thermistor temperature and resistance."
		field = "#Typical Temperatures is -40 deg C, 0 deg C and 100 deg C"
		field = ""
		field = "Lowest Temperature",					auxTempSensor1_tempC_1, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ LT",						auxTempSensor1_resistance_1, {auxTempSensor1_adcChannel != 16}
		field = ""
		field = "Middle Temperature",					auxTempSensor1_tempC_2, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ MT",						auxTempSensor1_resistance_2, {auxTempSensor1_adcChannel != 16}
		field = ""
		field = "Highest Temperature",					auxTempSensor1_tempC_3, {auxTempSensor1_adcChannel != 16}
		field = "Resistance @ HT",						auxTempSensor1_resistance_3, {auxTempSensor1_adcChannel != 16}

;			Sensors->AUX2 Thermistor Sensor Setting
	dialog = auxTempSensor2Sensor, "aux2 Thermistor Settings"
		field = "Input",						auxTempSensor2_adcChannel
		field = "Bias Resistor",						auxTempSensor2_bias_resistor, {auxTempSensor2_adcChannel != 16}
    	field = "#Here is three pairs of thermistor temperature and resistance."
		field = "#Typical temperatures is -40 deg C, 0 deg C and 100 deg C"
		field = ""
		field = "Lowest temperature",					auxTempSensor2_tempC_1, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ LT",						auxTempSensor2_resistance_1, {auxTempSensor2_adcChannel != 16}
		field = ""
		field = "Middle Temperature",					auxTempSensor2_tempC_2, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ MT",						auxTempSensor2_resistance_2, {auxTempSensor2_adcChannel != 16}
		field = ""
		field = "Highest Temperature",					auxTempSensor2_tempC_3, {auxTempSensor2_adcChannel != 16}
		field = "Resistance @ HT",						auxTempSensor2_resistance_3, {auxTempSensor2_adcChannel != 16}
	
#			Inputs

	dialog = tpsSensor, "TPS"
		field = "!See Tools>Calibrate TPS"
		field = "Throttle1 Position Sensor",			tps1_1AdcChannel
		field = "Throttle2 Position Sensor",			tps2_1AdcChannel
		field = "TPS low value detection threshold",	tpsErrorDetectionTooLow, {tps1_1AdcChannel != 16}
		field = "TPS high value detection threshold",	tpsErrorDetectionTooHigh, {tps1_1AdcChannel != 16}

	dialog = pedalSensor, "Accelerator pedal"
		field = "Accelerator position sensor",			throttlePedalPositionAdcChannel
		field = "Up Voltage",					throttlePedalUpVoltage
		field = "Down (WOT) Voltage",				throttlePedalWOTVoltage


	dialog = DigitalInputs,					"Digital Inputs"
		field = "Clutch Down Input",						clutchDownPin
		field = "Input Mode",					clutchDownPinMode
		field = "Clutch Up Input",						clutchUpPin
		field = "Input Mode",                          clutchUpPinMode
		field = "Brake Pedal Input",						brakePedalPin
		field = "A/C Switch",							acSwitchAdc

	dialog = triggerInputs,					"Trigger Inputs"
		field = "!ECU reboot needed to apply these settings"
		field = "#Trigger 1 are Crank Sensor unless some rare cases"
		field = "Primary channel", 						triggerInputPins1
		field = "Invert Primary",						invertPrimaryTriggerSignal
		field = "Secondary channel", 					triggerInputPins2,            { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = "Invert Secondary",						invertSecondaryTriggerSignal, { trigger_type != 0 && trigger_type != 8 && trigger_type != 9 && trigger_type != 18 && trigger_type != 20}
		field = "Cam Sync/VVT input",					camInputs1
       


#			Sensors->CLT sensor


 dialog = cltSensor, "Calibrate Coolant Sensor"
      field = "Coolant Sensor Input", 						clt_adcChannel
	  field = "Bias Resistor",						clt_bias_resistor, {clt_adcChannel != 16}
      settingSelector = "Common Coolant Sensors"
      settingOption = "Bosch NTC",  clt_tempC_1=-40, clt_resistance_1=45340,clt_tempC_2=30, clt_resistance_2=1707,clt_tempC_3=120, clt_resistance_3=113
      settingOption = "Delphi M12",  clt_tempC_1=-40, clt_resistance_1=100865,clt_tempC_2=30, clt_resistance_2=2240,clt_tempC_3=120, clt_resistance_3=101
	  settingOption = "DTM 1/8npt",  clt_tempC_1=-40, clt_resistance_1=45340,clt_tempC_2=30, clt_resistance_2=2501,clt_tempC_3=120, clt_resistance_3=113
	  field = ""
	  field = "Temperature ",  clt_tempC_1
      field = "Resistance ", clt_resistance_1
	 field = ""
	  field = "Temperature ", clt_tempC_2
      field = "Resistance ", clt_resistance_2
	  field = ""
	  field = "Temperature ", clt_tempC_3
      field = "Resistance ", clt_resistance_3
      field = "Linear characteristic",				useLinearCltSensor, {clt_adcChannel != 16}

#			Sensors->IAT sensor
		
dialog = iatSensor, "Calibrate Intake Air Temp Sensor"
      field = "IAT Sensor Input", 						iat_adcChannel
	  field = "Bias Resistor",						iat_bias_resistor, {iat_adcChannel != 16}
      settingSelector = "Common IAT Sensors"
      settingOption = "Bosch NTC",  iat_tempC_1=-40, iat_resistance_1=45340,iat_tempC_2=30, iat_resistance_2=1707,iat_tempC_3=120, iat_resistance_3=113
      settingOption = "Delphi M12",  iat_tempC_1=-40, iat_resistance_1=100865,iat_tempC_2=30, iat_resistance_2=2240,iat_tempC_3=120, iat_resistance_3=101
	  settingOption = "DTM 1/8npt",  iat_tempC_1=-40, iat_resistance_1=45340,iat_tempC_2=30, iat_resistance_2=2501,iat_tempC_3=120, iat_resistance_3=113
	  field = ""
	  field = "Temperature ",  iat_tempC_1
      field = "Resistance ", iat_resistance_1
	  field = ""
	  field = "Temperature ", iat_tempC_2
      field = "Resistance ", iat_resistance_2
	  field = ""
	  field = "Temperature ", iat_tempC_3
      field = "Resistance ", iat_resistance_3
      field = "Linear characteristic",				useLinearIatSensor, {iat_adcChannel != 16}

; 				Sensors->Oil pressure sensor
	dialog = oilp_settings, "Oil pressure sensor"
		field = "Oil Pressure ADC input",				oilPressure_hwChannel
		field = "low voltage",							oilPressure_v1, {oilPressure_hwChannel != 16}
		field = "low pressure",							oilPressure_value1, {oilPressure_hwChannel != 16}
		field = "high voltage",							oilPressure_v2, {oilPressure_hwChannel != 16}
		field = "high pressure",						oilPressure_value2, {oilPressure_hwChannel != 16}

    dialog = oilPressureSensor, "", xAxis
		panel = oilp_settings
		gauge = OilPressGauge
	
#			Sensors->MAP sensor

	dialog = baroSettings, "Baro sensor"
		field = "Baro ADC input",						baroSensor_hwChannel
		field = baroSensor_lowValue,					baroSensor_lowValue, {baroSensor_hwChannel != 16}
		field = baroSensor_highValue,					baroSensor_highValue, {baroSensor_hwChannel != 16}
		field = baroSensor_type,						baroSensor_type, {baroSensor_hwChannel != 16}

	dialog = mapCurves, "MAP sampling", yAxis
		field = "isMapAveragingEnabled",				isMapAveragingEnabled
		panel = map_samplingAngleCurve
		panel = map_samplingWindowCurve


	dialog = mafSettings, "MAF Sensor", yAxis
		field = "Input", 						mafAdcChannel
		
dialog = mapSensorAnalog, "Calibrate MAP/Baro"
      field = "#MAP Sensor"
field = "MAP Type",								map_sensor_type
      field = "MAP Sensor Input", 						map_sensor_hwChannel
	  field = ""
	     settingSelector = "Common Map Sensors"
             settingOption = "MPX4115",  map_sensor_lowValue=10,   map_sensor_highValue=118 
             settingOption = "MPX4250",  map_sensor_lowValue=10,   map_sensor_highValue=260
             settingOption = "GM 1-BAR", map_sensor_lowValue=10,   map_sensor_highValue=105
             settingOption = "GM 2-BAR", map_sensor_lowValue=9,  map_sensor_highValue=208
             settingOption = "GM 3-BAR", map_sensor_lowValue=1,  map_sensor_highValue=315 
             settingOption = "MPXH6300", map_sensor_lowValue=1,  map_sensor_highValue=315
             settingOption = "MPX5700", map_sensor_lowValue=-31,  map_sensor_highValue=746
             settingOption = "MPX6400", map_sensor_lowValue=3,  map_sensor_highValue=416
             settingOption = "Denso 079800", map_sensor_lowValue=0,  map_sensor_highValue=173
             settingOption = "VW/Audi/Porsche 250kPa", map_sensor_lowValue=26,  map_sensor_highValue=250
             settingOption = "Bosch 3 Bar TMAP", map_sensor_lowValue=-6,  map_sensor_highValue=323
field = ""
          field =    "kPa At 0.0 Volts",   map_sensor_lowValue
          field =    "kPa At 5.0 Volts",   map_sensor_highValue
 
    
;			Sensors->MAP sensor
	dialog = mapSensorAnalogXX, "MAP sensor", yAxis		
		field = "MAP Sensor Input", 						map_sensor_hwChannel
		field = "MAP Type",								map_sensor_type
		field = "Linearization Points"
		field = "MAP Voltage Low", 	 		    mapLowValueVoltage, {map_sensor_type == 0}
		field = "MAP Kpa Low",  		        map_sensor_lowValue, {map_sensor_type == 0}
		
		field = ""
		
		field = "MAP Voltage High",               mapHighValueVoltage, {map_sensor_type == 0}
		field = "MAP Kpa High",               	map_sensor_highValue, {map_sensor_type == 0}

	
	dialog = mapSensorFreq, "MAP frequency sensor", yAxis
		field = "MAP Freq",								frequencyReportingMapInputPin
		field = "0 kPa freq",							mapFrequency0Kpa
		field = "100 kpa freq",							mapFrequency100Kpa

	dialog = mapCommon, "MAP common settings"
		field = "frequency-based MAP",					hasFrequencyReportingMapSensor
		field = ""
		field = "Low Error Threshold",					mapErrorDetectionTooLow
		field = "High Error Threshold",					mapErrorDetectionTooHigh
		field = ""
		field = "Measure Map Only In One Cylinder",		measureMapOnlyInOneCylinder
		field = "Minimum MAP samples",					mapMinBufferLength

	dialog = mapSensor, "", yAxis
		panel = mapCommon
		panel = mapSensorAnalog, {hasFrequencyReportingMapSensor == 0}
		panel = mapSensorFreq, {hasFrequencyReportingMapSensor == 1}



	 


#			Sensors->EGO sensor

 dialog = egoSettings_sensor, "Calibrate EGO Sensor"
      settingSelector = "EGO Sensors"
      settingOption = "BPSX",  afr_v1=0, afr_value1=9, afr_v2=5, afr_value2=19
	  settingOption = "INNOVATE",  afr_v1=0, afr_value1=7.35, afr_v2=5, afr_value2=22.39
	  settingOption = "14Point7",  afr_v1=0, afr_value1=9.996, afr_v2=5, afr_value2=19.992
	  settingOption = "PLX",  afr_v1=0, afr_value1=10, afr_v2=5, afr_value2=20
	    field = ""
      	field = "Low Voltage", 							afr_v1
        field = "Low Value", 							afr_value1
        field = ""
		field = "High Voltage", 						afr_v2
		field = "High Value", 							afr_value2
        field = ""
		field = "Correction",							egoValueShift
		
		
   dialog = egoSettings_IO,	"EGO Sensor I/O"
		field = "Input", 						afr_hwChannel
		field = "Output",						o2heaterPin

	dialog = egoSettings, "", yAxis
		panel = egoSettings_IO
		panel = egoSettings_sensor,	{afr_hwChannel != 16}

	dialog = cj125, "Wideband Sensor"
		field = "Enabled",								isCJ125Enabled
		field = "Using 4.9 sensor?",					cj125isLsu49, {isCJ125Enabled == 1}
	    field =	"4.2 / 4.9 Pin",                        cj125ModePin, {isCJ125Enabled == 1}
		field = "4.2 / 4.9 PinMode",                    cj125ModePinMode, {isCJ125Enabled == 1}
    	field = "!ECU reboot needed to apply these settings"
		field = "ChipSelect pin",						cj125CsPin, {isCJ125Enabled == 1}
		field = "ChipSelect mode",						cj125CsPinMode, {isCJ125Enabled == 1}
		field = "!See also 'Controller-SPI setting'"
		field = "SPI device",							cj125SpiDevice
		field = "Heater pin",							wboHeaterPin, {isCJ125Enabled == 1}
		field = "UA input",								cj125ua, {isCJ125Enabled == 1}
		field = "UR input",								cj125ur, {isCJ125Enabled == 1}
		field = "Is UA input divided?"					cj125isUaDivided, {isCJ125Enabled == 1}
		field = "Is UR input divided?"					cj125isUrDivided, {isCJ125Enabled == 1}
		commandButton = "Start Calibration",            cmd_calibrate_cj125         



#Outputs		

	dialog = fuelPump, "Fuel Pump"
		field = "Output",						fuelPumpPin
		field = "Output Mode",         	        fuelPumpPinMode
		field = "Prime duration",				startUpFuelPumpDuration
		field = "Test Fuel Pump"
		commandButton = "Fuel Pump", cmd_test_fuel_pump

	dialog = mainRelay, "Main relay output"
		field = "Output",  						mainRelayPin
		field = "Output Mode",			         	mainRelayPinMode

    dialog = speedSensorLeft
		field = "Input",					vehicleSpeedSensorInputPin
		field = "Multiplier",				vehicleSpeedCoef

	dialog = speedSensor, "Speed Sensor", xAxis
		panel = speedSensorLeft
		gauge = VSSGauge

     dialog = fanSetting, "Fan Settings"
		field = "Output",								fanPin
		field = "Output Mode",							fanPinMode
		field = "On temperature",					fanOnTemperature
		field = "Off temperature",					fanOffTemperature
		field = "Use This Button To Test Fan Output"
		commandButton = "Fan Test", cmd_test_radiator_fan

	dialog = vvt_left, ""
			
		field = "Enable",								isVvtControlEnabled
		field = "Output",							vvtControlPin
		field = "Output Mode",							vvtControlPinMode
		field = "Number of Teeth"
		field = "Minimum Coolant Temp",                 minVvtTemperature
		field = "Maximum Advance/Retard",               maxVvtDeviation
		field = "Load Axis",                            vvtLoadAxis
		field = "Mode",							     	vvtType
	    field = "Trigger Wheel",	                                    vvtMode
	  ;  field = "Rising Edge",					    vvtCamSensorUseRise, {trigger_type != 80}
	    field = "Offset",		                  	vvtOffset
	    field = "Polarity",		         	vvtDisplayInverted
		field = "Frequency",						  vvtPwmFrequency
		field = "Min Duty",									vvtPid_minValue, {isVvtControlEnabled == 1}
		field = "Max Duty",									vvtPid_maxValue, {isVvtControlEnabled == 1}
		field = "#PID Settings"
		field = "Control Interval",						vvtPid_periodMs, { isVvtControlEnabled && vvtType == 1 }
		field = "P Gain",								vvtPid_pFactor, { isVvtControlEnabled && vvtType == 1 }
		field = "I Gain",								vvtPid_iFactor, { isVvtControlEnabled && vvtType == 1 }
		field = "D Gain",								vvtPid_dFactor,{ isVvtControlEnabled && vvtType == 1 }
		

dialog = vvtDialog, "", border
        panel = vvt_left, West
        panel = vvtTableTbl, Center	

;Boost Open Loop

dialog = boost_left, ""
        field = "Enable",                           isBoostControlEnabled
        field = "Control Mode",                     boostType, { isBoostControlEnabled }
		field = "Output",							boostControlPin, { isBoostControlEnabled }
		field = "Output Mode",                      boostControlPinMode, { isBoostControlEnabled }
		field = "Frequency",						boostPwmFrequency, { isBoostControlEnabled } 
		
dialog = boostDialog, "", border
        panel = boost_left, West
        panel = boostTableTbl, Center

;Boost Closed Loop

dialog = boostPidleft, ""
   field = "P Gain", 	                        boostPid_pFactor, { isBoostControlEnabled && boostType == 1 }				
	   field = "I Gain",                            boostPid_iFactor, { isBoostControlEnabled && boostType == 1 }			
	   field = "D Gain",                            boostPid_dFactor, { isBoostControlEnabled && boostType == 1 }			
	;boostPid_offset					
	   field = "Control Period",                    boostPid_periodMs, { isBoostControlEnabled && boostType == 1 }			
	   field = "Min Duty",                          boostPid_minValue, { isBoostControlEnabled && boostType == 1 }			
	   field = "Max Duty",                          boostPid_maxValue, { isBoostControlEnabled && boostType == 1 }	

 dialog = boostTableDialog, "", card
    panel = boostTable2Tbl

	   dialog = boostPidDialog, "", border
        panel = boostPidleft, West
        panel = boostTableDialog, Center		
 
; GP PWM 1

dialog = gpPwm1Left, ""
       
		field = "Output",							gppwmIo_gpPwm1Pin
		field = "Output Mode",						gppwmIo_gpPwm1PinMode
		field = "Frequency",						gppwm_gpPwm1Frequency
       	field = "Load Axis",                        gpPwm1Load
        field = ""
		field = "Conditions"
        field =	"Enable With Switch Input" ,        gppwm_conditionGpPwm1Switch
		field = "Pin",                              gppwmIo_gpPwm1InputPin, { gppwm_conditionGpPwm1Switch }	
	    field =	"Enable Below/Above Rpm" ,          gppwm_conditionGpPwm1Rpm				
	    field =	"Enabled at Rpm",                   gppwm_gpPwm1BelowOrAboveRpm	, { gppwm_conditionGpPwm1Rpm }	
		field = "Rpm",                              gppwm_enableGpPwm1AtRpm, { gppwm_conditionGpPwm1Rpm }	
        field = ""
        field =	"Enable Below/Above CLT" ,          gppwm_conditionGpPwm1Clt
		field =	"Enabled at CLT",                   gppwm_gpPwm1BelowOrAboveClt, { gppwm_conditionGpPwm1Clt }	
		field = "Temperature",                      gppwm_enableGpPwm1AtClt, { gppwm_conditionGpPwm1Clt }	
        field = ""
        field =	"Enable Below/Above TPS" ,          gppwm_conditionGpPwm1Tps
		field =	"Enabled at TPS",                   gppwm_gpPwm1BelowOrAboveTps, { gppwm_conditionGpPwm1Tps }	
		field = "TPS %",                            gppwm_enableGpPwm1AtTps, { gppwm_conditionGpPwm1Tps }	
        field = ""
		field = "Enable Below/Above Map" ,          gppwm_conditionGpPwm1Map
		field =	"Enabled at Kpa",                   gppwm_gpPwm1BelowOrAboveMap, { gppwm_conditionGpPwm1Map }	
		field = "Kpa",                              gppwm_enableGpPwm1AtMap, { gppwm_conditionGpPwm1Map }	

 dialog = gpPwm1Map, "", card 
 panel = gpPwmTable1Tbl

		
dialog = gpPwmDialog1, "", border
        panel = gpPwm1Left, West
        panel =  gpPwm1Map, Center

; GP PWM 2
dialog = gpPwm2Left, ""
      		field = "Output",							gppwmIo_gpPwm2Pin
		field = "Output Mode",						gppwmIo_gpPwm2PinMode
		field = "Frequency",						gppwm_gpPwm2Frequency
       	field = "Load Axis",                        gpPwm2Load
        field = ""
		field = "Conditions"
        field =	"Enable With Switch Input" ,        gppwm_conditionGpPwm2Switch
		field = "Pin",                              gppwmIo_gpPwm2InputPin, { gppwm_conditionGpPwm2Switch }	
	    field =	"Enable Below/Above Rpm" ,          gppwm_conditionGpPwm2Rpm				
	    field =	"Enabled at Rpm",                   gppwm_gpPwm2BelowOrAboveRpm	, { gppwm_conditionGpPwm2Rpm }	
		field = "Rpm",                              gppwm_enableGpPwm2AtRpm, { gppwm_conditionGpPwm2Rpm }	
        field = ""
        field =	"Enable Below/Above CLT" ,          gppwm_conditionGpPwm2Clt
		field =	"Enabled at CLT",                   gppwm_gpPwm2BelowOrAboveClt, { gppwm_conditionGpPwm2Clt }	
		field = "Temperature",                      gppwm_enableGpPwm2AtClt, { gppwm_conditionGpPwm2Clt }	
        field = ""
        field =	"Enable Below/Above TPS" ,          gppwm_conditionGpPwm2Tps
		field =	"Enabled at TPS",                   gppwm_gpPwm2BelowOrAboveTps, { gppwm_conditionGpPwm2Tps }	
		field = "TPS %",                            gppwm_enableGpPwm2AtTps, { gppwm_conditionGpPwm2Tps }	
        field = ""
		field = "Enable Below/Above Map" ,          gppwm_conditionGpPwm2Map
		field =	"Enabled at Kpa",                   gppwm_gpPwm2BelowOrAboveMap, { gppwm_conditionGpPwm2Map }	
		field = "Kpa",                              gppwm_enableGpPwm2AtMap, { gppwm_conditionGpPwm2Map }	

 dialog = gpPwm2Map, "", card 
 panel = gpPwmTable2Tbl

		
dialog = gpPwmDialog2, "", border
        panel = gpPwm2Left, West
        panel =  gpPwm2Map, Center

; GP PWM 3

dialog = gpPwm3Left, ""
       field = "Output",							gppwmIo_gpPwm3Pin
		field = "Output Mode",						gppwmIo_gpPwm3PinMode
		field = "Frequency",						gppwm_gpPwm3Frequency
       	field = "Load Axis",                        gpPwm3Load
        field = ""
		field = "Conditions"
        field =	"Enable With Switch Input" ,        gppwm_conditionGpPwm3Switch
		field = "Pin",                              gppwmIo_gpPwm3InputPin, { gppwm_conditionGpPwm3Switch }	
	    field =	"Enable Below/Above Rpm" ,          gppwm_conditionGpPwm3Rpm				
	    field =	"Enabled at Rpm",                   gppwm_gpPwm3BelowOrAboveRpm	, { gppwm_conditionGpPwm3Rpm }	
		field = "Rpm",                              gppwm_enableGpPwm3AtRpm, { gppwm_conditionGpPwm3Rpm }	
        field = ""
        field =	"Enable Below/Above CLT" ,          gppwm_conditionGpPwm3Clt
		field =	"Enabled at CLT",                   gppwm_gpPwm3BelowOrAboveClt, { gppwm_conditionGpPwm3Clt }	
		field = "Temperature",                      gppwm_enableGpPwm3AtClt, { gppwm_conditionGpPwm3Clt }	
        field = ""
        field =	"Enable Below/Above TPS" ,          gppwm_conditionGpPwm3Tps
		field =	"Enabled at TPS",                   gppwm_gpPwm3BelowOrAboveTps, { gppwm_conditionGpPwm3Tps }	
		field = "TPS %",                            gppwm_enableGpPwm3AtTps, { gppwm_conditionGpPwm3Tps }	
        field = ""
		field = "Enable Below/Above Map" ,          gppwm_conditionGpPwm3Map
		field =	"Enabled at Kpa",                   gppwm_gpPwm3BelowOrAboveMap, { gppwm_conditionGpPwm3Map }	
		field = "Kpa",                              gppwm_enableGpPwm3AtMap, { gppwm_conditionGpPwm3Map }	

 dialog = gpPwm3Map, "", card 
 panel = gpPwmTable3Tbl

		
dialog = gpPwmDialog3, "", border
        panel = gpPwm3Left, West
        panel =  gpPwm3Map, Center



; GP PWM 4

dialog = gpPwm4Left, ""
       field = "Output",							gppwmIo_gpPwm4Pin
		field = "Output Mode",						gppwmIo_gpPwm4PinMode
		field = "Frequency",						gppwm_gpPwm4Frequency
       	field = "Load Axis",                        gpPwm4Load
        field = ""
		field = "Conditions"
        field =	"Enable With Switch Input" ,        gppwm_conditionGpPwm4Switch
		field = "Pin",                              gppwmIo_gpPwm4InputPin, { gppwm_conditionGpPwm4Switch }	
	    field =	"Enable Below/Above Rpm" ,          gppwm_conditionGpPwm4Rpm				
	    field =	"Enabled at Rpm",                   gppwm_gpPwm4BelowOrAboveRpm	, { gppwm_conditionGpPwm4Rpm }	
		field = "Rpm",                              gppwm_enableGpPwm4AtRpm, { gppwm_conditionGpPwm4Rpm }	
        field = ""
        field =	"Enable Below/Above CLT" ,          gppwm_conditionGpPwm4Clt
		field =	"Enabled at CLT",                   gppwm_gpPwm4BelowOrAboveClt, { gppwm_conditionGpPwm4Clt }	
		field = "Temperature",                      gppwm_enableGpPwm4AtClt, { gppwm_conditionGpPwm4Clt }	
        field = ""
        field =	"Enable Below/Above TPS" ,          gppwm_conditionGpPwm4Tps
		field =	"Enabled at TPS",                   gppwm_gpPwm4BelowOrAboveTps, { gppwm_conditionGpPwm4Tps }	
		field = "TPS %",                            gppwm_enableGpPwm4AtTps, { gppwm_conditionGpPwm4Tps }	
        field = ""
		field = "Enable Below/Above Map" ,          gppwm_conditionGpPwm4Map
		field =	"Enabled at Kpa",                   gppwm_gpPwm4BelowOrAboveMap, { gppwm_conditionGpPwm4Map }	
		field = "Kpa",                              gppwm_enableGpPwm4AtMap, { gppwm_conditionGpPwm4Map }	

 dialog = gpPwm4Map, "", card 
 panel = gpPwmTable4Tbl

		
dialog = gpPwmDialog4, "", border
        panel = gpPwm4Left, West
        panel =  gpPwm4Map, Center



;			Flex Logic
;	dialog = fsioIO, "Outputs"
;		field = "output #1", 							fsioOutputPins1
;         field = "#1",									fsioFormulas1
;field = "freq #1", 								fsioFrequency1
;		field = "output #2", 							fsioOutputPins2
;        field = "#2",									fsioFormulas2
;	field = "freq #2", 								fsioFrequency2
;		field = "output #3", 							fsioOutputPins3
;         field = "#3",									fsioFormulas3
;	field = "freq #3", 								fsioFrequency3
;		field = "output #4", 							fsioOutputPins4
;        field = "#4",									fsioFormulas4
;	field = "freq #4", 								fsioFrequency4
;		field = "output #5", 							fsioOutputPins5
;        field = "#5",									fsioFormulas5
;field = "freq #5", 								fsioFrequency5
;		field = "output #6", 							fsioOutputPins6
;         field = "#6",									fsioFormulas6
;field = "freq #6", 								fsioFrequency6
;		field = "output #7", 							fsioOutputPins7
;        field = "#7",									fsioFormulas7
;field = "freq #7", 								fsioFrequency7
;		field = "output #8", 							fsioOutputPins8
;			field = "#8",									fsioFormulas8
;			field = "freq #8", 								fsioFrequency8

		
	
	
	
		
		
		
	
		
	
;	dialog = fsioSetting, "Setting"
;		field = "Set number is not associated with the output number."
;		field = "Set number, only the cell number with some numbers."
;		field = "set #1",								fsio_setting1
;		field = "set #2",								fsio_setting2
;		field = "set #3",								fsio_setting3
;		field = "set #4",								fsio_setting4
;		field = "set #5",								fsio_setting5
;		field = "set #6",								fsio_setting6
;		field = "set #7",								fsio_setting7
;		field = "set #8",								fsio_setting8
		
		
;	dialog = fsioOutputsDialog, "FSIO outputs", border
;		panel = fsioIO,			Center
		

	
	
	dialog = fsioInputsDialog, "FSIO inputs"
		field = "ADC #1",								fsioAdc1
		field = "ADC #2",								fsioAdc2
	
			;			Racing Features->Launch Control
	dialog = smLaunchControl, "Launch Control Settings"
        field = "Enable Launch Control",               	launchControlEnabled
		field = "Activation Mode",                      launchActivationMode
	    field = "Switch Input",                     	launchActivatePin,  {launchActivationMode == 0 && launchControlEnabled == 1}
		
		field = "Clutch Input", 						clutchDownPin,      {launchActivationMode == 1 && launchControlEnabled == 1}
		field = "RPM Settings"
		field = "Launch RPM",            	    		launchRpm,  {launchControlEnabled == 1}
        field = "Hard Cut RPM Range",                   hardCutRpmRange,  {launchControlEnabled == 1}
		 field = "Enable Launch Retard",             	enableLaunchRetard, {launchControlEnabled == 1 }
		field = "Ignition Retard RPM Range",            launchTimingRpmRange,  {launchControlEnabled == 1 }
		field = "Enable Conditions"
		field = "Activation Delay",                     launchActivateDelay, {launchControlEnabled == 1}
		field = "Disable By Speed",	                    launchDisableBySpeed, {launchControlEnabled == 1}
		field = "Speed Treshold",                       launchSpeedTreshold,  {launchControlEnabled == 1 && launchDisableBySpeed == 1}
	    field = "Disable Below TPS", 	                launchTpsTreshold, {launchControlEnabled == 1}
	    field = "Launch Settings"
		field = "Extra Fuel",           				launchFuelAdded,  {launchControlEnabled == 1}
        field = "Enable Launch Boost",               	enableLaunchBoost, {launchControlEnabled == 1}
        field = "Boost Solenoid Duty",	                launchBoostDuty,  {launchControlEnabled == 1 && enableLaunchBoost == 1}
	   
		field = "Ignition Retard",      				launchTimingRetard,  {launchControlEnabled == 1 }
		
		field = "Smooth Retard Mode",                   launchSmoothRetard,  {launchControlEnabled == 1}
		field = "Hard Cut Mode"
		field = "Ignition Cut",    						launchSparkCutEnable,  {launchControlEnabled == 1}
		field = "Fuel Cut",	    						launchFuelCutEnable,  {launchControlEnabled == 1}
		
		



					;			Racing Features->Rolling Launch
	dialog = smRollingLaunch, "Rolling Launch Settings(Not Implemented)"
       field = "Enable Rolling Launch",                rollingLaunchEnabled

					;			Racing Features->Rolling Launch
	dialog = antiLag, "AntiLag Settings(Not Implemented)"
        field = "Enable AntiLag",               antiLagEnabled
	    field = "Activation Mode",          	antiLagActivationMode,  {antiLagEnabled == 1}
        field = "Switch Input",                 antiLagActivatePin,  {antiLagActivationMode == 1 && antiLagEnabled == 1}
        field = "Antilag Timeout",            	antilagTimeout, {antiLagEnabled == 1}
		field = "Rpm Treshold",                         antiLagRpmTreshold,  {antiLagEnabled == 1}
	    
	dialog = coastingFuelCutControl, "Coasting Fuel Cutoff Settings"
		field = "Enable Coasting Fuel Cutoff",			coastingFuelCutEnabled
		field = "Cutoff Activation RPM High Limit",		coastingFuelCutRpmHigh, {coastingFuelCutEnabled == 1}
		field = "Cutoff Deactivation RPM Low Limit",	coastingFuelCutRpmLow, {coastingFuelCutEnabled == 1}
		field = "TPS Deactivation Threshold",			coastingFuelCutTps, {coastingFuelCutEnabled == 1}
		field = "CLT Activation Threshold",				coastingFuelCutClt, {coastingFuelCutEnabled == 1}
	field = "MAP Deactivation Threshold",      coastingFuelCutMap, {coastingFuelCutEnabled == 1}


# Electronic Throttle

	dialog = etbPidDialog, "PID Settings"
	
	 field = "#Set FeedForward map before tuning PID"
		field = "P Gain",								etb_pFactor, {throttlePedalPositionAdcChannel != 16}
		field = "I Gain",								etb_iFactor, {throttlePedalPositionAdcChannel != 16}
		field = "D Gain",								etb_dFactor, {throttlePedalPositionAdcChannel != 16}
		field = "Control Update Period",				etb_periodMs, {throttlePedalPositionAdcChannel != 16}
		field = "DeadBand",                             etbDeadband
		


	dialog = etbDialogLeft
		  field = ""
	  settingSelector = "ETB Presets"
	  field = ""
      settingOption = "Bosch 0 280 750 009",  etb_pFactor=12, etb_iFactor=20,etb_dFactor=0, etb_periodMs=5,etb_minValue=-120, etb_maxValue=120
	   settingOption = "Bosch 0 280 075 156",  etb_pFactor=12, etb_iFactor=20,etb_dFactor=0, etb_periodMs=5,etb_minValue=-120, etb_maxValue=120
	   settingOption = "VDO A2C53112155",  etb_pFactor=12, etb_iFactor=20,etb_dFactor=0, etb_periodMs=5,etb_minValue=-120, etb_maxValue=120
	   settingOption = "DELCO 12605109",  etb_pFactor=12, etb_iFactor=20,etb_dFactor=0, etb_periodMs=5,etb_minValue=-120, etb_maxValue=120
	 field = ""
		field = "Frequency",						etbFreq, {throttlePedalPositionAdcChannel != 16}
		 field = ""
		field = "Set PWM Output At Hold(While Manually Calibrating TPS)", pauseEtbControl
		 field = ""
		; field = "Turns Off PID While Tuning Feed Forward", turnEtbPidoff
		  field = ""
		panel = etbPidDialog
		

	dialog = etbDialogRight
		field = "ETB-Tps Calibration At Start",	etbCalibrationOnStart
		field = "ETB Idle Control",						useETBforIdleControl
		field = "Maximum Idle Opening",				etbIdleThrottleRange, {useETBforIdleControl == 1}
		field = "Cranking/TPS Angle % / Max",					crankingIACposition
		slider = "Idle Position % / Max",				manIdlePosition, horizontal, {useETBforIdleControl == 1}
		field = ""
		field = "Idle Mode",					idleMode
	;	field = "Neutral Position",						etbNeutralPosition
	;  field = etbCalibrationOnStart,					etbCalibrationOnStart

		dialog = etbDialogBottom
		field = "Feed Forward Table"     
		field = "#Set PID Gains to 0 and adjust Duty Cycle until TPS follows your pedal as good as possible "
        panel = etbTpsBiasCurve
	

	dialog = etbDialog, "Electronic Throttle", border
	
		panel = etbDialogLeft, West
		panel = etbDialogRight, East
		panel = etbDialogBottom, South





	dialog = debugging, "Debug"
      	field = "Debug Mode",							debugMode
		
	dialog = enterDfu, ""
	field = "Enter DFU Mode"
     commandButton = "Update Firmware",                         cmd_dfu 
     commandButton = "Reset Controller",                         cmd_reset_controller	
commandButton = "Write Config", cmd_write_config      
  commandButton = "Erase Fault Codes",         cmd_erase_fault_codes
	
	dialog = updateFirmware, ""
		panel = enterDfu
	
;			Board->ECU stimulator
	dialog = ecuStimulator, "Trigger Simulator"
		field = "Engine Speed",   					triggerSimulatorFrequency
		field = "Direct Simulation",						directSelfStimulation
		field = ""
		field = "trigger simulator pin #1", 			triggerSimulatorPins1
		field = "trigger simulator pin mode #1", 		triggerSimulatorPinModes1
		

	
		dialog = monitoringSettings, "rusEfi Console Settings"			
		field = "Sensor Sniffer",         	    		sensorChartMode
		field = "  Threshold",							sensorSnifferRpmThreshold
		field = "  Each X cycle",						sensorChartFrequency
		field = "Engine Sniffer", 						isEngineChartEnabled			
		field = "  Threshold", 							engineSnifferRpmThreshold

	

	dialog = tachSettings, "Tachometer Output"
		field = "!See also dizzySparkOutputPin"
		field = "Output",									tachOutputPin
		field = "Output Mode",								tachOutputPinMode
		field = "Rise at trigger index",				tachPulseTriggerIndex
		field = "Pulse duration is duty cycle",			tachPulseDurationAsDutyCycle
		field = "Pulse duration",						tachPulseDuractionMs


;			Board->Connection
	dialog = tsPort, "TunerStudio Port"
		field = "tunerStudioSerialSpeed",				tunerStudioSerialSpeed
		field = "Use PC10/PC11 serial?",				useSerialPort
		field = "uartConsoleSerialSpeed",				uartConsoleSerialSpeed
		
	dialog = canBus, "CAN Bus"
		field = "Can Read Enabled",						canReadEnabled
		field = "Can Write Enabled",					canWriteEnabled
		field = "Can Nbc Type",							canNbcType
		field = "Can Sleep Period",						canSleepPeriodMs
	
	
		
	dialog = tle8888, "TLE8888", yAxis
		field = "TLE8888 Chip Select", 					tle8888_cs
		field = "TLE8888 SPI", 							tle8888spiDevice
		field = "useTLE8888_hall_mode",					useTLE8888_hall_mode
		field = "useTLE8888 cranking reset hack",		useTLE8888_cranking_hack
		commandButton = "Reinit",						cmd_tle8888_init

	dialog = connection, "", 	yAxis
		field = "STM32 vRef voltage",					adcVcc
		panel = tsPort
		panel = canBus
		panel = tle8888

		
	    
	
		


		
	dialog = spiFunction, "SPI settings"
		field = "!ECU reboot needed to apply these settings"
		field = "SPI1 enable",							is_enabled_spi_1
		field = "SPI1 MOSI",							spi1mosiPin, {is_enabled_spi_1 == 1}
		field = "SPI1mosi mode",						spi1MosiMode, {is_enabled_spi_1 == 1}
		field = "SPI1 MISO",							spi1misoPin, {is_enabled_spi_1 == 1}
		field = "SPI1miso mode",						spi1MisoMode, {is_enabled_spi_1 == 1}
		field = "SPI1 SCK",								spi1sckPin, {is_enabled_spi_1 == 1}
		field = "SPI1sck mode",							spi1SckMode, {is_enabled_spi_1 == 1}

		field = "SPI2 enable",							is_enabled_spi_2
		field = "SPI2 MOSI",							spi2mosiPin, {is_enabled_spi_2 == 1}
		field = "SPI2mosi mode",						spi2MosiMode, {is_enabled_spi_2 == 1}
		field = "SPI2 MISO",							spi2misoPin, {is_enabled_spi_2 == 1}
		field = "SPI2miso mode",						spi2MisoMode, {is_enabled_spi_2 == 1}
		field = "SPI2 SCK",								spi2sckPin, {is_enabled_spi_2 == 1}
		field = "SPI2sck mode",							spi2SckMode, {is_enabled_spi_2 == 1}

		field = "SPI3 enable",							is_enabled_spi_3
		field = "SPI3 MOSI",							spi3mosiPin, {is_enabled_spi_3 == 1}
		field = "SPI3mosi mode",						spi3MosiMode, {is_enabled_spi_3 == 1}
		field = "SPI3 MISO",							spi3misoPin, {is_enabled_spi_3 == 1}
		field = "SPI3miso mode",						spi3MisoMode, {is_enabled_spi_3 == 1}
		field = "SPI3 SCK",								spi3sckPin, {is_enabled_spi_3 == 1}
		field = "SPI3sck mode",							spi3SckMode, {is_enabled_spi_3 == 1}
		


	dialog = allPinsSensors, "Sensors"
		field = "Coolant Sensor Input", 						clt_adcChannel
		field = "Intake Air Temperature Input", 						iat_adcChannel
		field = "vBatt Input", 						vbattAdcChannel
		field = "Throttle pedal Position Channel", 		throttlePedalPositionAdcChannel
		field = "TPS1 Input", 						tps1_1AdcChannel
		field = "TPS2 Input", 						tps2_1AdcChannel
		field = "MAF Sensor Input", 						mafAdcChannel
		field = "AFR Input", 						afr_hwChannel
		field = "Baro Sensor Input", 						baroSensor_hwChannel
		field = "MAP Sensor Input", 						map_sensor_hwChannel
		field = "FrequencyReportingMapInputPin",		frequencyReportingMapInputPin
		field = "Fuel Level Sensor", 						fuelLevelSensor
		field = "Vehicle Speed Input",				vehicleSpeedSensorInputPin
		field = "Clutch Down",						clutchDownPin
		field = "clutch Up",							clutchUpPin
		field = "brake Pedal",						brakePedalPin
		field = "A/C Switch",							acSwitchAdc
		field = "Aux Temperature #1",					auxTempSensor1_adcChannel
		field = "Aux Temperature #2",					auxTempSensor2_adcChannel
	

	

 dialog = etbpins, "E-Throttle"
        field = "Two-wire mode",						etb_use_two_wires
 	    field = "ETB#1 Dir #1",							etbIo1_directionPin1
		field = "ETB#1 Dir #2",							etbIo1_directionPin2  
		field = "ETB#1 Control #1",						etbIo1_controlPin1    
		field = "etb1_controlPinMode",					etbIo1_controlPinMode 
		field = "ETB#2 Dir #1",							etbIo2_directionPin1  
		field = "ETB#2 Dir #2",							etbIo2_directionPin2  
		field = "ETB#2 Control #1",						etbIo2_controlPin1    
        field = "etb2_controlPinMode",                  etbIo2_controlPinMode

 dialog = spipins, "SPI"
		field = "TLE8888 Chip Select",                  tle8888_cs
		field = "TLE8888 CS Mode",                      tle8888_csPinMode
		field = "TLE 8888 spi",                         tle8888spiDevice
field = "useTLE8888_hall_mode",					useTLE8888_hall_mode
		field = "useTLE8888 cranking reset hack",		useTLE8888_cranking_hack
		commandButton = "Reinit",						cmd_tle8888_init
		field = "SPI1 MOSI",							spi1mosiPin, {is_enabled_spi_1 == 1}
		field = "SPI1 MISO",							spi1misoPin, {is_enabled_spi_1 == 1}
		field = "SPI1 SCK",								spi1sckPin, {is_enabled_spi_1 == 1}
		field = "SPI2 MOSI",							spi2mosiPin, {is_enabled_spi_2 == 1}
		field = "SPI2 MISO",							spi2misoPin, {is_enabled_spi_2 == 1}
		field = "SPI2 SCK",								spi2sckPin, {is_enabled_spi_2 == 1}
		field = "SPI3 MOSI",							spi3mosiPin, {is_enabled_spi_3 == 1}
		field = "SPI3 MISO",							spi3misoPin, {is_enabled_spi_3 == 1}
		field = "SPI3 SCK",								spi3sckPin, {is_enabled_spi_3 == 1}
		



	dialog = allPins1_1
		panel = allPinsSensors
	

	dialog = idlepins, "Idle Solenoid"
		field = "Idle Solenoid Pin",					idle_solenoidPin
		field = "Idle Stepper Dir",						idle_stepperDirectionPin
		field = "Idle Stepper Dir Mode",				stepperDirectionPinMode
		field = "Idle Stepper Step",					idle_stepperStepPin
		field = "Idle Stepper Enable",					stepperEnablePin

	dialog = miscoutputs, "Misc Outputs"
		field = "Fuel Pump Pin",						fuelPumpPin
		field = "Fuel Pump Pin Mode",         	        fuelPumpPinMode
        field = "Tachometer output Pin",					tachOutputPin
		field = "Dizzy out Pin",         	    	    dizzySparkOutputPin
		field = "O2 heater pin",						o2heaterPin
		field = "Fan Pin",								fanPin
		field = "Fan Pin Mode",							fanPinMode
		field = "Main Relay Pin",  						mainRelayPin
		field = "Main Relay Mode",			         	mainRelayPinMode
		;field = "aux valve #1", 						auxValves1
		;field = "aux valve #2", 						auxValves2

	dialog = allPins1_2
	panel = etbpins
	    panel = idlepins
		panel = miscoutputs
		

	
	dialog = allPins1_3
	panel = spipins
		field = "CAN RX pin",							canRxPin
		field = "CAN TX pin",							canTxPin
	;	field = "servo#1",								servoOutputPins1
	;	field = "servo#2",								servoOutputPins2
	
	



	;dialog = fsiooutpins,"FSIO Outputs"

		dialog = allPins2_1
		field = "Injector Pin Mode",                    injectionPinMode
		field = "Injection Pin 1",						injectionPins1
		field = "Injection Pin 2",						injectionPins2
		field = "Injection Pin 3",						injectionPins3
		field = "Injection Pin 4",						injectionPins4
		field = "Injection Pin 5 ",						injectionPins5
		field = "Injection Pin 6 ",						injectionPins6
		field = "Injection Pin 7 ",						injectionPins7
		field = "Injection Pin 8 ",						injectionPins8
		field = "Injection Pin 9 ",						injectionPins9
		field = "Injection Pin 10 ",	    			injectionPins10
		field = "Injection Pin 11 ",					injectionPins11
		field = "Injection Pin 12 ",					injectionPins12
		


	dialog = allPins2_2
		field = "Ignition Pin 1",                       ignitionPins1
		field = "Ignition Pin 2",                       ignitionPins2
		field = "Ignition Pin 3",                       ignitionPins3
		field = "Ignition Pin 4",                       ignitionPins4
		field = "Ignition Pin 5",                       ignitionPins5
		field = "Ignition Pin 6",                       ignitionPins6
		field = "Ignition Pin 7",                       ignitionPins7
		field = "Ignition Pin 8",                       ignitionPins8
		field = "Ignition Pin 9",                       ignitionPins9
		field = "Ignition Pin 10",                      ignitionPins10
		field = "Ignition Pin 11",                      ignitionPins11
		field = "Ignition Pin 12",                      ignitionPins12
     




	dialog = allPins1_1_and_2, "", xAxis
		panel = allPins1_1
		panel = allPins1_2

	dialog = allPins1, "All Pins 1/2", xAxis
		panel = allPins1_1_and_2
		panel = allPins1_3

	dialog = allPins2_1_and_2, "", xAxis
		panel = allPins2_1
		panel = allPins2_2
        ;panel=	fsiooutpins
	dialog = allPins2, "All Pins 2/2", xAxis
		panel = allPins2_1_and_2


		dialog = ignitionOutputs, "Ignition Outputs"
		field = "Ignition Pin Mode",         	        ignitionPinMode, {isIgnitionEnabled == 1}
		field = "Ignition Pin 1",                       ignitionPins1, {isIgnitionEnabled == 1}
		field = "Ignition Pin 2",                       ignitionPins2, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 1) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 2) || (firingOrder == 7) || (firingOrder == 9) || (firingOrder == 11) || (firingOrder == 12)))}
		field = "Ignition Pin 3",                       ignitionPins3, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 2) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 1) || (firingOrder == 3) || (firingOrder == 4) || (firingOrder == 5) || (firingOrder == 9)))}
		field = "Ignition Pin 4",                       ignitionPins4, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 3) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 7) || (firingOrder == 12)))}
		field = "Ignition Pin 5",                       ignitionPins5, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 4) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 4) || (firingOrder == 12)))}
		field = "Ignition Pin 6",                       ignitionPins6, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 5) && (ignitionMode !=2 || twoWireBatchIgnition == 1 )}
		field = "Ignition Pin 7",                       ignitionPins7, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 6) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 11)))}
		field = "Ignition Pin 8",                       ignitionPins8, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 7) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 9",                       ignitionPins9, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 8) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 10",                      ignitionPins10, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 9) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 11",                      ignitionPins11, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 10) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "Ignition Pin 12",                      ignitionPins12, {isIgnitionEnabled == 1 && (ignitionMode != 0 && cylindersCount > 11) && (ignitionMode !=2 || twoWireBatchIgnition == 1 || ((firingOrder == 5) || (firingOrder == 11)))}
		field = "This is useful to have tachometer working"
		field = "   while converting from distributor"
		field = "Dizzy out Pin",         	    	    dizzySparkOutputPin, {isIgnitionEnabled == 1}
		field = "Dizzy out Pin Mode",                   dizzySparkOutputPinMode, {isIgnitionEnabled == 1}




	dialog = parkingLot, "Experimental/Broken"
		field = "#System hacks"
		field = "Global fuel correction", 				globalFuelCorrection
		field = "Ignition Math Logic @",				ignMathCalculateAtIndex
		field = "MAP Averaging Logic @",				mapAveragingSchedulingAtIndex

		field = "Target temperature", 			postCrankingTargetClt


 dialog = tpsAdGauge, "TPS ADC"
            gauge = tpsADCGauge
							
        dialog = calmode, "Calibration Mode"
		     radio = horizontal, "", calibrateMode
		
        dialog = tpsAdcFields, "TPS Min / Max"
		    commandButton = "Calibrate ETB TPS", cmd_test_ac_relay, {calibrateMode}
			commandButton = "New Test Command",   cmd_calibrate_etb_tps   , {calibrateMode}     
		    field = "",
            field = "TPS Min", tpsMin
		    field = "TPS Max", tpsMax
		    		
		dialog = fieldsAndGauge, "", xAxis
		     panel = tpsAdcFields
			 panel = tpsADGauge
			 		
		dialog = driveByWireCal, ""
		     panel = calmode
			 panel = fieldsAndGauge

dialog = driveByWirePedal,""
			 field = "Throttle Pedal Up",					throttlePedalUpVoltage
		field = "Throttle Pedal Wide Open",				throttlePedalWOTVoltage
dialog = analogInputSettings, "Analog Input Settings"
		field = "!ECU reboot needed to apply these settings"



	dialog = multisparkDwellParams, "Delay & Dwell"
		field = "Spark Duration",						multisparkSparkDuration, {multisparkEnable}
		field = "Dwell",								multisparkDwell, {multisparkEnable}

	dialog = multisparkMain, "Configuration"
		field = "Maximum engine speed",					multisparkMaxRpm, {multisparkEnable}
		field = "Fire sparks for this angle duration"	multisparkMaxSparkingAngle, {multisparkEnable}
		field = "Maximum extra spark count"				multisparkMaxExtraSparkCount, {multisparkEnable}

	dialog = multisparkSettings, "Multispark"
		field = "#WARNING! These settings have the potential to overheat ignition components"
		field = "#and cause other nasty misbehavior.  Use with care, at your own risk!"
		field = "Enable Multiple Sparks",				multisparkEnable
		panel = multisparkMain
		panel = multisparkDwellParams







 dialog = frpmTableBins, "RPM Bins for Fuel Tables"       
 array1D   = "", "Fuel RPM  %INDEX% ", fuelRpmBins 

 
 dialog = floadTableBins, "LOAD Bins for Fuel Tables"       
 array1D   = "", "Fuel LOAD  %INDEX% ", fuelLoadBins 

dialog = IrpmTableBins, "RPM Bins for Ignition Tables"       
 array1D   = "", "Ignition RPM  %INDEX% ", ignitionRpmBins 

dialog = IloadTableBins, "LOAD Bins for Ignition Tables"       
 array1D   = "", "Ignition LOAD  %INDEX% ", ignitionLoadBins 
 
;;Injector staging
  ;  dialog = stagingTableDialog_north, ""
      ;  field = "Staging enabled", stagingEnabled
      ;  field = "Staging mode",   stagingMode
      ;  field = "Size of primary injectors",    stagedInjSizePri,             { stagingEnabled }
      ;  field = "Size of secondary injectors",  stagedInjSizeSec,             { stagingEnabled }

  ;  dialog = stagingTableDialog_south, ""
  ;      panel = fsioTable1Tbl

  ;  dialog = stagingTableDialog, "Staged injection"
   ;     panel = stagingTableDialog_north, North
   ;     panel = stagingTableDialog_south, South
[Tools]
 ;addTool = toolName, PanelName
 addTool = veTableGenerator, "VE Table Generator", fuelTableTbl
 addTool = afrTableGenerator, "AFR Table Generator", afrTableTbl
 
